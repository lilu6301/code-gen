[
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_zW1HoNKUEeKs5NrvDV7TcA\" name=\"SoftwareDefinedRadioApp\" constructor=\"\" includes=\"\" postSimulation=\"cf_trace_report(&quot;************************************************************&quot;);&#xD;&#xA;cf_trace_report(&quot;Frames = %i&quot;, TotalFrames);&#xD;&#xA;cf_trace_gui_f_param(&quot;Frames&quot;, (int) TotalFrames);&#xD;&#xA;if(TotalFrames>0){&#xD;&#xA;cf_trace_report(&quot;AverageFrameLatency = %i ms&quot;, &#xD;&#xA;&#x9;(int) (AverageFrameLatency.to_scalar(CF_MS) / TotalFrames));&#xD;&#xA;cf_trace_gui_f_param(&quot;AverageFrameLatency&quot;, &#xD;&#xA;&#x9;(int) (AverageFrameLatency.to_scalar(CF_MS) / TotalFrames), &quot;ms&quot;);&#xD;&#xA;}&#xD;&#xA;cf_trace_report(&quot;TotalSizeFrames = %i MB&quot;,&#xD;&#xA;&#x9;(int) TotalSizeFrames.to_scalar(CF_MBYTE));&#xD;&#xA;cf_trace_gui_f_param(&quot;TotalFramesSize&quot;,&#xD;&#xA;&#x9;(int) TotalSizeFrames.to_scalar(CF_MBYTE), &quot;MB&quot;);&#xD;&#xA;cf_trace_report(&quot;Bursts = %i&quot;, TotalBursts);&#xD;&#xA;cf_trace_gui_f_param(&quot;Bursts&quot;, (int) TotalBursts);&#xD;&#xA;if(TotalBursts>0){&#xD;&#xA;cf_trace_report(&quot;AverageBurstLatency = %i ms&quot;,&#xD;&#xA;&#x9;(int) (AverageBurstLatency.to_scalar(CF_MS) / TotalBursts));&#xD;&#xA;cf_trace_gui_f_param(&quot;AverageBurstLatency&quot;,&#xD;&#xA;&#x9;(int) (AverageBurstLatency.to_scalar(CF_MS) / TotalBursts), &quot;ms&quot;);&#xD;&#xA;}&#xD;&#xA;cf_trace_report(&quot;************************************************************&quot;);\" version=\"5.0.0_alpha2_20130531-1453\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" postElaboration=\"\" globalTypeDeclarations=\"#define BURSTPERIOD 1000&#xD;&#xA;#define NVIDEO 120&#xD;&#xA;#define MAXBYTESINFRAME 233280&#xD;&#xA;typedef int DefVideoIndex;&#xD;&#xA;typedef int DefBurstsInVideo;&#xD;&#xA;typedef int DefFramesInBurst;&#xD;&#xA;typedef enum{NOCASE,CALL,VIDEO} DefUseCase;&#xD;&#xA;typedef enum{START,STOP,SUSPEND,RESUME,FILEREQUEST,VIDEOREQUEST} DefCommand;&#xD;&#xA;typedef enum{STARTFILE,ENDFILE,FILEDATA} DefFileInfo;&#xD;&#xA;typedef enum{BURSTVIDEO, FRAMEVIDEO} DefVideoInfo;\" globalDeclarations=\"extern int TotalBursts;&#xD;&#xA;extern int TotalFrames;&#xD;&#xA;extern cf_dt::cf_time AverageBurstLatency;&#xD;&#xA;extern cf_dt::cf_time AverageFrameLatency;&#xD;&#xA;extern cf_dt::cf_data_size TotalSizeFrames;&#xD;&#xA;extern int TabSendBurstSize[48];&#xD;&#xA;extern int cptSendBurstSize;\" globalDefinitions=\"int TotalBursts = 0;&#xD;&#xA;int TotalFrames = 0;&#xD;&#xA;cf_dt::cf_time AverageBurstLatency( 0.0 , CF_US );&#xD;&#xA;cf_dt::cf_time AverageFrameLatency( 0.0 , CF_US );&#xD;&#xA;cf_dt::cf_data_size TotalSizeFrames = cf_data_size( 0, CF_BYTE );&#xD;&#xA;&#xD;&#xA;int TabSendBurstSize[48]={460000, 2760000, 920000, 4140000, 2760000, 2300000, 1840000, 4140000, 4140000, 3680000, 920000, 4140000, 3680000, 2760000, 1840000, 460000, 460000, 1840000, 920000, 920000, 4600000, 2300000, 920000, 460000, 460000, 1840000, 2760000, 2760000, 3220000, 3220000, 920000, 3220000, 2300000, 1840000, 460000, 3220000, 3680000, 4140000, 2760000, 1840000, 4140000, 3680000, 4600000, 4600000, 2760000, 920000, 2300000, 1380000};&#xD;&#xA;int cptSendBurstSize=0;\">\n  <annotations xmi:id=\"_zW1HodKUEeKs5NrvDV7TcA\" source=\"codegen\">\n    <details xmi:id=\"_zW1HotKUEeKs5NrvDV7TcA\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"SoftwareDefinedRadio/gen-sysc\"/>\n    <details xmi:id=\"_zW1Ho9KUEeKs5NrvDV7TcA\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"SoftwareDefinedRadio/gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_zW1HpNKUEeKs5NrvDV7TcA\" source=\"build\">\n    <details xmi:id=\"_zW1HpdKUEeKs5NrvDV7TcA\" key=\"path\" value=\"SoftwareDefinedRadio/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_MCCdINKVEeKs5NrvDV7TcA\" source=\"cdt.configurations\">\n    <details xmi:id=\"_feESAFWgEeeRvfyx0QXVfQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.434715063\"/>\n    <details xmi:id=\"_ZsEXQGFeEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1732784887\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_32aRU9KUEeKs5NrvDV7TcA\" name=\"DefCall\" definition=\"typedef struct{&#xD;&#x9;DefUseCase UseCase;&#xD;&#x9;DefCommand Command;&#xD;&#x9;DefVideoIndex VideoIndex;&#xD;&#x9;DefFileInfo FileInfo;&#x9;&#xD;}DefCall;\" tracePayload=\"    trace &lt;&lt; 0;\"/>\n  <dataTypes xmi:id=\"_32aRVtKUEeKs5NrvDV7TcA\" name=\"DefNet\" definition=\"typedef struct{&#xD;&#x9;DefVideoIndex VideoIndex;&#xD;&#x9;DefFramesInBurst FramesInBurst;&#xD;&#x9;DefBurstsInVideo BurstsInVideo;&#x9;&#xD;}DefNet;\" tracePayload=\"    trace &lt;&lt; 0;\"/>\n  <dataTypes xmi:id=\"_32aRWdKUEeKs5NrvDV7TcA\" name=\"DefVideo\" definition=\"typedef struct{&#xD;&#x9;cf_dt::cf_time TimeStampSend;&#xD;&#x9;cf_dt::cf_time TimeStampGoal; &#x9;&#xD;&#x9;DefVideoInfo VideoInfo;&#xD;&#x9;DefFramesInBurst FramesInBurst;&#x9;&#xD;}DefVideo;\" copyPayload=\"\" tracePayload=\"    trace &lt;&lt; 0;\" readTime=\"\" writeTime=\"\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_4XWlwNKVEeKs5NrvDV7TcA\" name=\"Scenario\" documentation=\"Scenario\" default=\"BothStatic\" visibility=\"PUBLIC\" value=\"BothStatic\">\n    <values>BothStatic</values>\n    <values>DynamicVideo</values>\n    <values>DynamicCall</values>\n    <values>BothDynamic</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"__uoVUNKVEeKs5NrvDV7TcA\" name=\"VideoTimeout\" documentation=\"VideoTimeout (sec)\" default=\"20\" visibility=\"PUBLIC\" value=\"20\" min=\"15\" max=\"40\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_F07lMNKWEeKs5NrvDV7TcA\" name=\"CallTimeout\" documentation=\"CallTimeout (sec)\" default=\"20\" visibility=\"PUBLIC\" min=\"15\" max=\"40\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_K43ZINKWEeKs5NrvDV7TcA\" name=\"FramesBufferSize\" documentation=\"FramesBufferSize\" default=\"120\" visibility=\"PUBLIC\" value=\"60\" min=\"30\" max=\"150\" step=\"30\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_PJEqENKWEeKs5NrvDV7TcA\" name=\"BurstSyncDelay\" documentation=\"BurstSyncDelay (sec)\" default=\"2.0\" visibility=\"PUBLIC\" type=\"DECIMAL\" min=\"0.5\" max=\"4.0\" step=\"0.5\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_VqvAQNKWEeKs5NrvDV7TcA\" name=\"BurstBufferSize\" documentation=\"BurstBufferSize\" default=\"2\" visibility=\"PUBLIC\" value=\"2\" min=\"1\" max=\"4\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_Z6flQNKWEeKs5NrvDV7TcA\" name=\"FramesSyncDelay\" documentation=\"FramesSyncDelay (sec)\" default=\"2.0\" visibility=\"PUBLIC\" type=\"DECIMAL\" min=\"0.5\" max=\"4.0\" step=\"0.5\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hZNZkNKWEeKs5NrvDV7TcA\" name=\"FramesPerSecond\" documentation=\"FramesPerSecond\" default=\"15\" visibility=\"PUBLIC\" value=\"15\" min=\"10\" max=\"30\" step=\"5\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_Iyx9APJuEeSR7I9nPJUHug\" name=\"DATA\" documentation=\"value generator\" default=\"RAND\" visibility=\"PUBLIC\" value=\"FIX\">\n    <values>FIX</values>\n    <values>RAND</values>\n  </designParameters>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_zW1Hs9KUEeKs5NrvDV7TcA\" name=\"SoftwareDefinedRadioAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETENKUEeKs5NrvDV7TcA\" name=\"MobilePhone\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_32E60dKUEeKs5NrvDV7TcA\" name=\"NetToDVB\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32M2G9KUEeKs5NrvDV7TcA\" ports=\"_32E6dtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32E60tKUEeKs5NrvDV7TcA\" name=\"Video\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32M2CtKUEeKs5NrvDV7TcA\" ports=\"_32ETbNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32E609KUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32MPONKUEeKs5NrvDV7TcA\" ports=\"_32EUWtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32E61NKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32MPSdKUEeKs5NrvDV7TcA\" ports=\"_32EUW9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32E61dKUEeKs5NrvDV7TcA\" name=\"Response\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32M1-dKUEeKs5NrvDV7TcA\" ports=\"_32ETcdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32E61tKUEeKs5NrvDV7TcA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32LAydKUEeKs5NrvDV7TcA\" ports=\"_32ETctKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ETEdKUEeKs5NrvDV7TcA\" name=\"MobilePhoneStructSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETEtKUEeKs5NrvDV7TcA\" name=\"ApplicationLayer\" constructor=\"\" includes=\"\" declarations=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32ETbNKUEeKs5NrvDV7TcA\" name=\"Video\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_32E60tKUEeKs5NrvDV7TcA\" ports=\"_32ETZtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETbdKUEeKs5NrvDV7TcA\" name=\"RTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32E6ydKUEeKs5NrvDV7TcA\" ports=\"_32ETZ9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETbtKUEeKs5NrvDV7TcA\" name=\"AppToCtrl\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32E6sdKUEeKs5NrvDV7TcA\" ports=\"_32ETR9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETb9KUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32E6p9KUEeKs5NrvDV7TcA\" ports=\"_32ETSNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETcNKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32E6ndKUEeKs5NrvDV7TcA\" ports=\"_32ETSdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETcdKUEeKs5NrvDV7TcA\" name=\"Response\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_32E61dKUEeKs5NrvDV7TcA\" ports=\"_32ETStKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32ETctKUEeKs5NrvDV7TcA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_32E61tKUEeKs5NrvDV7TcA\" ports=\"_32ETS9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ETE9KUEeKs5NrvDV7TcA\" name=\"ApplicationLayerStrucSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETFNKUEeKs5NrvDV7TcA\" name=\"CallApplication\" constructor=\"\" declarations=\"bool SendToCtrl;&#xD;bool SendToUser;&#xD;bool SendToCallStack;&#xD;int FileIndex;\" definitions=\"\" cyclePeriod=\"10 ns\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_32ETR9KUEeKs5NrvDV7TcA\" name=\"AppToCtrl\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETQdKUEeKs5NrvDV7TcA\" port=\"_32ETbtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETSNKUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETKtKUEeKs5NrvDV7TcA\" port=\"_32ETb9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETSdKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETNdKUEeKs5NrvDV7TcA\" port=\"_32ETcNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETStKUEeKs5NrvDV7TcA\" name=\"Response\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETO9KUEeKs5NrvDV7TcA\" port=\"_32ETcdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETS9KUEeKs5NrvDV7TcA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETH9KUEeKs5NrvDV7TcA\" port=\"_32ETctKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ETFdKUEeKs5NrvDV7TcA\" name=\"CallApplicationBehBh\" firstStatement=\"_32ETFtKUEeKs5NrvDV7TcA\">\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETFtKUEeKs5NrvDV7TcA\" name=\"Init\" isFirstOf=\"_32ETFdKUEeKs5NrvDV7TcA\" next=\"_32ETGtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;SendToUser=false;&#x9;&#xA;&#x9;SendToCtrl=false;&#x9;&#xA;&#x9;SendToCallStack=false;&#x9;&#xA;&#x9;FileIndex=0;\" executionTime=\"10 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ETGtKUEeKs5NrvDV7TcA\" name=\"Loop1\" firstStatement=\"_32ETHNKUEeKs5NrvDV7TcA\" lastStatement=\"_32ETQdKUEeKs5NrvDV7TcA\" previous=\"_32ETFtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:MultipleGuardedStatement\" xmi:id=\"_32ETHNKUEeKs5NrvDV7TcA\" name=\"MultipleWait\" isFirstOf=\"_32ETGtKUEeKs5NrvDV7TcA\" next=\"_32ETNdKUEeKs5NrvDV7TcA\">\n                  <guardedBranches xmi:id=\"_32ETHdKUEeKs5NrvDV7TcA\" firstStatement=\"_32ETKtKUEeKs5NrvDV7TcA\" lastStatement=\"_32ETMdKUEeKs5NrvDV7TcA\"/>\n                  <guardedBranches xmi:id=\"_32ETHtKUEeKs5NrvDV7TcA\" firstStatement=\"_32ETH9KUEeKs5NrvDV7TcA\" lastStatement=\"_32ETJtKUEeKs5NrvDV7TcA\"/>\n                </statements>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETH9KUEeKs5NrvDV7TcA\" name=\"Cond1\" isFirstOf=\"_32ETHtKUEeKs5NrvDV7TcA\" next=\"_32ETJtKUEeKs5NrvDV7TcA\" port=\"_32ETS9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETJtKUEeKs5NrvDV7TcA\" name=\"FromUser\" isLastOf=\"_32ETHtKUEeKs5NrvDV7TcA\" previous=\"_32ETH9KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;SendToUser=false;&#x9;&#xA;&#x9;SendToCtrl=false;&#x9;&#xA;&#x9;SendToCallStack=false;&#x9;&#xA;&#x9;switch(Request.UseCase){&#x9;&#x9;&#xA;&#x9;&#x9;case NOCASE:&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;AppToHTTP.Command=Request.Command;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(Request.Command==FILEREQUEST){&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;App: Received file request&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;AppToHTTP.VideoIndex=Request.VideoIndex;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;SendToCallStack=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}else if (Request.Command==VIDEOREQUEST) {&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;App: Received video request&quot;);&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;AppToHTTP.VideoIndex=Request.VideoIndex;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;SendToCallStack=true;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;AppToCtrl.UseCase=VIDEO;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;AppToCtrl.Command=START;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;SendToCtrl=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#xA;&#x9;&#x9;case CALL:&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;AppToCtrl.UseCase=Request.UseCase;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;AppToCtrl.Command=Request.Command;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;SendToCtrl=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#xA;&#x9;&#x9;case VIDEO:&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;AppToCtrl.UseCase=Request.UseCase;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;AppToCtrl.Command=Request.Command;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;SendToCtrl=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#xA;&#x9;&#x9;default:&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;break;&#x9;&#xA;&#x9;}\" executionTime=\"20 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETKtKUEeKs5NrvDV7TcA\" name=\"Cond2\" isFirstOf=\"_32ETHdKUEeKs5NrvDV7TcA\" next=\"_32ETMdKUEeKs5NrvDV7TcA\" port=\"_32ETSNKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETMdKUEeKs5NrvDV7TcA\" name=\"FromCallStack\" isLastOf=\"_32ETHdKUEeKs5NrvDV7TcA\" previous=\"_32ETKtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;SendToUser=false;&#x9;&#xA;&#x9;SendToCtrl=false;&#x9;&#xA;&#x9;SendToCallStack=false;&#x9;&#xA;&#x9;if(HTTPToApp.FileInfo==STARTFILE){&#x9;&#x9;&#xA;&#x9;&#x9;FileIndex=0;&#x9;&#xA;&#x9;}else if(HTTPToApp.FileInfo==FILEDATA){&#x9;&#x9;&#xA;&#x9;&#x9;FileIndex++;&#x9;&#xA;&#x9;}else if(HTTPToApp.FileInfo==ENDFILE){&#x9;&#x9;&#xA;&#x9;&#x9;SendToUser=true;&#x9;&#x9;&#xA;&#x9;&#x9;FileIndex=0;&#x9;&#xA;&#x9;}\" executionTime=\"20 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETNdKUEeKs5NrvDV7TcA\" name=\"Action1\" previous=\"_32ETHNKUEeKs5NrvDV7TcA\" next=\"_32ETO9KUEeKs5NrvDV7TcA\" port=\"_32ETSdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"SendToCallStack\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETO9KUEeKs5NrvDV7TcA\" name=\"Action2\" previous=\"_32ETNdKUEeKs5NrvDV7TcA\" next=\"_32ETQdKUEeKs5NrvDV7TcA\" port=\"_32ETStKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"SendToUser\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETQdKUEeKs5NrvDV7TcA\" name=\"Action11\" isLastOf=\"_32ETGtKUEeKs5NrvDV7TcA\" previous=\"_32ETO9KUEeKs5NrvDV7TcA\" port=\"_32ETR9KUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"SendToCtrl\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETUdKUEeKs5NrvDV7TcA\" name=\"VideoApplication\" declarations=\"cf_dt::cf_data_size SizeFrame;\" definitions=\"\" cyclePeriod=\"10 ns\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_32ETZtKUEeKs5NrvDV7TcA\" name=\"Video\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETYNKUEeKs5NrvDV7TcA\" port=\"_32ETbNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETZ9KUEeKs5NrvDV7TcA\" name=\"RTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETU9KUEeKs5NrvDV7TcA\" port=\"_32ETbdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ETUtKUEeKs5NrvDV7TcA\" name=\"VideoApplicationBehaviorBh\" firstStatement=\"_32ETWtKUEeKs5NrvDV7TcA\">\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETU9KUEeKs5NrvDV7TcA\" name=\"Cond21\" isFirstOf=\"_32ETWtKUEeKs5NrvDV7TcA\" next=\"_32ETXNKUEeKs5NrvDV7TcA\" port=\"_32ETZ9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ETWtKUEeKs5NrvDV7TcA\" name=\"Loop25\" isFirstOf=\"_32ETUtKUEeKs5NrvDV7TcA\" firstStatement=\"_32ETU9KUEeKs5NrvDV7TcA\" lastStatement=\"_32ETYNKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETXNKUEeKs5NrvDV7TcA\" name=\"Display\" previous=\"_32ETU9KUEeKs5NrvDV7TcA\" next=\"_32ETYNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;SizeFrame=RTPToApp_trans.get_user_data_length(); &#xA;&#x9;TotalSizeFrames+=SizeFrame;&#x9;&#xA;&#x9;TotalFrames++;&#x9;&#x9;\" executionTime=\"5 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETYNKUEeKs5NrvDV7TcA\" name=\"Action32\" isLastOf=\"_32ETWtKUEeKs5NrvDV7TcA\" previous=\"_32ETXNKUEeKs5NrvDV7TcA\" port=\"_32ETZtKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n              </refinement>\n            </models>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETd9KUEeKs5NrvDV7TcA\" name=\"CallProtocolStack\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32EUWtKUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_32E609KUEeKs5NrvDV7TcA\" ports=\"_32EULNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32EUW9KUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_32E61NKUEeKs5NrvDV7TcA\" ports=\"_32EULdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32EUXNKUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32E6p9KUEeKs5NrvDV7TcA\" ports=\"_32ETs9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32EUXdKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32E6ndKUEeKs5NrvDV7TcA\" ports=\"_32ETtNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ETeNKUEeKs5NrvDV7TcA\" name=\"CallProtocolStackStrucSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETedKUEeKs5NrvDV7TcA\" name=\"HTTPTCP\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_32ETsdKUEeKs5NrvDV7TcA\" name=\"IPToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32EUO9KUEeKs5NrvDV7TcA\" ports=\"_32ETrNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETstKUEeKs5NrvDV7TcA\" name=\"HTTPToIP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32EUMdKUEeKs5NrvDV7TcA\" ports=\"_32ETkdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETs9KUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_32EUXNKUEeKs5NrvDV7TcA\" ports=\"_32ETrdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ETtNKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_32EUXdKUEeKs5NrvDV7TcA\" ports=\"_32ETktKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ETetKUEeKs5NrvDV7TcA\" name=\"HTTPTCPStrucSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETe9KUEeKs5NrvDV7TcA\" name=\"HTTPTCP_Send\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" affinity=\"\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32ETkdKUEeKs5NrvDV7TcA\" name=\"HTTPToIP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETitKUEeKs5NrvDV7TcA\" port=\"_32ETstKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32ETktKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETf9KUEeKs5NrvDV7TcA\" port=\"_32ETtNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ETfNKUEeKs5NrvDV7TcA\" name=\"HTTPTCP_SBBh\" firstStatement=\"_32ETfdKUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ETfdKUEeKs5NrvDV7TcA\" name=\"Loop2\" isFirstOf=\"_32ETfNKUEeKs5NrvDV7TcA\" firstStatement=\"_32ETf9KUEeKs5NrvDV7TcA\" lastStatement=\"_32ETitKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETf9KUEeKs5NrvDV7TcA\" name=\"Cond3\" isFirstOf=\"_32ETfdKUEeKs5NrvDV7TcA\" next=\"_32EThtKUEeKs5NrvDV7TcA\" port=\"_32ETktKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32EThtKUEeKs5NrvDV7TcA\" name=\"UpHTTP\" previous=\"_32ETf9KUEeKs5NrvDV7TcA\" next=\"_32ETitKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;HTTPToIP=AppToHTTP;\" executionTime=\"30 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETitKUEeKs5NrvDV7TcA\" name=\"Action3\" isLastOf=\"_32ETfdKUEeKs5NrvDV7TcA\" previous=\"_32EThtKUEeKs5NrvDV7TcA\" port=\"_32ETkdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETltKUEeKs5NrvDV7TcA\" name=\"HTTPTCP_Receive\" includes=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32ETrNKUEeKs5NrvDV7TcA\" name=\"IPToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETmtKUEeKs5NrvDV7TcA\" port=\"_32ETsdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32ETrdKUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETpdKUEeKs5NrvDV7TcA\" port=\"_32ETs9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ETl9KUEeKs5NrvDV7TcA\" name=\"HTTPTCP_RBBh\" firstStatement=\"_32ETmNKUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ETmNKUEeKs5NrvDV7TcA\" name=\"Loop3\" isFirstOf=\"_32ETl9KUEeKs5NrvDV7TcA\" firstStatement=\"_32ETmtKUEeKs5NrvDV7TcA\" lastStatement=\"_32ETpdKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETmtKUEeKs5NrvDV7TcA\" name=\"Cond4\" isFirstOf=\"_32ETmNKUEeKs5NrvDV7TcA\" next=\"_32ETodKUEeKs5NrvDV7TcA\" port=\"_32ETrNKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETodKUEeKs5NrvDV7TcA\" name=\"DownHTTP\" previous=\"_32ETmtKUEeKs5NrvDV7TcA\" next=\"_32ETpdKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;HTTPToApp=IPToHTTP;\" executionTime=\"30 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETpdKUEeKs5NrvDV7TcA\" name=\"Action5\" isLastOf=\"_32ETmNKUEeKs5NrvDV7TcA\" previous=\"_32ETodKUEeKs5NrvDV7TcA\" port=\"_32ETrdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETt9KUEeKs5NrvDV7TcA\" name=\"IPCall\" includes=\"\" declarations=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_32ET7tKUEeKs5NrvDV7TcA\" name=\"UMTSToIP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32EUT9KUEeKs5NrvDV7TcA\" ports=\"_32ET6dKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ET79KUEeKs5NrvDV7TcA\" name=\"IPToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32EURdKUEeKs5NrvDV7TcA\" ports=\"_32ETz9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ET8NKUEeKs5NrvDV7TcA\" name=\"IPToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32EUO9KUEeKs5NrvDV7TcA\" ports=\"_32ET6tKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32ET8dKUEeKs5NrvDV7TcA\" name=\"HTTPToIP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32EUMdKUEeKs5NrvDV7TcA\" ports=\"_32ET0NKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ETuNKUEeKs5NrvDV7TcA\" name=\"IPCallStrucSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ETudKUEeKs5NrvDV7TcA\" name=\"IPCall_Send\" includes=\"\" initializations=\"\" cyclePeriod=\"10 ns\" scope=\"ENVIRONMENT\" doNotStart=\"true\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32ETz9KUEeKs5NrvDV7TcA\" name=\"IPToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ETyNKUEeKs5NrvDV7TcA\" port=\"_32ET79KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32ET0NKUEeKs5NrvDV7TcA\" name=\"HTTPToIP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ETvdKUEeKs5NrvDV7TcA\" port=\"_32ET8dKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ETutKUEeKs5NrvDV7TcA\" name=\"IPCall_SendBehBh\" firstStatement=\"_32ETu9KUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ETu9KUEeKs5NrvDV7TcA\" name=\"Loop4\" isFirstOf=\"_32ETutKUEeKs5NrvDV7TcA\" firstStatement=\"_32ETvdKUEeKs5NrvDV7TcA\" lastStatement=\"_32ETyNKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ETvdKUEeKs5NrvDV7TcA\" name=\"Cond5\" isFirstOf=\"_32ETu9KUEeKs5NrvDV7TcA\" next=\"_32ETxNKUEeKs5NrvDV7TcA\" port=\"_32ET0NKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ETxNKUEeKs5NrvDV7TcA\" name=\"UpIP\" previous=\"_32ETvdKUEeKs5NrvDV7TcA\" next=\"_32ETyNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;IPToUMTS=HTTPToIP;\" executionTime=\"30 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ETyNKUEeKs5NrvDV7TcA\" name=\"Action6\" isLastOf=\"_32ETu9KUEeKs5NrvDV7TcA\" previous=\"_32ETxNKUEeKs5NrvDV7TcA\" port=\"_32ETz9KUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ET09KUEeKs5NrvDV7TcA\" name=\"IPCall_Receive\" includes=\"\" declarations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" affinity=\"\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32ET6dKUEeKs5NrvDV7TcA\" name=\"UMTSToIP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ET19KUEeKs5NrvDV7TcA\" port=\"_32ET7tKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32ET6tKUEeKs5NrvDV7TcA\" name=\"IPToHTTP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32ET4tKUEeKs5NrvDV7TcA\" port=\"_32ET8NKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ET1NKUEeKs5NrvDV7TcA\" name=\"IPCall_RecBehBh\" firstStatement=\"_32ET1dKUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ET1dKUEeKs5NrvDV7TcA\" name=\"Loop5\" isFirstOf=\"_32ET1NKUEeKs5NrvDV7TcA\" firstStatement=\"_32ET19KUEeKs5NrvDV7TcA\" lastStatement=\"_32ET4tKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ET19KUEeKs5NrvDV7TcA\" name=\"Cond6\" isFirstOf=\"_32ET1dKUEeKs5NrvDV7TcA\" next=\"_32ET3tKUEeKs5NrvDV7TcA\" port=\"_32ET6dKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32ET3tKUEeKs5NrvDV7TcA\" name=\"DownIP\" previous=\"_32ET19KUEeKs5NrvDV7TcA\" next=\"_32ET4tKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;IPToHTTP=UMTSToIP;\" executionTime=\"30 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32ET4tKUEeKs5NrvDV7TcA\" name=\"Action7\" isLastOf=\"_32ET1dKUEeKs5NrvDV7TcA\" previous=\"_32ET3tKUEeKs5NrvDV7TcA\" port=\"_32ET6tKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ET9NKUEeKs5NrvDV7TcA\" name=\"UMTS\" includes=\"\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_32EUK9KUEeKs5NrvDV7TcA\" name=\"UMTSToIP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32EUT9KUEeKs5NrvDV7TcA\" ports=\"_32EUJtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32EULNKUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_32EUWtKUEeKs5NrvDV7TcA\" ports=\"_32EUJ9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32EULdKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_32EUW9KUEeKs5NrvDV7TcA\" ports=\"_32EUDdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32EULtKUEeKs5NrvDV7TcA\" name=\"IPToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32EURdKUEeKs5NrvDV7TcA\" ports=\"_32EUDNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32ET9dKUEeKs5NrvDV7TcA\" name=\"UMTSStrucSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32ET9tKUEeKs5NrvDV7TcA\" name=\"UMTS_Send\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" affinity=\"\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32EUDNKUEeKs5NrvDV7TcA\" name=\"IPToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32ET-tKUEeKs5NrvDV7TcA\" port=\"_32EULtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32EUDdKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32EUBdKUEeKs5NrvDV7TcA\" port=\"_32EULdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32ET99KUEeKs5NrvDV7TcA\" name=\"UMTS_SendBehBh\" firstStatement=\"_32ET-NKUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32ET-NKUEeKs5NrvDV7TcA\" name=\"Loop41\" isFirstOf=\"_32ET99KUEeKs5NrvDV7TcA\" firstStatement=\"_32ET-tKUEeKs5NrvDV7TcA\" lastStatement=\"_32EUBdKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32ET-tKUEeKs5NrvDV7TcA\" name=\"Cond40\" isFirstOf=\"_32ET-NKUEeKs5NrvDV7TcA\" next=\"_32EUAdKUEeKs5NrvDV7TcA\" port=\"_32EUDNKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32EUAdKUEeKs5NrvDV7TcA\" name=\"UpUMTS\" previous=\"_32ET-tKUEeKs5NrvDV7TcA\" next=\"_32EUBdKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;UMTSToNet=IPToUMTS;\" executionTime=\"30 ms\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32EUBdKUEeKs5NrvDV7TcA\" name=\"Action54\" isLastOf=\"_32ET-NKUEeKs5NrvDV7TcA\" previous=\"_32EUAdKUEeKs5NrvDV7TcA\" port=\"_32EUDdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_32EUENKUEeKs5NrvDV7TcA\" name=\"UMTS_Receive\" constructor=\"\" includes=\"\" declarations=\"\" initializations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" affinity=\"\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_32EUJtKUEeKs5NrvDV7TcA\" name=\"UMTSToIP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32EUH9KUEeKs5NrvDV7TcA\" port=\"_32EUK9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_32EUJ9KUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32EUFNKUEeKs5NrvDV7TcA\" port=\"_32EULNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32EUEdKUEeKs5NrvDV7TcA\" name=\"UMTS_RecBehBh\" firstStatement=\"_32EUEtKUEeKs5NrvDV7TcA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32EUEtKUEeKs5NrvDV7TcA\" name=\"Loop42\" isFirstOf=\"_32EUEdKUEeKs5NrvDV7TcA\" firstStatement=\"_32EUFNKUEeKs5NrvDV7TcA\" lastStatement=\"_32EUH9KUEeKs5NrvDV7TcA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32EUFNKUEeKs5NrvDV7TcA\" name=\"Cond41\" isFirstOf=\"_32EUEtKUEeKs5NrvDV7TcA\" next=\"_32EUG9KUEeKs5NrvDV7TcA\" port=\"_32EUJ9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32EUG9KUEeKs5NrvDV7TcA\" name=\"DownUMTS\" previous=\"_32EUFNKUEeKs5NrvDV7TcA\" next=\"_32EUH9KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;UMTSToIP=NetToUMTS;\" executionTime=\"30 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32EUH9KUEeKs5NrvDV7TcA\" name=\"Action55\" isLastOf=\"_32EUEtKUEeKs5NrvDV7TcA\" previous=\"_32EUG9KUEeKs5NrvDV7TcA\" port=\"_32EUJtKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32EUMdKUEeKs5NrvDV7TcA\" name=\"HTTPToIP\" ports=\"_32ETstKUEeKs5NrvDV7TcA _32ET8dKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FJEwsFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32EUO9KUEeKs5NrvDV7TcA\" name=\"IPToHTTP\" ports=\"_32ET8NKUEeKs5NrvDV7TcA _32ETsdKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FH2osFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32EURdKUEeKs5NrvDV7TcA\" name=\"IPToUMTS\" ports=\"_32EULtKUEeKs5NrvDV7TcA _32ET79KUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FVI2wFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32EUT9KUEeKs5NrvDV7TcA\" name=\"UMTSToIP\" ports=\"_32ET7tKUEeKs5NrvDV7TcA _32EUK9KUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FHrCgFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n            </relations>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32EUYdKUEeKs5NrvDV7TcA\" name=\"VideoProtocolStack\" constructor=\"\" declarations=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32E6dtKUEeKs5NrvDV7TcA\" name=\"NetToDVB\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_32E60dKUEeKs5NrvDV7TcA\" ports=\"_32E6W9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32E6d9KUEeKs5NrvDV7TcA\" name=\"RTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32E6ydKUEeKs5NrvDV7TcA\" ports=\"_32EUfdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32EUYtKUEeKs5NrvDV7TcA\" name=\"VideoProtocolStackStrucSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32EUY9KUEeKs5NrvDV7TcA\" name=\"RTPUDP\" constructor=\"\" declarations=\"int SyncFramesDuration;&#xD;int DelayDuration;&#xD;int FramesInBurst;&#xD;int TimeDifference;\" definitions=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" priority=\"2\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_32EUfdKUEeKs5NrvDV7TcA\" name=\"RTPToApp\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32EUbtKUEeKs5NrvDV7TcA\" port=\"_32E6d9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32EUftKUEeKs5NrvDV7TcA\" name=\"IPToRTP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32EUZdKUEeKs5NrvDV7TcA\" relations=\"_32E6a9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32EUZNKUEeKs5NrvDV7TcA\" name=\"RTPUDPBehaviorBh\" firstStatement=\"_32EUbNKUEeKs5NrvDV7TcA\">\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32EUZdKUEeKs5NrvDV7TcA\" name=\"Cond18\" isFirstOf=\"_32EUbNKUEeKs5NrvDV7TcA\" next=\"_32EUdNKUEeKs5NrvDV7TcA\" port=\"_32EUftKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32EUbNKUEeKs5NrvDV7TcA\" name=\"Loop23\" isFirstOf=\"_32EUZNKUEeKs5NrvDV7TcA\" firstStatement=\"_32EUZdKUEeKs5NrvDV7TcA\" lastStatement=\"_32EUbtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32EUbtKUEeKs5NrvDV7TcA\" name=\"Action29\" isLastOf=\"_32EUbNKUEeKs5NrvDV7TcA\" previous=\"_32EUeNKUEeKs5NrvDV7TcA\" port=\"_32EUfdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32EUdNKUEeKs5NrvDV7TcA\" name=\"SyncFrames\" previous=\"_32EUZdKUEeKs5NrvDV7TcA\" next=\"_32EUeNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;RTPToApp_trans=IPToRTP_trans;&#x9;&#xA;&#x9;RTPToApp_trans.set_user_data_length(IPToRTP_trans.get_user_data_length());&#xA;&#x9;TimeDifference=(int)IPToRTP.TimeStampGoal.to_scalar(CF_MS)-(int)cf_time_stamp().to_scalar(CF_MS);&#x9;&#xA;&#x9;if(TimeDifference>0){&#x9;&#x9;&#xA;&#x9;&#x9;wait(TimeDifference,SC_MS);&#x9;&#xA;&#x9;}&#x9;&#xA;&#x9;SyncFramesDuration=20000;//us&#x9;&#xA;&#x9;AverageFrameLatency+=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS)-IPToRTP.TimeStampSend.to_scalar(CF_MS), CF_MS);&#x9;&#x9;\" executionTime=\"SyncFramesDuration us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32EUeNKUEeKs5NrvDV7TcA\" name=\"Delay\" previous=\"_32EUdNKUEeKs5NrvDV7TcA\" next=\"_32EUbtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;DelayDuration=((BURSTPERIOD*1000)/IPToRTP.FramesInBurst)-(SyncFramesDuration+200);//us\" executionTime=\"DelayDuration us\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" type=\"PASSIVE\" dynamicResourceLoad=\"\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32E6I9KUEeKs5NrvDV7TcA\" name=\"IPVideo\" constructor=\"\" declarations=\"int FramesInBurst;&#xD;int IndexFrame;&#xD;int TimeDifference;&#xD;int Size;\" definitions=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_32E6PtKUEeKs5NrvDV7TcA\" name=\"IPToRTP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32E6NNKUEeKs5NrvDV7TcA\" relations=\"_32E6a9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32E6P9KUEeKs5NrvDV7TcA\" name=\"MPEToIP\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32E6J9KUEeKs5NrvDV7TcA\" relations=\"_32E6YdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32E6JNKUEeKs5NrvDV7TcA\" name=\"IPVideoBehaviorBh\" firstStatement=\"_32E6JdKUEeKs5NrvDV7TcA\">\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32E6JdKUEeKs5NrvDV7TcA\" name=\"Loop20\" isFirstOf=\"_32E6JNKUEeKs5NrvDV7TcA\" firstStatement=\"_32E6J9KUEeKs5NrvDV7TcA\" lastStatement=\"_32E6LtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32E6J9KUEeKs5NrvDV7TcA\" name=\"Cond16\" isFirstOf=\"_32E6JdKUEeKs5NrvDV7TcA\" next=\"_32E6OtKUEeKs5NrvDV7TcA\" port=\"_32E6P9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32E6LtKUEeKs5NrvDV7TcA\" name=\"Loop21\" isLastOf=\"_32E6JdKUEeKs5NrvDV7TcA\" firstStatement=\"_32E6MNKUEeKs5NrvDV7TcA\" lastStatement=\"_32E6NNKUEeKs5NrvDV7TcA\" previous=\"_32E6OtKUEeKs5NrvDV7TcA\" condition=\"FramesInBurst\" type=\"MULTIPLICATION\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32E6MNKUEeKs5NrvDV7TcA\" name=\"ExtractFrames\" isFirstOf=\"_32E6LtKUEeKs5NrvDV7TcA\" next=\"_32E6NNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;IndexFrame++;&#x9;&#xA;&#x9;IPToRTP_trans.set_user_data_length( cf_data_size( (cf_dt::cf_data_size_st)Size,&#x9;CF_BYTE));&#x9;&#xA;&#x9;IPToRTP.VideoInfo=FRAMEVIDEO;&#x9;&#xA;&#x9;IPToRTP.FramesInBurst=MPEToIP.FramesInBurst;&#x9;&#xA;&#x9;IPToRTP.TimeStampGoal=cf_dt::cf_time(MPEToIP.TimeStampGoal.to_scalar(CF_MS)+(IndexFrame*1000/FramesInBurst)+BurstSyncDelay*1000,CF_MS);&#x9;&#xA;&#x9;IPToRTP.TimeStampSend=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS), CF_MS);&#x9;&#xA;&#x9;TimeDifference= (int)MPEToIP.TimeStampGoal.to_scalar(CF_MS)-(int)cf_time_stamp().to_scalar(CF_MS);&#x9;&#xA;&#x9;if(TimeDifference>0){&#x9;&#x9;&#xA;&#x9;&#x9;cf_wait(TimeDifference,CF_MS);&#x9;&#xA;&#x9;}&#x9;&#x9;\" executionTime=\"2 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32E6NNKUEeKs5NrvDV7TcA\" name=\"Action28\" isLastOf=\"_32E6LtKUEeKs5NrvDV7TcA\" previous=\"_32E6MNKUEeKs5NrvDV7TcA\" port=\"_32E6PtKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32E6OtKUEeKs5NrvDV7TcA\" name=\"GetFramesNumber\" previous=\"_32E6J9KUEeKs5NrvDV7TcA\" next=\"_32E6LtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;FramesInBurst=MPEToIP.FramesInBurst;&#x9;&#xA;&#x9;Size=(int)(((MPEToIP_trans.get_user_data_length().to_scalar(CF_BYTE))/FramesInBurst)*10);&#xA;&#x9;IndexFrame=0;\" executionTime=\"10 us\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_32E6RtKUEeKs5NrvDV7TcA\" name=\"MPETSL\" declarations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" priority=\"1\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_32E6W9KUEeKs5NrvDV7TcA\" name=\"NetToDVB\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32E6VNKUEeKs5NrvDV7TcA\" port=\"_32E6dtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_32E6XNKUEeKs5NrvDV7TcA\" name=\"MPEToIP\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32E6TtKUEeKs5NrvDV7TcA\" relations=\"_32E6YdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32E6R9KUEeKs5NrvDV7TcA\" name=\"MPETSLBehaviorBh\" firstStatement=\"_32E6SNKUEeKs5NrvDV7TcA\">\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32E6SNKUEeKs5NrvDV7TcA\" name=\"Loop19\" isFirstOf=\"_32E6R9KUEeKs5NrvDV7TcA\" firstStatement=\"_32E6VNKUEeKs5NrvDV7TcA\" lastStatement=\"_32E6TtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32E6StKUEeKs5NrvDV7TcA\" name=\"GetBurst\" previous=\"_32E6VNKUEeKs5NrvDV7TcA\" next=\"_32E6TtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;MPEToIP_trans=NetToDVB_trans;&#xA;&#x9;MPEToIP_trans.set_user_data_length(NetToDVB_trans.get_user_data_length());&#xA;&#x9;AverageBurstLatency+=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS)-NetToDVB.TimeStampSend.to_scalar(CF_MS), CF_MS);&#x9;&#xA;&#x9;TotalBursts++;\" executionTime=\"100 ms\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32E6TtKUEeKs5NrvDV7TcA\" name=\"Action25\" isLastOf=\"_32E6SNKUEeKs5NrvDV7TcA\" previous=\"_32E6StKUEeKs5NrvDV7TcA\" port=\"_32E6XNKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32E6VNKUEeKs5NrvDV7TcA\" name=\"Cond17\" isFirstOf=\"_32E6SNKUEeKs5NrvDV7TcA\" next=\"_32E6StKUEeKs5NrvDV7TcA\" port=\"_32E6W9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6YdKUEeKs5NrvDV7TcA\" name=\"MPEToIP\" ports=\"_32E6P9KUEeKs5NrvDV7TcA _32E6XNKUEeKs5NrvDV7TcA\" capacity=\"BurstBufferSize\" concurrency=\"1\" sendTime=\"1 ms\" receiveTime=\"1 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FROAEFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRWdKUEeKs5NrvDV7TcA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6a9KUEeKs5NrvDV7TcA\" name=\"IPToRTP\" ports=\"_32E6PtKUEeKs5NrvDV7TcA _32EUftKUEeKs5NrvDV7TcA\" capacity=\"FramesBufferSize\" concurrency=\"1\" sendTime=\"100 us\" receiveTime=\"100 us\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FRjXQFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRWdKUEeKs5NrvDV7TcA\"/>\n            </relations>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32E6fNKUEeKs5NrvDV7TcA\" name=\"Controller\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"bool SendToCallStack;&#xD;bool SendToVideoStack;\" initializations=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n          <ports xmi:id=\"_32E6mdKUEeKs5NrvDV7TcA\" name=\"AppToCtrl\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32E6kNKUEeKs5NrvDV7TcA\" relations=\"_32E6sdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32E6fdKUEeKs5NrvDV7TcA\" name=\"ControllerBehaviorBh\" firstStatement=\"_32E6ftKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32E6ftKUEeKs5NrvDV7TcA\" name=\"Loop10\" isFirstOf=\"_32E6fdKUEeKs5NrvDV7TcA\" firstStatement=\"_32E6kNKUEeKs5NrvDV7TcA\" lastStatement=\"_32E6gNKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32E6gNKUEeKs5NrvDV7TcA\" name=\"DynamicControl\" isLastOf=\"_32E6ftKUEeKs5NrvDV7TcA\" previous=\"_32E6kNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;cf_beh_handle CtrlToCallStack_trans(&quot;/SoftwareDefinedRadioApp/MobilePhone/CallProtocolStack&quot;);&#xA;&#x9;cf_beh_handle CtrlToVideoStack_trans(&quot;/SoftwareDefinedRadioApp/MobilePhone/VideoProtocolStack&quot;);&#xA;&#x9;&#xA;&#x9;SendToCallStack =false;&#x9;&#xA;&#x9;SendToVideoStack=false;&#x9;&#xA;&#x9;switch(AppToCtrl.UseCase){&#x9;&#x9;&#xA;&#x9;&#x9;case CALL:&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;switch(AppToCtrl.Command){&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case START:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToCallStack_trans.start();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Start CallStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToCallStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case STOP:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToCallStack_trans.stop();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Stop CallStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToCallStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case RESUME:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToCallStack_trans.resume();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Resume CallStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToCallStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;default:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;case VIDEO:&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;switch(AppToCtrl.Command){&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case START:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToVideoStack_trans.start();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Start VideoStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToVideoStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case STOP:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToVideoStack_trans.stop();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Stop VideoStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToVideoStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;case RESUME:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CtrlToVideoStack_trans.resume();&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Ctrl: Resume VideoStack&quot;);&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;SendToVideoStack=true;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;default:&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;default:&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#x9;&#xA;&#x9;&#x9;}\" executionTime=\"10 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32E6kNKUEeKs5NrvDV7TcA\" name=\"Cond10\" isFirstOf=\"_32E6ftKUEeKs5NrvDV7TcA\" next=\"_32E6gNKUEeKs5NrvDV7TcA\" port=\"_32E6mdKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6ndKUEeKs5NrvDV7TcA\" name=\"AppToHTTP\" ports=\"_32ETcNKUEeKs5NrvDV7TcA _32EUXdKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FJ6eMFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6p9KUEeKs5NrvDV7TcA\" name=\"HTTPToApp\" ports=\"_32EUXNKUEeKs5NrvDV7TcA _32ETb9KUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FLrYwFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6sdKUEeKs5NrvDV7TcA\" name=\"AppToCtrl\" ports=\"_32E6mdKUEeKs5NrvDV7TcA _32ETbtKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FPgI0FWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32E6ydKUEeKs5NrvDV7TcA\" name=\"RTPToApp\" ports=\"_32E6d9KUEeKs5NrvDV7TcA _32ETbdKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"100 us\" receiveTime=\"1 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FQiqoFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRWdKUEeKs5NrvDV7TcA\"/>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_32JyoNKUEeKs5NrvDV7TcA\" name=\"Networks\" includes=\"\" declarations=\"DefNet initSem;\" initializations=\"sv_VideoFiles.init_value(initSem);\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_32Jzd9KUEeKs5NrvDV7TcA\" name=\"NetToDVB\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32M2G9KUEeKs5NrvDV7TcA\" ports=\"_32JzOdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32JzeNKUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32MPONKUEeKs5NrvDV7TcA\" ports=\"_32Jy59KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32JzedKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32MPSdKUEeKs5NrvDV7TcA\" ports=\"_32Jy6NKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32JyodKUEeKs5NrvDV7TcA\" name=\"NetworksStrucSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32JyotKUEeKs5NrvDV7TcA\" name=\"InteractiveNetwork\" constructor=\"\" declarations=\"int StartSize;&#xD;int EndSize;&#xD;int FileSize;&#xD;&#xD;bool FileRequest;&#xD;bool ExitLoop;&#xD;bool Sending;&#xD;bool FullLink;&#xD;bool ExitWaiting;&#xD;&#xD;int VideoIndex;&#xD;int index;&#xD;int VideoSendIndex;&#xD;&#xD;DefVideoIndex VideoInd[4];&#xD;DefFramesInBurst FramesInBurst[4];&#xD;DefBurstsInVideo BurstsInVideo[4];\" definitions=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32Jy5dKUEeKs5NrvDV7TcA\" name=\"VideoFiles\" type=\"SHARED_VARIABLE\" direction=\"IN\" relations=\"_32JzYdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32Jy5tKUEeKs5NrvDV7TcA\" name=\"VideoNet\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32JyxtKUEeKs5NrvDV7TcA\" relations=\"_32JzWdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32Jy59KUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32JyvNKUEeKs5NrvDV7TcA _32Jy39KUEeKs5NrvDV7TcA\" port=\"_32JzeNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32Jy6NKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32JyptKUEeKs5NrvDV7TcA\" port=\"_32JzedKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32Jyo9KUEeKs5NrvDV7TcA\" name=\"IntNetBehBh\" firstStatement=\"_32JywtKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32JypNKUEeKs5NrvDV7TcA\" name=\"Loop8\" firstStatement=\"_32JyptKUEeKs5NrvDV7TcA\" lastStatement=\"_32JysdKUEeKs5NrvDV7TcA\" previous=\"_32JywtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32JyptKUEeKs5NrvDV7TcA\" name=\"Cond9\" isFirstOf=\"_32JypNKUEeKs5NrvDV7TcA\" next=\"_32JyrdKUEeKs5NrvDV7TcA\" port=\"_32Jy6NKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JyrdKUEeKs5NrvDV7TcA\" name=\"GetRequest\" previous=\"_32JyptKUEeKs5NrvDV7TcA\" next=\"_32JysdKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;VideoIndex=0;&#x9;&#xA;&#x9;FileRequest=false;&#x9;&#xA;&#x9;Sending=true;&#x9;&#xA;&#x9;ExitLoop=false;&#x9;&#xA;&#x9;if(UMTSToNet.Command == FILEREQUEST){&#x9;&#x9;&#xA;&#x9;&#x9;FileRequest=true;&#x9;&#x9;&#xA;&#x9;&#x9;cf_trace_report(&quot;INet: Received file request&quot;);&#x9;&#xA;&#x9;}else{&#xA;&#x9;&#x9;cf_trace_report(&quot;INet: FileRequest=false&quot;);&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;VideoIndex=VideoInd[VideoSendIndex];&#x9;&#x9;&#xA;&#x9;&#x9;VideoNet.VideoIndex=VideoIndex;&#xA;&#x9;&#x9;VideoNet.BurstsInVideo=BurstsInVideo[VideoSendIndex];&#x9;&#x9;&#xA;&#x9;&#x9;VideoNet.FramesInBurst=FramesInBurst[VideoSendIndex];&#x9;&#x9;&#xA;&#x9;&#x9;VideoSendIndex++;&#x9;&#xA;&#x9;}\" executionTime=\"10 ms\"/>\n            <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_32JysdKUEeKs5NrvDV7TcA\" isLastOf=\"_32JypNKUEeKs5NrvDV7TcA\" previous=\"_32JyrdKUEeKs5NrvDV7TcA\">\n              <conditionalBranches xmi:id=\"_32JystKUEeKs5NrvDV7TcA\" firstStatement=\"_32JyxtKUEeKs5NrvDV7TcA\" lastStatement=\"_32JyxtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n              <conditionalBranches xmi:id=\"_32JytNKUEeKs5NrvDV7TcA\" firstStatement=\"_32JyttKUEeKs5NrvDV7TcA\" lastStatement=\"_32JyttKUEeKs5NrvDV7TcA\" condition=\"FileRequest==true\"/>\n            </statements>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32JyttKUEeKs5NrvDV7TcA\" name=\"Loop9\" isFirstOf=\"_32JytNKUEeKs5NrvDV7TcA\" isLastOf=\"_32JytNKUEeKs5NrvDV7TcA\" firstStatement=\"_32Jy0NKUEeKs5NrvDV7TcA\" lastStatement=\"_32JyzNKUEeKs5NrvDV7TcA\" condition=\"ExitLoop==false\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JyuNKUEeKs5NrvDV7TcA\" name=\"SendFile\" isFirstOf=\"_32Jy19KUEeKs5NrvDV7TcA\" next=\"_32JyvNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;if(VideoIndex==0){&#x9;&#x9;&#xA;&#x9;&#x9;NetToUMTS.FileInfo=STARTFILE;&#x9;&#xA;&#x9;}else if(VideoIndex&lt;=NVIDEO){&#x9;&#x9;&#xA;&#x9;&#x9;NetToUMTS.FileInfo=FILEDATA;&#x9;&#xA;&#x9;}else{&#x9;&#x9;&#xA;&#x9;&#x9;NetToUMTS.FileInfo=ENDFILE;&#x9;&#x9;&#xA;&#x9;&#x9;ExitLoop=true;  &#x9;&#x9;&#xA;&#x9;&#x9;cf_trace_report(&quot;INet: File sent&quot;);&#x9;&#xA;&#x9;}&#x9;&#xA;&#x9;VideoIndex++;\" executionTime=\"10 ms\" systematicRead=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32JyvNKUEeKs5NrvDV7TcA\" name=\"ActionFile\" isLastOf=\"_32Jy19KUEeKs5NrvDV7TcA\" previous=\"_32JyuNKUEeKs5NrvDV7TcA\" port=\"_32Jy59KUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"Sending\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JywtKUEeKs5NrvDV7TcA\" name=\"Init\" isFirstOf=\"_32Jyo9KUEeKs5NrvDV7TcA\" next=\"_32JypNKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;FileRequest=false;&#x9;&#xA;&#x9;VideoIndex=0;&#x9;&#xA;&#x9;StartSize=400000;&#x9;&#xA;&#x9;EndSize=400000;&#x9;&#xA;&#x9;FileSize=1000000;&#x9;&#xA;&#x9;VideoSendIndex=0;&#x9;&#x9;&#xA;&#x9;VideoInd[0]=0; &#xA;&#x9;FramesInBurst[0]=FramesPerSecond; &#xA;&#x9;BurstsInVideo[0]=32;&#x9;&#x9;&#xA;&#x9;VideoInd[1]=1; &#xA;&#x9;FramesInBurst[1]=FramesPerSecond; &#xA;&#x9;BurstsInVideo[1]=16;&#x9;&#xA;&#x9;VideoInd[2]=2; &#xA;&#x9;FramesInBurst[2]=FramesPerSecond; &#xA;&#x9;BurstsInVideo[2]=23;&#x9;&#xA;&#x9;VideoInd[3]=3; &#xA;&#x9;FramesInBurst[3]=FramesPerSecond; &#xA;&#x9;BurstsInVideo[3]=33;&#x9;\" executionTime=\"10 ms\" systematicWrite=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32JyxtKUEeKs5NrvDV7TcA\" name=\"Action15\" isFirstOf=\"_32JystKUEeKs5NrvDV7TcA\" isLastOf=\"_32JystKUEeKs5NrvDV7TcA\" port=\"_32Jy5tKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JyzNKUEeKs5NrvDV7TcA\" name=\"DelaySend\" isLastOf=\"_32JyttKUEeKs5NrvDV7TcA\" previous=\"_32Jy1NKUEeKs5NrvDV7TcA\" algorithm=\"\" executionTime=\"30 ms\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32Jy0NKUEeKs5NrvDV7TcA\" name=\"CheckFull\" isFirstOf=\"_32JyttKUEeKs5NrvDV7TcA\" next=\"_32Jy1NKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;FullLink=false;&#x9;&#xA;&#x9;index=0;&#x9;&#xA;&#x9;if( p_mq_NetToUMTS.is_full() ){&#x9;&#x9;&#xA;&#x9;&#x9;FullLink=true;&#x9;&#x9;&#xA;&#x9;&#x9;ExitWaiting=false;&#x9;&#x9;&#xA;&#x9;}\" executionTime=\"10 ms\"/>\n            <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_32Jy1NKUEeKs5NrvDV7TcA\" previous=\"_32Jy0NKUEeKs5NrvDV7TcA\" next=\"_32JyzNKUEeKs5NrvDV7TcA\">\n              <conditionalBranches xmi:id=\"_32Jy1dKUEeKs5NrvDV7TcA\" firstStatement=\"_32Jy2dKUEeKs5NrvDV7TcA\" lastStatement=\"_32Jy39KUEeKs5NrvDV7TcA\" condition=\"FullLink==true\"/>\n              <conditionalBranches xmi:id=\"_32Jy19KUEeKs5NrvDV7TcA\" firstStatement=\"_32JyuNKUEeKs5NrvDV7TcA\" lastStatement=\"_32JyvNKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            </statements>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32Jy2dKUEeKs5NrvDV7TcA\" name=\"Loop40\" isFirstOf=\"_32Jy1dKUEeKs5NrvDV7TcA\" firstStatement=\"_32Jy29KUEeKs5NrvDV7TcA\" lastStatement=\"_32Jy29KUEeKs5NrvDV7TcA\" next=\"_32Jy39KUEeKs5NrvDV7TcA\" condition=\"ExitWaiting==false\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32Jy29KUEeKs5NrvDV7TcA\" name=\"Waiting\" isFirstOf=\"_32Jy2dKUEeKs5NrvDV7TcA\" isLastOf=\"_32Jy2dKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;Sending=false;&#x9;&#xA;&#x9;ExitWaiting=false;&#x9;&#xA;&#x9;ExitLoop=false;&#x9;&#xA;&#x9;if( p_mq_NetToUMTS.is_full()){&#x9;&#x9;&#xA;&#x9;&#x9;index++;&#x9;&#x9;&#xA;&#x9;&#x9;if(index==CallTimeout){&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitWaiting=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitLoop=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;p_mq_NetToUMTS.flush(); &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;cf_trace_report(&quot;INet: TimeOut&quot;);&#x9;&#x9;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;}else{&#x9;&#x9;&#xA;&#x9;&#x9;ExitWaiting=true;&#x9;&#x9;&#xA;&#x9;&#x9;Sending=true;&#x9;&#x9;&#xA;&#x9;&#x9;if(VideoIndex==0){&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;NetToUMTS.FileInfo=STARTFILE;&#x9;&#x9;&#xA;&#x9;&#x9;}else if(VideoIndex&lt;=NVIDEO){&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;NetToUMTS.FileInfo=FILEDATA;&#x9;&#x9;&#xA;&#x9;&#x9;}else{&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;NetToUMTS.FileInfo=ENDFILE;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitLoop=true;  &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;cf_trace_report(&quot;INet: File sent&quot;);&#x9;&#x9;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;VideoIndex++;&#x9;&#x9;&#xA;&#x9;}\" executionTime=\"1 s\" systematicRead=\"true\" type=\"PASSIVE\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32Jy39KUEeKs5NrvDV7TcA\" name=\"Action53\" isLastOf=\"_32Jy1dKUEeKs5NrvDV7TcA\" previous=\"_32Jy2dKUEeKs5NrvDV7TcA\" port=\"_32Jy59KUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"Sending\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32Jy7tKUEeKs5NrvDV7TcA\" name=\"BroadcastNetwork\" constructor=\"\" includes=\"\" declarations=\"bool ExitBurstLoop;&#xD;bool FullLink;&#xD;bool ExitWaiting;&#xD;bool SendWaiting;&#xD;int IndexBurst;&#xD;int BurstSize;&#xD;int IndexWaiting;&#xD;int FramesInBurst;&#xD;int BurstsInVideo;&#xD;bool Init;\" definitions=\"\" initializations=\"Init=true;\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32JzOdKUEeKs5NrvDV7TcA\" name=\"NetToDVB\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32Jy-9KUEeKs5NrvDV7TcA _32JzM9KUEeKs5NrvDV7TcA\" port=\"_32Jzd9KUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32JzO9KUEeKs5NrvDV7TcA\" name=\"BurstClock\" type=\"EVENT\" direction=\"IN\" inputActions=\"_32JzAdKUEeKs5NrvDV7TcA _32JzLdKUEeKs5NrvDV7TcA\" relations=\"_32JzaNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32JzPNKUEeKs5NrvDV7TcA\" name=\"VideoFiles\" type=\"SHARED_VARIABLE\" direction=\"IN\" relations=\"_32JzYdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32JzPdKUEeKs5NrvDV7TcA\" name=\"VideoNet\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32Jy8NKUEeKs5NrvDV7TcA\" relations=\"_32JzWdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32Jy79KUEeKs5NrvDV7TcA\" name=\"BroadcastNetBehBh\" firstStatement=\"_32Jy-dKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32Jy8NKUEeKs5NrvDV7TcA\" name=\"Cond11\" isFirstOf=\"_32Jy-dKUEeKs5NrvDV7TcA\" next=\"_32JzEtKUEeKs5NrvDV7TcA\" port=\"_32JzPdKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32Jy99KUEeKs5NrvDV7TcA\" name=\"Loop12\" firstStatement=\"_32JzAdKUEeKs5NrvDV7TcA\" lastStatement=\"_32JzHtKUEeKs5NrvDV7TcA\" previous=\"_32JzEtKUEeKs5NrvDV7TcA\" next=\"_32JzGtKUEeKs5NrvDV7TcA\" condition=\"ExitBurstLoop==false\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32Jy-dKUEeKs5NrvDV7TcA\" name=\"Loop15\" isFirstOf=\"_32Jy79KUEeKs5NrvDV7TcA\" firstStatement=\"_32Jy8NKUEeKs5NrvDV7TcA\" lastStatement=\"_32JzGtKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32Jy-9KUEeKs5NrvDV7TcA\" name=\"ActionReady\" isLastOf=\"_32JzH9KUEeKs5NrvDV7TcA\" previous=\"_32JzFtKUEeKs5NrvDV7TcA\" port=\"_32JzOdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32JzAdKUEeKs5NrvDV7TcA\" name=\"Cond22\" isFirstOf=\"_32Jy99KUEeKs5NrvDV7TcA\" next=\"_32JzI9KUEeKs5NrvDV7TcA\" port=\"_32JzO9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzEtKUEeKs5NrvDV7TcA\" name=\"Begin\" previous=\"_32Jy8NKUEeKs5NrvDV7TcA\" next=\"_32Jy99KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;cf_beh_handle CtrlClk_trans(&quot;/SoftwareDefinedRadioApp/Networks/ClockGenerator&quot;);&#xA;&#x9;&#xA;&#x9;ExitBurstLoop=false;&#x9;&#xA;&#x9;IndexBurst = 0;&#x9;&#xA;&#x9;FramesInBurst=VideoNet.FramesInBurst;&#x9;&#xA;&#x9;BurstsInVideo=VideoNet.BurstsInVideo;&#x9;&#xA;&#x9;CtrlClk_trans.start();&#xA;&#x9;cf_trace_report(&quot;BNet: Sending video %i (%i im/s)&quot;, VideoNet.VideoIndex, VideoNet.FramesInBurst);\" executionTime=\"10 ms\" systematicRead=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzFtKUEeKs5NrvDV7TcA\" name=\"SendBurst\" isFirstOf=\"_32JzH9KUEeKs5NrvDV7TcA\" next=\"_32Jy-9KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;if(DATA==RAND)&#xA;&#x9;{&#xA;&#x9;&#x9;BurstSize=(int)((MAXBYTESINFRAME/10000)*cf_util_rand_int(1,10)*FramesInBurst*BURSTPERIOD);&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;BurstSize=TabSendBurstSize[cptSendBurstSize];&#xA;&#x9;&#x9;cptSendBurstSize++;&#xA;&#x9;}&#x9;&#xA;&#x9;&#xA;&#x9;NetToDVB_trans.set_user_data_length(cf_data_size((cf_dt::cf_data_size_st)BurstSize,CF_BYTE)); &#x9;&#xA;&#x9;NetToDVB.TimeStampSend=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS), CF_MS); &#x9;&#xA;&#x9;NetToDVB.TimeStampGoal=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS)+BurstSyncDelay*1000,CF_MS);&#x9;&#xA;&#x9;NetToDVB.VideoInfo=BURSTVIDEO;&#x9;&#xA;&#x9;NetToDVB.FramesInBurst=FramesInBurst;&#x9;&#xA;&#x9;IndexBurst++;&#x9;&#xA;&#x9;if(IndexBurst==BurstsInVideo){&#x9;&#x9;&#xA;&#x9;&#x9;ExitBurstLoop=true;&#x9;&#x9;&#xA;&#x9;&#x9;cf_trace_report(&quot;BNet: sent video&quot;);&#x9;&#xA;&#x9;}\" executionTime=\"10 ms\" systematicRead=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzGtKUEeKs5NrvDV7TcA\" name=\"End\" isLastOf=\"_32Jy-dKUEeKs5NrvDV7TcA\" previous=\"_32Jy99KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;cf_beh_handle CtrlClk_trans(&quot;/SoftwareDefinedRadioApp/Networks/ClockGenerator&quot;);&#xA;&#x9;CtrlClk_trans.stop();\" executionTime=\"10 us\"/>\n            <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_32JzHtKUEeKs5NrvDV7TcA\" isLastOf=\"_32Jy99KUEeKs5NrvDV7TcA\" previous=\"_32JzI9KUEeKs5NrvDV7TcA\">\n              <conditionalBranches xmi:id=\"_32JzH9KUEeKs5NrvDV7TcA\" firstStatement=\"_32JzFtKUEeKs5NrvDV7TcA\" lastStatement=\"_32Jy-9KUEeKs5NrvDV7TcA\" condition=\"\"/>\n              <conditionalBranches xmi:id=\"_32JzIdKUEeKs5NrvDV7TcA\" firstStatement=\"_32JzJ9KUEeKs5NrvDV7TcA\" lastStatement=\"_32JzM9KUEeKs5NrvDV7TcA\" condition=\"FullLink==true\"/>\n            </statements>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzI9KUEeKs5NrvDV7TcA\" name=\"CheckFull\" previous=\"_32JzAdKUEeKs5NrvDV7TcA\" next=\"_32JzHtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;ExitWaiting=false;&#x9;&#xA;&#x9;IndexWaiting=0;&#x9;&#xA;&#x9;FullLink= p_mq_NetToDVB.is_full();\" executionTime=\"10 us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32JzJ9KUEeKs5NrvDV7TcA\" name=\"Loop39\" isFirstOf=\"_32JzIdKUEeKs5NrvDV7TcA\" firstStatement=\"_32JzLdKUEeKs5NrvDV7TcA\" lastStatement=\"_32JzKdKUEeKs5NrvDV7TcA\" next=\"_32JzM9KUEeKs5NrvDV7TcA\" condition=\"ExitWaiting==false\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzKdKUEeKs5NrvDV7TcA\" name=\"Waiting\" isLastOf=\"_32JzJ9KUEeKs5NrvDV7TcA\" previous=\"_32JzLdKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;SendWaiting=false;&#x9;&#xA;&#x9;FullLink= p_mq_NetToDVB.is_full();&#x9;&#xA;&#x9;if(FullLink) {&#x9;&#x9;&#xA;&#x9;&#x9;IndexWaiting++;&#x9;&#x9;&#xA;&#x9;&#x9;if(IndexWaiting==VideoTimeout){&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;p_mq_NetToDVB.flush(); &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitWaiting=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitBurstLoop=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;cf_trace_report(&quot;BNet: TimeOut&quot;);&#x9;&#x9;&#xA;&#x9;&#x9;}&#x9;&#xA;&#x9;}else{&#x9;&#x9;&#xA;&#x9;&#x9;IndexBurst++;&#x9;&#x9;&#xA;&#x9;&#x9;BurstSize=(int)((MAXBYTESINFRAME/10000)*cf_util_rand_int(1,10)*FramesInBurst*BURSTPERIOD);&#x9;&#xA;&#x9;&#x9;NetToDVB_trans.set_user_data_length(cf_data_size((cf_dt::cf_data_size_st)BurstSize,CF_BYTE));&#x9;&#x9;&#xA;&#x9;&#x9;NetToDVB.TimeStampGoal=cf_dt::cf_time(cf_time_stamp().to_scalar(CF_MS)+BurstSyncDelay*1000,CF_MS);&#x9;&#x9;&#xA;&#x9;&#x9;NetToDVB.VideoInfo=BURSTVIDEO;&#x9;&#x9;&#xA;&#x9;&#x9;NetToDVB.FramesInBurst=FramesInBurst;&#x9;&#x9;&#xA;&#x9;&#x9;SendWaiting=true;&#x9;&#x9;&#xA;&#x9;&#x9;ExitWaiting=true;&#x9;&#x9;&#xA;&#x9;&#x9;if(IndexBurst==BurstsInVideo){&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ExitBurstLoop=true;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;cf_trace_report(&quot;BNet: sent video&quot;);&#x9;&#x9;&#xA;&#x9;&#x9;}&#x9;&#xA;&#x9;}\" executionTime=\"10 us\" systematicRead=\"true\" systematicWrite=\"true\" type=\"PASSIVE\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32JzLdKUEeKs5NrvDV7TcA\" name=\"Cond39\" isFirstOf=\"_32JzJ9KUEeKs5NrvDV7TcA\" next=\"_32JzKdKUEeKs5NrvDV7TcA\" port=\"_32JzO9KUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32JzM9KUEeKs5NrvDV7TcA\" name=\"ActionWaiting\" isLastOf=\"_32JzIdKUEeKs5NrvDV7TcA\" previous=\"_32JzJ9KUEeKs5NrvDV7TcA\" port=\"_32JzOdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"SendWaiting\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32JzRNKUEeKs5NrvDV7TcA\" name=\"ClockGenerator\" constructor=\"\" includes=\"\" declarations=\"\" initializations=\"\" cyclePeriod=\"10 ns\" doNotStart=\"true\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n          <ports xmi:id=\"_32JzVdKUEeKs5NrvDV7TcA\" name=\"BurstClock\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_32JzTNKUEeKs5NrvDV7TcA\" relations=\"_32JzaNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32JzRdKUEeKs5NrvDV7TcA\" name=\"ClockGenBehBh\" firstStatement=\"_32JzRtKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32JzRtKUEeKs5NrvDV7TcA\" name=\"Loop13\" isFirstOf=\"_32JzRdKUEeKs5NrvDV7TcA\" firstStatement=\"_32JzSNKUEeKs5NrvDV7TcA\" lastStatement=\"_32JzTNKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzSNKUEeKs5NrvDV7TcA\" name=\"BurstDelay1\" isFirstOf=\"_32JzRtKUEeKs5NrvDV7TcA\" next=\"_32JzUNKUEeKs5NrvDV7TcA\" algorithm=\"\" executionTime=\"BURSTPERIOD* 10/ 100 ms\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32JzTNKUEeKs5NrvDV7TcA\" name=\"Action21\" isLastOf=\"_32JzRtKUEeKs5NrvDV7TcA\" previous=\"_32JzUNKUEeKs5NrvDV7TcA\" port=\"_32JzVdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32JzUNKUEeKs5NrvDV7TcA\" name=\"BurstDelay2\" previous=\"_32JzSNKUEeKs5NrvDV7TcA\" next=\"_32JzTNKUEeKs5NrvDV7TcA\" algorithm=\"\" executionTime=\"BURSTPERIOD* 90/ 100 ms\" systematicRead=\"true\" systematicWrite=\"true\" type=\"PASSIVE\"/>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32JzWdKUEeKs5NrvDV7TcA\" name=\"VideoNet\" ports=\"_32Jy5tKUEeKs5NrvDV7TcA _32JzPdKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FFppQFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRVtKUEeKs5NrvDV7TcA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_32JzYdKUEeKs5NrvDV7TcA\" name=\"VideoFiles\" ports=\"_32JzPNKUEeKs5NrvDV7TcA _32Jy5dKUEeKs5NrvDV7TcA\" concurrency=\"1\" counter=\"\" writeTime=\"10 ms\" readTime=\"10 ms\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FELpoFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRVtKUEeKs5NrvDV7TcA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_32JzaNKUEeKs5NrvDV7TcA\" name=\"BurstClock\" ports=\"_32JzVdKUEeKs5NrvDV7TcA _32JzO9KUEeKs5NrvDV7TcA\" policy=\"FUGITIVE\" setTime=\"0 ms\" getTime=\"0 ms\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_32Ln0NKUEeKs5NrvDV7TcA\" name=\"User\" includes=\"\" declarations=\"\" definitions=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_32MPKNKUEeKs5NrvDV7TcA\" name=\"Video\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32M2CtKUEeKs5NrvDV7TcA\" ports=\"_32MPAtKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_32MPKdKUEeKs5NrvDV7TcA\" name=\"Response\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_32M1-dKUEeKs5NrvDV7TcA\" ports=\"_32MPItKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_9f4b0NFEEeSwb-Xl9hHFQA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_32LAydKUEeKs5NrvDV7TcA\" ports=\"_32MO6dKUEeKs5NrvDV7TcA _32MPIdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_32Ln0dKUEeKs5NrvDV7TcA\" name=\"UserStrucSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32Ln0tKUEeKs5NrvDV7TcA\" name=\"Requesting\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int Index;&#xD;double UserDelay;&#xD;&#xD;double Delay[13];&#xD;DefUseCase UseCase[13];&#xD;DefCommand Command[13];\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n          <ports xmi:id=\"_32MO6dKUEeKs5NrvDV7TcA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32Ln2tKUEeKs5NrvDV7TcA\" port=\"_9f4b0NFEEeSwb-Xl9hHFQA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32Ln09KUEeKs5NrvDV7TcA\" name=\"RequestingBehBh\" documentation=\"\" firstStatement=\"_32MO5dKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32Ln1NKUEeKs5NrvDV7TcA\" name=\"Loop0\" firstStatement=\"_32Ln1tKUEeKs5NrvDV7TcA\" lastStatement=\"_32Ln2tKUEeKs5NrvDV7TcA\" previous=\"_32MO5dKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32Ln1tKUEeKs5NrvDV7TcA\" name=\"SendRequest\" isFirstOf=\"_32Ln1NKUEeKs5NrvDV7TcA\" next=\"_32Ln2tKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;UserDelay &#x9;&#x9;= Delay[Index];&#x9;&#xA;&#x9;Request.UseCase&#x9;= UseCase[Index];&#x9;&#xA;&#x9;Request.Command&#x9;= Command[Index];&#x9;&#xA;&#x9;if(Scenario==BothStatic){&#x9;&#x9;&#xA;&#x9;&#x9;Index = (Index + 1) % 4;&#x9;&#xA;&#x9;}else if(Scenario==DynamicVideo){&#x9;&#x9;&#xA;&#x9;&#x9;Index = (Index + 1) % 11;&#x9;&#xA;&#x9;}else if(Scenario==DynamicCall){&#x9;&#x9;&#xA;&#x9;&#x9;Index = (Index + 1) % 11;&#x9;&#xA;&#x9;}else if(Scenario==BothDynamic){&#x9;&#x9;&#xA;&#x9;&#x9;Index = (Index + 1) % 13;&#x9;&#xA;&#x9;}\" executionTime=\"UserDelay s\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32Ln2tKUEeKs5NrvDV7TcA\" name=\"Action0\" isLastOf=\"_32Ln1NKUEeKs5NrvDV7TcA\" previous=\"_32Ln1tKUEeKs5NrvDV7TcA\" port=\"_32MO6dKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32MO5dKUEeKs5NrvDV7TcA\" name=\"Init\" isFirstOf=\"_32Ln09KUEeKs5NrvDV7TcA\" next=\"_32Ln1NKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;Index=0;&#x9;&#xA;&#x9;if(Scenario==BothStatic){&#x9;&#xA;&#x9;&#x9;Delay[0] =19.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[0] =CALL; &#x9;&#xA;&#x9;&#x9;Command[0] =START;&#x9;&#xA;&#x9;&#x9;Delay[1] =23.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[1] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[1] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[2] =68.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[2] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[2] =FILEREQUEST;&#x9;&#xA;&#x9;&#x9;Delay[3] =100.0;&#x9;&#xA;&#x9;&#x9;UseCase[3] =CALL;&#x9;&#xA;&#x9;&#x9;Command[3] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[4] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[4] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[4] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[5] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[5] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[5] =STOP;&#x9;&#xA;&#x9;&#x9;Delay[6] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[6] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[6] =STOP;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[7] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[7] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[7] =STOP;&#x9;&#xA;&#x9;&#x9;Delay[8] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[8] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[8] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[9] =10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[9] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[9] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[10]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[10]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[10]=STOP;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[11]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[11]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[11]=STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[12]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[12]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[12]=STOP;&#x9;&#xA;&#x9;}else if(Scenario==DynamicVideo){&#x9;&#x9;&#xA;&#x9;&#x9;Delay[0] =6.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[0] =CALL; &#x9;&#xA;&#x9;&#x9;Command[0] =START;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[1] =11.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[1] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[1] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[2] =25.6;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[2] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[2] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[3] =5.3;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[3] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[3] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[4] =4.6;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[4] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[4] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[5] =7.2;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[5] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[5] = RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[6] =26.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[6] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[6] =FILEREQUEST;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[7] =20.1;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[7] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[7] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[8] =8.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[8] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[8] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[9] =3.6;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[9] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[9] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[10]=100.0;&#x9;&#xA;&#x9;&#x9;UseCase[10]=VIDEO;&#x9;&#xA;&#x9;&#x9;Command[10]=START;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[11]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[11]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[11]=STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[12]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[12]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[12]=STOP;&#x9;&#xA;&#x9;}else if(Scenario==DynamicCall){&#x9;&#x9;&#xA;&#x9;&#x9;Delay[0] =5.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[0] =CALL; &#x9;&#xA;&#x9;&#x9;Command[0] =START;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[1] =6.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[1] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[1] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[2] =3.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[2] =CALL;&#x9;&#xA;&#x9;&#x9;Command[2] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[3] =8.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[3] =CALL;&#x9;&#xA;&#x9;&#x9;Command[3] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[4] =52.3;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[4] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[4] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[5] =3.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[5] =CALL;&#x9;&#xA;&#x9;&#x9;Command[5] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[6] =36.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[6] =CALL;&#x9;&#xA;&#x9;&#x9;Command[6] =START;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[7] =5.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[7] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[7] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[8] =3.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[8] =CALL;&#x9;&#xA;&#x9;&#x9;Command[8] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[9] =10.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[9] =CALL;&#x9;&#xA;&#x9;&#x9;Command[9] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[10]=100.0;&#x9;&#xA;&#x9;&#x9;UseCase[10]=CALL;&#x9;&#xA;&#x9;&#x9;Command[10]=STOP;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[11]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[11]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[11]=STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[12]=10000.0;&#x9;&#xA;&#x9;&#x9;UseCase[12]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[12]=STOP;&#x9;&#xA;&#x9;}else if(Scenario==BothDynamic){&#x9;&#x9;&#xA;&#x9;&#x9;Delay[0] =7.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[0] =CALL; &#x9;&#xA;&#x9;&#x9;Command[0] =START;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[1] =8.1;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[1] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[1] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[2] =21.7;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[2] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[2] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[3] =11.7;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[3] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[3] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[4] =13.8;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[4] =VIDEO;&#x9;&#xA;&#x9;&#x9;Command[4] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[5] =6;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[5] =VIDEO; &#x9;&#xA;&#x9;&#x9;Command[5] =RESUME;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[6] =14.1;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[6] =NOCASE;&#x9;&#xA;&#x9;&#x9;Command[6] =FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[7] =2.5;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[7] =CALL;&#x9;&#xA;&#x9;&#x9;Command[7] =STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[8] =9;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[8] =CALL;&#x9;&#xA;&#x9;&#x9;Command[8] =RESUME;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[9] =26.3;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[9]=NOCASE;&#x9;&#xA;&#x9;&#x9;Command[9]=FILEREQUEST;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[10]=30.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[10]=CALL;&#x9;&#xA;&#x9;&#x9;Command[10]=STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[11]=30.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[11]=VIDEO;&#x9;&#xA;&#x9;&#x9;Command[11]=STOP;&#x9;&#x9;&#xA;&#x9;&#x9;Delay[12]=30.0;&#x9;&#x9;&#xA;&#x9;&#x9;UseCase[12]=VIDEO;&#x9;&#xA;&#x9;&#x9;Command[12]=STOP;&#x9;&#x9;&#xA;&#x9;}\" executionTime=\"10 us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32MO79KUEeKs5NrvDV7TcA\" name=\"Watching\" constructor=\"\" declarations=\"\" definitions=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32MPAtKUEeKs5NrvDV7TcA\" name=\"Video\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32MO89KUEeKs5NrvDV7TcA\" port=\"_32MPKNKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32MO8NKUEeKs5NrvDV7TcA\" name=\"WatchingBehaviorBh\" firstStatement=\"_32MO_tKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32MO8dKUEeKs5NrvDV7TcA\" name=\"Loop33\" firstStatement=\"_32MO89KUEeKs5NrvDV7TcA\" lastStatement=\"_32MO-tKUEeKs5NrvDV7TcA\" previous=\"_32MO_tKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32MO89KUEeKs5NrvDV7TcA\" name=\"Cond31\" isFirstOf=\"_32MO8dKUEeKs5NrvDV7TcA\" next=\"_32MO-tKUEeKs5NrvDV7TcA\" port=\"_32MPAtKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32MO-tKUEeKs5NrvDV7TcA\" name=\"Watch\" isLastOf=\"_32MO8dKUEeKs5NrvDV7TcA\" previous=\"_32MO89KUEeKs5NrvDV7TcA\" executionTime=\"1 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32MO_tKUEeKs5NrvDV7TcA\" name=\"Init\" isFirstOf=\"_32MO8NKUEeKs5NrvDV7TcA\" next=\"_32MO8dKUEeKs5NrvDV7TcA\" algorithm=\"\" executionTime=\"1 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_32MPCNKUEeKs5NrvDV7TcA\" name=\"Reading\" constructor=\"\" declarations=\"int VideoIndex;\" definitions=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_32MPIdKUEeKs5NrvDV7TcA\" name=\"Request\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_32MPF9KUEeKs5NrvDV7TcA\" port=\"_9f4b0NFEEeSwb-Xl9hHFQA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_32MPItKUEeKs5NrvDV7TcA\" name=\"Response\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_32MPENKUEeKs5NrvDV7TcA\" port=\"_32MPKdKUEeKs5NrvDV7TcA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_32MPCdKUEeKs5NrvDV7TcA\" name=\"ReadingBehaviorBh\" firstStatement=\"_32MPHdKUEeKs5NrvDV7TcA\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_32MPCtKUEeKs5NrvDV7TcA\" name=\"Loop35\" firstStatement=\"_32MPENKUEeKs5NrvDV7TcA\" lastStatement=\"_32MPF9KUEeKs5NrvDV7TcA\" previous=\"_32MPHdKUEeKs5NrvDV7TcA\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32MPDNKUEeKs5NrvDV7TcA\" name=\"Read\" previous=\"_32MPENKUEeKs5NrvDV7TcA\" next=\"_32MPF9KUEeKs5NrvDV7TcA\" algorithm=\"&#x9;cf_trace_report(&quot;User: File received&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;User: Selected video %i&quot;,VideoIndex);&#x9;&#xA;&#x9;Request.UseCase=NOCASE;&#x9;&#xA;&#x9;Request.Command=VIDEOREQUEST;&#x9;&#xA;&#x9;Request.VideoIndex=VideoIndex;&#x9;&#xA;&#x9;VideoIndex=(VideoIndex+1)%NVIDEO;\" executionTime=\"10 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_32MPENKUEeKs5NrvDV7TcA\" name=\"Cond35\" isFirstOf=\"_32MPCtKUEeKs5NrvDV7TcA\" next=\"_32MPDNKUEeKs5NrvDV7TcA\" port=\"_32MPItKUEeKs5NrvDV7TcA\" timeout=\" ms\" priority=\"\" duration=\" us\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_32MPF9KUEeKs5NrvDV7TcA\" name=\"Action47\" isLastOf=\"_32MPCtKUEeKs5NrvDV7TcA\" previous=\"_32MPDNKUEeKs5NrvDV7TcA\" port=\"_32MPIdKUEeKs5NrvDV7TcA\" duration=\" us\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_32MPHdKUEeKs5NrvDV7TcA\" name=\"Init\" isFirstOf=\"_32MPCdKUEeKs5NrvDV7TcA\" next=\"_32MPCtKUEeKs5NrvDV7TcA\" algorithm=\"&#x9;VideoIndex=0;\" executionTime=\"10 ms\" systematicRead=\"true\" systematicWrite=\"true\"/>\n          </refinement>\n        </models>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32LAydKUEeKs5NrvDV7TcA\" name=\"Request\" ports=\"_9f4b0NFEEeSwb-Xl9hHFQA _32E61tKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FNQtIFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32MPONKUEeKs5NrvDV7TcA\" name=\"NetToUMTS\" ports=\"_32E609KUEeKs5NrvDV7TcA _32JzeNKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FDP1gFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32MPSdKUEeKs5NrvDV7TcA\" name=\"UMTSToNet\" ports=\"_32JzedKUEeKs5NrvDV7TcA _32E61NKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FDyBAFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32M1-dKUEeKs5NrvDV7TcA\" name=\"Response\" ports=\"_32E61dKUEeKs5NrvDV7TcA _32MPKdKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FKa0gFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRU9KUEeKs5NrvDV7TcA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32M2CtKUEeKs5NrvDV7TcA\" name=\"Video\" ports=\"_32MPKNKUEeKs5NrvDV7TcA _32E60tKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ms\" receiveTime=\"1 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FKNZIFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRWdKUEeKs5NrvDV7TcA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_32M2G9KUEeKs5NrvDV7TcA\" name=\"NetToDVB\" ports=\"_32Jzd9KUEeKs5NrvDV7TcA _32E60dKUEeKs5NrvDV7TcA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ms\" receiveTime=\"10 ms\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_FDBMAFWfEeeRvfyx0QXVfQ\" dataType=\"_32aRWdKUEeKs5NrvDV7TcA\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_-CVXMPv4Eeu8g9ShRDr7uw\" name=\"CoSimVCSUVMApp\" version=\"x.y.z_Dev_dev\" target=\"\" includeInheritedHeader=\"\" inheritanceClass=\"\" callToInheritedConstructors=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n  <annotations xmi:id=\"_-C5X4Pv4Eeu8g9ShRDr7uw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_-C5X4fv4Eeu8g9ShRDr7uw\" key=\"cofluent.managedbuild.config.msvc2015.exe.release.1229572460\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_-CVXMfv4Eeu8g9ShRDr7uw\" name=\"CoSimVCSUVMAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"__ROMMPv4Eeu8g9ShRDr7uw\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"__ROMMfv4Eeu8g9ShRDr7uw\" name=\"read\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"__ROMNvv4Eeu8g9ShRDr7uw\" relations=\"__ROMQPv4Eeu8g9ShRDr7uw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__ROMMvv4Eeu8g9ShRDr7uw\" name=\"ConsumerBh\" firstStatement=\"__ROMM_v4Eeu8g9ShRDr7uw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMM_v4Eeu8g9ShRDr7uw\" name=\"init\" isFirstOf=\"__ROMMvv4Eeu8g9ShRDr7uw\" next=\"__ROMNPv4Eeu8g9ShRDr7uw\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__ROMNPv4Eeu8g9ShRDr7uw\" name=\"Loop\" firstStatement=\"__ROMNvv4Eeu8g9ShRDr7uw\" lastStatement=\"__ROMNfv4Eeu8g9ShRDr7uw\" previous=\"__ROMM_v4Eeu8g9ShRDr7uw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMNfv4Eeu8g9ShRDr7uw\" name=\"consume\" isLastOf=\"__ROMNPv4Eeu8g9ShRDr7uw\" previous=\"__ROMNvv4Eeu8g9ShRDr7uw\" algorithm=\"cf_trace_report(&quot;received data: %c&quot;, read);&#xD;&#xA;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"__ROMNvv4Eeu8g9ShRDr7uw\" name=\"InAction\" isFirstOf=\"__ROMNPv4Eeu8g9ShRDr7uw\" next=\"__ROMNfv4Eeu8g9ShRDr7uw\" port=\"__ROMMfv4Eeu8g9ShRDr7uw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"__ROMgvv4Eeu8g9ShRDr7uw\" name=\"ProcessingFunction\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"VCS_COSIM_INTERFACE\">\n      <ports xmi:id=\"__ROMg_v4Eeu8g9ShRDr7uw\" name=\"read\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"__ROMivv4Eeu8g9ShRDr7uw\" relations=\"__ROMQPv4Eeu8g9ShRDr7uw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <ports xmi:id=\"__ROMhPv4Eeu8g9ShRDr7uw\" name=\"data\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"__ROMifv4Eeu8g9ShRDr7uw\" relations=\"__ROMlPv4Eeu8g9ShRDr7uw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__ROMhfv4Eeu8g9ShRDr7uw\" name=\"ProcessingFunctionBh\" firstStatement=\"__ROMhvv4Eeu8g9ShRDr7uw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMhvv4Eeu8g9ShRDr7uw\" name=\"init\" isFirstOf=\"__ROMhfv4Eeu8g9ShRDr7uw\" next=\"__ROMh_v4Eeu8g9ShRDr7uw\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__ROMh_v4Eeu8g9ShRDr7uw\" name=\"Loop\" firstStatement=\"__ROMifv4Eeu8g9ShRDr7uw\" lastStatement=\"__ROMivv4Eeu8g9ShRDr7uw\" previous=\"__ROMhvv4Eeu8g9ShRDr7uw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMiPv4Eeu8g9ShRDr7uw\" name=\"process\" previous=\"__ROMifv4Eeu8g9ShRDr7uw\" next=\"__ROMivv4Eeu8g9ShRDr7uw\" algorithm=\"read =data-32;&#xD;&#xA;cf_trace_report(&quot;read in processing:%c&quot;, read);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"__ROMifv4Eeu8g9ShRDr7uw\" name=\"InAction\" isFirstOf=\"__ROMh_v4Eeu8g9ShRDr7uw\" next=\"__ROMiPv4Eeu8g9ShRDr7uw\" port=\"__ROMhPv4Eeu8g9ShRDr7uw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"__ROMivv4Eeu8g9ShRDr7uw\" name=\"OutAction\" isLastOf=\"__ROMh_v4Eeu8g9ShRDr7uw\" previous=\"__ROMiPv4Eeu8g9ShRDr7uw\" port=\"__ROMg_v4Eeu8g9ShRDr7uw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"__ROMx_v4Eeu8g9ShRDr7uw\" name=\"Producer\" declarations=\"unsigned int datalen;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"__ROMyPv4Eeu8g9ShRDr7uw\" name=\"data\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"__ROMzfv4Eeu8g9ShRDr7uw\" relations=\"__ROMlPv4Eeu8g9ShRDr7uw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__ROMyfv4Eeu8g9ShRDr7uw\" name=\"ProducerBh\" firstStatement=\"__ROMyvv4Eeu8g9ShRDr7uw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMyvv4Eeu8g9ShRDr7uw\" name=\"init\" isFirstOf=\"__ROMyfv4Eeu8g9ShRDr7uw\" next=\"__ROMy_v4Eeu8g9ShRDr7uw\" algorithm=\"data ='a';&#xD;&#xA;datalen=1;\" executionTime=\"100 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__ROMy_v4Eeu8g9ShRDr7uw\" name=\"Loop\" firstStatement=\"__ROMzPv4Eeu8g9ShRDr7uw\" lastStatement=\"__ROMzfv4Eeu8g9ShRDr7uw\" previous=\"__ROMyvv4Eeu8g9ShRDr7uw\" condition=\"datalen--\" type=\"CONDITIONAL\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ROMzPv4Eeu8g9ShRDr7uw\" name=\"produce\" isFirstOf=\"__ROMy_v4Eeu8g9ShRDr7uw\" next=\"__ROMzfv4Eeu8g9ShRDr7uw\" algorithm=\"cf_trace_report(&quot;data input:%c&quot;, data);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"__ROMzfv4Eeu8g9ShRDr7uw\" name=\"OutAction\" isLastOf=\"__ROMy_v4Eeu8g9ShRDr7uw\" previous=\"__ROMzPv4Eeu8g9ShRDr7uw\" port=\"__ROMyPv4Eeu8g9ShRDr7uw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"__ROMQPv4Eeu8g9ShRDr7uw\" name=\"read\" ports=\"__ROMMfv4Eeu8g9ShRDr7uw __ROMg_v4Eeu8g9ShRDr7uw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"__ROMQfv4Eeu8g9ShRDr7uw\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"__ROMlPv4Eeu8g9ShRDr7uw\" name=\"data\" ports=\"__ROMyPv4Eeu8g9ShRDr7uw __ROMhPv4Eeu8g9ShRDr7uw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"2 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"__ROMlfv4Eeu8g9ShRDr7uw\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_NcuJUM3dEeuWXa1-cuLGvw\" name=\"Inheritance_example1App\" version=\"8.1.0_charles_1\" target=\"\" includeInheritedHeader=\"\" inheritanceClass=\"\" callToInheritedConstructors=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n  <annotations xmi:id=\"_NeOlMM3dEeuWXa1-cuLGvw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_NeOlMc3dEeuWXa1-cuLGvw\" key=\"cofluent.managedbuild.config.msvc2019.exe.release.483964003\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_NcuJUc3dEeuWXa1-cuLGvw\" name=\"Inheritance_example1AppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_OK_kkM3dEeuWXa1-cuLGvw\" name=\"F1\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_OLHgYM3dEeuWXa1-cuLGvw\" name=\"F1Bh\" firstStatement=\"_OLHgYc3dEeuWXa1-cuLGvw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_OLHgYc3dEeuWXa1-cuLGvw\" name=\"init\" isFirstOf=\"_OLHgYM3dEeuWXa1-cuLGvw\" algorithm=\"display();\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_P4oLJ83dEeuWXa1-cuLGvw\" name=\"F2\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_P4oLKM3dEeuWXa1-cuLGvw\" name=\"F2Bh\" firstStatement=\"_P4oLKc3dEeuWXa1-cuLGvw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_P4oLKc3dEeuWXa1-cuLGvw\" name=\"init\" isFirstOf=\"_P4oLKM3dEeuWXa1-cuLGvw\" algorithm=\"display();\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_cOuyEACVEeW1NMkd_7-DCQ\" name=\"CopyPayloadNonPod\" version=\"6.0.0_alpha2_20150504-2059\" cyclePeriod=\"10 ns\" affinity=\"&#xA;0  \" priority=\"&#xA;1  \" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"&#xA;100  \">\n  <annotations xmi:id=\"_rol4AACVEeW1NMkd_7-DCQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_8vXXIFDlEeegztV1Np81AQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.114614152\"/>\n    <details xmi:id=\"_D-5aEGC3EeeHhIqtsuzqYQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.2038451377\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_df2bsACVEeW1NMkd_7-DCQ\" name=\"DefMsgQ\" definition=\"#include &lt;iostream>&#xA;using namespace std;&#xA;struct DefMsgQ&#xA;{&#xA;    int field1;&#xA;    float field2;&#xA;    string field3;&#xA;    &#xA;    DefMsgQ() {&#xA;       field1 = 0;&#xA;       field2 = 0.0;&#xA;       field3 = &quot;N/A&quot;;&#xA;    };&#xA;    &#xA;&#xA;    DefMsgQ&amp; operator=(DefMsgQ rhs)&#xA;&#x9;{&#xA;&#x9;  field1 = rhs.field1;&#xA;&#x9;  field2 = rhs.field2;&#xA;&#x9;  field3 = rhs.field3;&#xA;&#x9;  &#x9;  &#xA;&#x9;  return *this;&#xA;&#x9;};&#xA;&#x9;&#xA;&#x9;friend std::ostream&amp;  operator&lt;&lt; (std::ostream&amp; os, const DefMsgQ&amp; _p){&#xA;      &#x9;os &lt;&lt; &quot;field1: &quot; &lt;&lt; _p.field1 &lt;&lt; &quot; - field2: &quot; &lt;&lt; _p.field2 &lt;&lt; &quot; - field3: &quot; &lt;&lt; _p.field3; &#xA;      &#x9;return os;&#xA;      }&#xA;&#xA;&#x9;&#xA;    ~DefMsgQ() {&#xA;       &#xA;    };&#xA;    &#xA;};\" copyPayload=\"&#x9;for (unsigned int i = 0; i &lt; _atom_count; i++)&#xA;      *(_address + i) = *(_value + i);\" tracePayload=\"    trace &lt;&lt; get_data();\" readTime=\"\" writeTime=\"\" allocatePayload=\"&#x9;&#x9;r = new DefMsgQ[_atom_count];\" deallocatePayload=\"    delete[] _address;\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_cOuyIACVEeW1NMkd_7-DCQ\" name=\"CopyPayloadNonPodSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_dfzYYACVEeW1NMkd_7-DCQ\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_dfzYYQCVEeW1NMkd_7-DCQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_dfzYbgCVEeW1NMkd_7-DCQ\" relations=\"_df0miQCVEeW1NMkd_7-DCQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_dfzYYgCVEeW1NMkd_7-DCQ\" name=\"ConsumerBh\" firstStatement=\"_dfzYYwCVEeW1NMkd_7-DCQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_dfzYYwCVEeW1NMkd_7-DCQ\" name=\"OpInit\" isFirstOf=\"_dfzYYgCVEeW1NMkd_7-DCQ\" next=\"_dfzYbACVEeW1NMkd_7-DCQ\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_dfzYbACVEeW1NMkd_7-DCQ\" name=\"Loop\" firstStatement=\"_dfzYbgCVEeW1NMkd_7-DCQ\" lastStatement=\"_dfzYegCVEeW1NMkd_7-DCQ\" previous=\"_dfzYYwCVEeW1NMkd_7-DCQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_dfzYbgCVEeW1NMkd_7-DCQ\" name=\"InAction\" isFirstOf=\"_dfzYbACVEeW1NMkd_7-DCQ\" next=\"_dfzYegCVEeW1NMkd_7-DCQ\" port=\"_dfzYYQCVEeW1NMkd_7-DCQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_dfzYegCVEeW1NMkd_7-DCQ\" name=\"OpDisplay\" isLastOf=\"_dfzYbACVEeW1NMkd_7-DCQ\" previous=\"_dfzYbgCVEeW1NMkd_7-DCQ\" algorithm=\"&#x9;// Use of the user-class stream operator '&lt;&lt;' to display values&#xA;&#x9;cout &lt;&lt; &quot;[Consumer]: &quot; &lt;&lt; MsgQ &lt;&lt; endl;&#xA;&#x9;&#xA;&#x9;// Use of the Intel CoFluent Studio programming interface cf_trace_report for reporting during simulation&#xA;&#x9;cf_trace_report(&quot;field1: %d - field2: %f - field3: %s&quot;, MsgQ.field1, MsgQ.field2, MsgQ.field3.c_str());\" executionTime=\"40 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_dfz_cACVEeW1NMkd_7-DCQ\" name=\"Producer\" declarations=\"int cpt;&#xD;&#xA;int Value[100];\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_dfz_cQCVEeW1NMkd_7-DCQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_dfz_fgCVEeW1NMkd_7-DCQ\" relations=\"_df0miQCVEeW1NMkd_7-DCQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_dfz_cgCVEeW1NMkd_7-DCQ\" name=\"ProducerBh\" firstStatement=\"_dfz_cwCVEeW1NMkd_7-DCQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_dfz_cwCVEeW1NMkd_7-DCQ\" name=\"OpInit\" isFirstOf=\"_dfz_cgCVEeW1NMkd_7-DCQ\" next=\"_dfz_fACVEeW1NMkd_7-DCQ\" algorithm=\"&#x9;cpt = 0;\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_dfz_fACVEeW1NMkd_7-DCQ\" name=\"Loop\" firstStatement=\"_dfz_kgCVEeW1NMkd_7-DCQ\" lastStatement=\"_dfz_iQCVEeW1NMkd_7-DCQ\" previous=\"_dfz_cwCVEeW1NMkd_7-DCQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_dfz_fgCVEeW1NMkd_7-DCQ\" name=\"OutAction\" previous=\"_dfz_kgCVEeW1NMkd_7-DCQ\" next=\"_dfz_iQCVEeW1NMkd_7-DCQ\" port=\"_dfz_cQCVEeW1NMkd_7-DCQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_dfz_iQCVEeW1NMkd_7-DCQ\" name=\"OpDisplay\" isLastOf=\"_dfz_fACVEeW1NMkd_7-DCQ\" previous=\"_dfz_fgCVEeW1NMkd_7-DCQ\" algorithm=\"&#x9;// Use of the user-class stream operator '&lt;&lt;' to display values&#xA;&#x9;cout &lt;&lt; &quot;[Producer]: &quot; &lt;&lt; MsgQ &lt;&lt; endl;&#xA;&#x9;&#xA;&#x9;// Use of the Intel CoFluent Studio programming interface cf_trace_report for reporting during simulation&#xA;&#x9;cf_trace_report(&quot;field1: %d - field2: %f - field3: %s&quot;, MsgQ.field1, MsgQ.field2, MsgQ.field3.c_str());&#x9;\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_dfz_kgCVEeW1NMkd_7-DCQ\" name=\"OpProd\" isFirstOf=\"_dfz_fACVEeW1NMkd_7-DCQ\" next=\"_dfz_fgCVEeW1NMkd_7-DCQ\" algorithm=\"&#x9;MsgQ.field1 = cpt;&#xA;   &#x9;MsgQ.field2 = cpt + 0.1;&#xA;&#xA;&#x9;switch (cpt)&#xA;&#x9;{&#xA;&#x9;&#x9;case 0:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 0&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 1:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 1&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 2:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 2&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 3:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 3&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 4:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 4&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 5:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 5&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 6:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 6&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 7:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 7&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;case 8:&#xA;&#x9;&#x9;&#x9;MsgQ.field3 = &quot;Msg N 8&quot;;&#xA;&#x9;&#x9;break;&#xA;&#x9;&#x9;default:&#xA;&#x9;&#x9;break;&#xA;&#x9;}   &#x9;&#xA;&#x9;cpt++;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_df0miQCVEeW1NMkd_7-DCQ\" name=\"MsgQ\" ports=\"_dfz_cQCVEeW1NMkd_7-DCQ _dfzYYQCVEeW1NMkd_7-DCQ\" capacity=\"10\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_fAUJwVDkEeegztV1Np81AQ\" dataType=\"_df2bsACVEeW1NMkd_7-DCQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_4E03EHi0EeO7MJQgy6Oojw\" name=\"CoFluentAPIFromExternalIP\" version=\"5.0.0_r1_20131015-0039\" cyclePeriod=\"10 ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_4E03EXi0EeO7MJQgy6Oojw\" source=\"codegen\">\n    <details xmi:id=\"_4E03Eni0EeO7MJQgy6Oojw\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"CoFluentAPIFromExternalIP/gen-sysc\"/>\n    <details xmi:id=\"_4E03E3i0EeO7MJQgy6Oojw\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"CoFluentAPIFromExternalIP/gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_4E03FHi0EeO7MJQgy6Oojw\" source=\"build\">\n    <details xmi:id=\"_4E03FXi0EeO7MJQgy6Oojw\" key=\"path\" value=\"CoFluentAPIFromExternalIP/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_ij8TEHi1EeO7MJQgy6Oojw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_jUk3gFAkEeezM6tBz2tHeg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.888648372\"/>\n    <details xmi:id=\"_wntYYGC1EeeHhIqtsuzqYQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.571512090\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_WtTuUHmcEeOwY7AzhmgpPQ\" name=\"DefMsgQ\" definition=\"typedef int DefMsgQ;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_gnpQgHmcEeOwY7AzhmgpPQ\" name=\"DefShVar\" definition=\"typedef int DefShVar;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_anBSsH09EeOQk5pp_mR3kw\" name=\"Initiator\" definition=\"typedef int Initiator;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_L2Y2UH1FEeOQk5pp_mR3kw\" name=\"Target\" definition=\"typedef int Target;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_4E03JHi0EeO7MJQgy6Oojw\" name=\"CoFluentAPIFromExternalIPSt\" documentation=\"\">\n    <models xsi:type=\"cofluent:SystemCIP\" xmi:id=\"_p1baFXltEeOwYrm2x2D6tA\" name=\"iUart\" documentation=\"\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" className=\"Uart\" generateInclude=\"true\">\n      <ports xmi:id=\"_1RnigH08EeOQk5pp_mR3kw\" name=\"p_mq_request\" documentation=\"\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_0quhoH08EeOQk5pp_mR3kw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_zZHf8H7VEeO737iuYbMrrw\" name=\"p_mq_response\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_yg4QYH7VEeO737iuYbMrrw\" synchronizeName=\"true\" vector=\"false\"/>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_DZIPwH09EeOQk5pp_mR3kw\" name=\"CoF_Initiator\" documentation=\"\" initializations=\"MsgFwQ = 0;&#xD;&#xA;MsgBwQ = 0;\" cyclePeriod=\" ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_KukMQH09EeOQk5pp_mR3kw\" name=\"MsgFwQ\" documentation=\"\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_IvDLkH09EeOQk5pp_mR3kw\" relations=\"_0quhoH08EeOQk5pp_mR3kw\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_FqV0kH7WEeO737iuYbMrrw\" name=\"MsgBwQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_EU65wH7WEeO737iuYbMrrw\" relations=\"_yg4QYH7VEeO737iuYbMrrw\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_FyQDQH09EeOQk5pp_mR3kw\" name=\"CoF_InitiatorBh\" documentation=\"\" firstStatement=\"_H2DHAH09EeOQk5pp_mR3kw\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_H2DHAH09EeOQk5pp_mR3kw\" name=\"Loop\" isFirstOf=\"_FyQDQH09EeOQk5pp_mR3kw\" firstStatement=\"_IRGrUH09EeOQk5pp_mR3kw\" lastStatement=\"_9Rq5cH7VEeO737iuYbMrrw\" condition=\"10\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_IRGrUH09EeOQk5pp_mR3kw\" name=\"SendMsg\" isFirstOf=\"_H2DHAH09EeOQk5pp_mR3kw\" next=\"_IvDLkH09EeOQk5pp_mR3kw\" algorithm=\"    MsgFwQ ++;&#xA;    cf_trace_report(&quot;Sending Message %d...&quot;, MsgFwQ);\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_IvDLkH09EeOQk5pp_mR3kw\" name=\"OutAction\" previous=\"_IRGrUH09EeOQk5pp_mR3kw\" next=\"_EU65wH7WEeO737iuYbMrrw\" port=\"_KukMQH09EeOQk5pp_mR3kw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_9Rq5cH7VEeO737iuYbMrrw\" name=\"ReceiveMsg\" isLastOf=\"_H2DHAH09EeOQk5pp_mR3kw\" previous=\"_EU65wH7WEeO737iuYbMrrw\" algorithm=\"    cf_trace_report(&quot;Receive Message %d...&quot;, MsgBwQ);\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_EU65wH7WEeO737iuYbMrrw\" name=\"InAction2\" previous=\"_IvDLkH09EeOQk5pp_mR3kw\" next=\"_9Rq5cH7VEeO737iuYbMrrw\" port=\"_FqV0kH7WEeO737iuYbMrrw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_0quhoH08EeOQk5pp_mR3kw\" name=\"MsgFwQ\" ports=\"_KukMQH09EeOQk5pp_mR3kw _1RnigH08EeOQk5pp_mR3kw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" response=\"_yg4QYH7VEeO737iuYbMrrw\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_5Lof0FAjEeezM6tBz2tHeg\" dataType=\"_WtTuUHmcEeOwY7AzhmgpPQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_yg4QYH7VEeO737iuYbMrrw\" name=\"MsgBwQ\" ports=\"_zZHf8H7VEeO737iuYbMrrw _FqV0kH7WEeO737iuYbMrrw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_5MHoAFAjEeezM6tBz2tHeg\" dataType=\"_WtTuUHmcEeOwY7AzhmgpPQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_vKUkAHjTEeW8k4lbVRqhTA\" name=\"TransactionTrackerMsgQApp\" version=\"6.1.0_beta1_20151021-2100\" declarations=\"\" initializations=\"\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_uyxxQHjUEeW8k4lbVRqhTA\" source=\"cdt.configurations\">\n    <details xmi:id=\"_76t50HmCEeWxlOmdoqZvsg\" key=\"cofluent.managedbuild.config.gnu.gcc.exe.release.1135856797\"/>\n    <details xmi:id=\"_6M4rwFWlEeepatXwduhZdg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.681099761\"/>\n    <details xmi:id=\"_GRUAAGFkEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.590893553\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_vKUkEHjTEeW8k4lbVRqhTA\" name=\"TransactionTrackerMsgQAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_wWT2AHjTEeW8k4lbVRqhTA\" name=\"Consumer1\" declarations=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_wWT2AXjTEeW8k4lbVRqhTA\" name=\"MsgQOut1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_wWT2GHjTEeW8k4lbVRqhTA\" relations=\"_wWWSSXjTEeW8k4lbVRqhTA\" size=\"\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_wWT2A3jTEeW8k4lbVRqhTA\" name=\"Consumer1Bh\" firstStatement=\"_wWT2BHjTEeW8k4lbVRqhTA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWT2BHjTEeW8k4lbVRqhTA\" name=\"init\" isFirstOf=\"_wWT2A3jTEeW8k4lbVRqhTA\" next=\"_wWT2DXjTEeW8k4lbVRqhTA\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_wWT2DXjTEeW8k4lbVRqhTA\" name=\"Loop\" firstStatement=\"_wWT2GHjTEeW8k4lbVRqhTA\" lastStatement=\"_wWT2D3jTEeW8k4lbVRqhTA\" previous=\"_wWT2BHjTEeW8k4lbVRqhTA\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWT2D3jTEeW8k4lbVRqhTA\" name=\"receive_out1\" isLastOf=\"_wWT2DXjTEeW8k4lbVRqhTA\" previous=\"_wWT2GHjTEeW8k4lbVRqhTA\" algorithm=\"&#x9;cf_trace_report(&quot;Timeline tracking %s&quot;, MsgQOut1_trans.get_timeline_track().c_str());\" executionTime=\"20 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_wWT2GHjTEeW8k4lbVRqhTA\" name=\"InAction\" isFirstOf=\"_wWT2DXjTEeW8k4lbVRqhTA\" next=\"_wWT2D3jTEeW8k4lbVRqhTA\" port=\"_wWT2AXjTEeW8k4lbVRqhTA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_wWUdP3jTEeW8k4lbVRqhTA\" name=\"Consumer2\" declarations=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_wWUdQHjTEeW8k4lbVRqhTA\" name=\"MsgQOut2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_wWUdV3jTEeW8k4lbVRqhTA\" relations=\"_wWVEKXjTEeW8k4lbVRqhTA\" size=\"\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_wWUdQnjTEeW8k4lbVRqhTA\" name=\"Consumer2Bh\" firstStatement=\"_wWUdQ3jTEeW8k4lbVRqhTA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWUdQ3jTEeW8k4lbVRqhTA\" name=\"init\" isFirstOf=\"_wWUdQnjTEeW8k4lbVRqhTA\" next=\"_wWUdTHjTEeW8k4lbVRqhTA\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_wWUdTHjTEeW8k4lbVRqhTA\" name=\"Loop\" firstStatement=\"_wWUdV3jTEeW8k4lbVRqhTA\" lastStatement=\"_wWUdTnjTEeW8k4lbVRqhTA\" previous=\"_wWUdQ3jTEeW8k4lbVRqhTA\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWUdTnjTEeW8k4lbVRqhTA\" name=\"receive_out2\" isLastOf=\"_wWUdTHjTEeW8k4lbVRqhTA\" previous=\"_wWUdV3jTEeW8k4lbVRqhTA\" algorithm=\"&#x9;cf_trace_report(&quot;Timeline tracking %s&quot;, MsgQOut2_trans.get_timeline_track().c_str());&#x9;\" executionTime=\"20 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_wWUdV3jTEeW8k4lbVRqhTA\" name=\"InAction\" isFirstOf=\"_wWUdTHjTEeW8k4lbVRqhTA\" next=\"_wWUdTnjTEeW8k4lbVRqhTA\" port=\"_wWUdQHjTEeW8k4lbVRqhTA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_wWVrY3jTEeW8k4lbVRqhTA\" name=\"Producer\" constructor=\"\" includes=\" #include &lt;sstream>\" destructor=\"\" declarations=\"int TempInt;\" definitions=\"\" initializations=\"TempInt = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_wWVrZnjTEeW8k4lbVRqhTA\" name=\"MsgQIn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_wWVrfHjTEeW8k4lbVRqhTA\" relations=\"_wWVEPXjTEeW8k4lbVRqhTA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_wWVrZ3jTEeW8k4lbVRqhTA\" name=\"ProducerBh\" firstStatement=\"_wWVraHjTEeW8k4lbVRqhTA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWVraHjTEeW8k4lbVRqhTA\" name=\"init\" isFirstOf=\"_wWVrZ3jTEeW8k4lbVRqhTA\" next=\"_wWVrcXjTEeW8k4lbVRqhTA\" algorithm=\"&#x9;cf_trace_report(&quot;Trabsaction tracking when MsgQIn = 1 and 2&quot;);\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_wWVrcXjTEeW8k4lbVRqhTA\" name=\"Loop\" firstStatement=\"_wWVrc3jTEeW8k4lbVRqhTA\" lastStatement=\"_wWVrfHjTEeW8k4lbVRqhTA\" previous=\"_wWVraHjTEeW8k4lbVRqhTA\" condition=\"4\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWVrc3jTEeW8k4lbVRqhTA\" name=\"set_tracker\" isFirstOf=\"_wWVrcXjTEeW8k4lbVRqhTA\" next=\"_wWVrfHjTEeW8k4lbVRqhTA\" algorithm=\"&#x9;MsgQIn = TempInt;&#xA;&#x9;&#xA;&#x9;/* Condition to track transaction when data sent is 1 or 2*/&#xA;&#x9;if( (TempInt >= 1) &amp;&amp; (TempInt &lt;= 2) ) {&#xA;        /*set the timeline track string*/&#xA;&#x9;&#x9;std::ostringstream track;&#xA;&#x9;&#x9;track &lt;&lt; &quot;MsgQIn= &quot; &lt;&lt; TempInt;&#xA;&#x9;&#xA;&#x9;&#x9;MsgQIn_trans.set_timeline_track(track.str());&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;&#x9;MsgQIn_trans.unset_timeline_track();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;TempInt++;\" executionTime=\"100 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_wWVrfHjTEeW8k4lbVRqhTA\" name=\"OutAction\" isLastOf=\"_wWVrcXjTEeW8k4lbVRqhTA\" previous=\"_wWVrc3jTEeW8k4lbVRqhTA\" port=\"_wWVrZnjTEeW8k4lbVRqhTA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_wWW5UHjTEeW8k4lbVRqhTA\" name=\"MessageRouting\" declarations=\"bool CondOut1 = false;\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_wWW5UXjTEeW8k4lbVRqhTA\" name=\"MsgQIn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_wWW5anjTEeW8k4lbVRqhTA\" relations=\"_wWVEPXjTEeW8k4lbVRqhTA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_wWW5UnjTEeW8k4lbVRqhTA\" name=\"MsgQOut2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_wWW5dnjTEeW8k4lbVRqhTA\" relations=\"_wWVEKXjTEeW8k4lbVRqhTA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_wWW5U3jTEeW8k4lbVRqhTA\" name=\"MsgQOut1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_wWW5oXjTEeW8k4lbVRqhTA\" relations=\"_wWWSSXjTEeW8k4lbVRqhTA\" size=\"\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_wWW5VXjTEeW8k4lbVRqhTA\" name=\"MessageRoutingBh\" firstStatement=\"_wWW5VnjTEeW8k4lbVRqhTA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWW5VnjTEeW8k4lbVRqhTA\" name=\"init\" isFirstOf=\"_wWW5VXjTEeW8k4lbVRqhTA\" next=\"_wWW5X3jTEeW8k4lbVRqhTA\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_wWW5X3jTEeW8k4lbVRqhTA\" name=\"Loop\" firstStatement=\"_wWW5anjTEeW8k4lbVRqhTA\" lastStatement=\"_wWW5injTEeW8k4lbVRqhTA\" previous=\"_wWW5VnjTEeW8k4lbVRqhTA\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWW5YXjTEeW8k4lbVRqhTA\" name=\"routing\" previous=\"_wWW5anjTEeW8k4lbVRqhTA\" next=\"_wWW5injTEeW8k4lbVRqhTA\" algorithm=\"&#x9;if (CondOut1== true)&#xA;&#x9;{&#xA;&#x9;&#x9;/**MsgQIn => MsgQOut2**/&#xA;&#x9;&#x9;CondOut1 = false;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;/**MsgQIn => MsgQOut1**/&#xA;&#x9;&#x9;CondOut1 = true;&#xA;&#x9;}\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_wWW5anjTEeW8k4lbVRqhTA\" name=\"InAction\" isFirstOf=\"_wWW5X3jTEeW8k4lbVRqhTA\" next=\"_wWW5YXjTEeW8k4lbVRqhTA\" port=\"_wWW5UXjTEeW8k4lbVRqhTA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_wWW5dnjTEeW8k4lbVRqhTA\" name=\"OutAction\" isLastOf=\"_wWW5jXjTEeW8k4lbVRqhTA\" previous=\"_wWW5j3jTEeW8k4lbVRqhTA\" port=\"_wWW5UnjTEeW8k4lbVRqhTA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_wWW5injTEeW8k4lbVRqhTA\" name=\"Alternative\" isLastOf=\"_wWW5X3jTEeW8k4lbVRqhTA\" previous=\"_wWW5YXjTEeW8k4lbVRqhTA\">\n          <conditionalBranches xmi:id=\"_wWW5i3jTEeW8k4lbVRqhTA\" name=\"Branch\" firstStatement=\"_wWW5mHjTEeW8k4lbVRqhTA\" lastStatement=\"_wWW5oXjTEeW8k4lbVRqhTA\" condition=\"CondOut1\"/>\n          <conditionalBranches xmi:id=\"_wWW5jXjTEeW8k4lbVRqhTA\" name=\"Branch2\" firstStatement=\"_wWW5j3jTEeW8k4lbVRqhTA\" lastStatement=\"_wWW5dnjTEeW8k4lbVRqhTA\" condition=\"\"/>\n        </statements>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWW5j3jTEeW8k4lbVRqhTA\" name=\"to_out2\" isFirstOf=\"_wWW5jXjTEeW8k4lbVRqhTA\" next=\"_wWW5dnjTEeW8k4lbVRqhTA\" algorithm=\"&#x9;MsgQOut2 = MsgQIn + 1;&#x9;&#xA;&#x9;&#xA;&#x9;/*Replicate tracking information*/ &#xA;&#x9;MsgQOut2_trans.copy_tracking(MsgQIn_trans);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_wWW5mHjTEeW8k4lbVRqhTA\" name=\"to_out1\" isFirstOf=\"_wWW5i3jTEeW8k4lbVRqhTA\" next=\"_wWW5oXjTEeW8k4lbVRqhTA\" algorithm=\"&#x9;MsgQOut1 = MsgQIn + 1;&#x9;&#xA;&#x9;&#xA;&#x9;/*Replicate tracking information*/ &#xA;&#x9;MsgQOut1_trans.copy_tracking(MsgQIn_trans);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_wWW5oXjTEeW8k4lbVRqhTA\" name=\"OutAction2\" isLastOf=\"_wWW5i3jTEeW8k4lbVRqhTA\" previous=\"_wWW5mHjTEeW8k4lbVRqhTA\" port=\"_wWW5U3jTEeW8k4lbVRqhTA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_wWVEKXjTEeW8k4lbVRqhTA\" name=\"MsgQOut2\" ports=\"_wWUdQHjTEeW8k4lbVRqhTA _wWW5UnjTEeW8k4lbVRqhTA\" capacity=\"3\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_j5J4IHjbEeW8k4lbVRqhTA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_wWVEPXjTEeW8k4lbVRqhTA\" name=\"MsgQIn\" ports=\"_wWVrZnjTEeW8k4lbVRqhTA _wWW5UXjTEeW8k4lbVRqhTA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_nLRwMHjbEeW8k4lbVRqhTA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_wWWSSXjTEeW8k4lbVRqhTA\" name=\"MsgQOut1\" ports=\"_wWW5U3jTEeW8k4lbVRqhTA _wWT2AXjTEeW8k4lbVRqhTA\" capacity=\"3\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_koYVoHjbEeW8k4lbVRqhTA\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_m_BvAHQcEeWGhY6Pn9jbpQ\" name=\"ProtocolMapDataTypeApp\" version=\"6.1.0_beta1_20151012-2100\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_hfhRwHcvEeWGhY6Pn9jbpQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_hv7n4HfVEeWZTpY6_QhJHA\" key=\"cofluent.managedbuild.config.gnu.gcc.exe.release.141088608\"/>\n    <details xmi:id=\"_YpU1sFDoEeegztV1Np81AQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.990284901\"/>\n    <details xmi:id=\"_L7UooGC4EeeHhIqtsuzqYQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1112319583\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_m_BvEHQcEeWGhY6Pn9jbpQ\" name=\"ProtocolMapDataTypeAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oKom6HQcEeWGhY6Pn9jbpQ\" name=\"ProtocolSend\" includes=\"\" declarations=\"int number_of_packets;\" initializations=\"number_of_packets = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_oKom6nQcEeWGhY6Pn9jbpQ\" name=\"protocol_data\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_oKonDHQcEeWGhY6Pn9jbpQ\" relations=\"_oKomgHQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_oKom63QcEeWGhY6Pn9jbpQ\" name=\"user_data_in\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_oKonAHQcEeWGhY6Pn9jbpQ\" relations=\"_oKomlXQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oKom7HQcEeWGhY6Pn9jbpQ\" name=\"ProtocolSendBh\" firstStatement=\"_oKom7XQcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKom7XQcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_oKom7HQcEeWGhY6Pn9jbpQ\" next=\"_oKom9XQcEeWGhY6Pn9jbpQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKom9XQcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_oKonAHQcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKonIHQcEeWGhY6Pn9jbpQ\" previous=\"_oKom7XQcEeWGhY6Pn9jbpQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKom93QcEeWGhY6Pn9jbpQ\" name=\"fragment\" previous=\"_oKonAHQcEeWGhY6Pn9jbpQ\" next=\"_oKonIHQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;protocol_data_trans = user_data_in_trans;&#xA;&#x9;number_of_packets =(int) (user_data_in_trans.get_user_data_length() / cf_dt::cf_data_size(5,CF_BYTE));&#xA;&#x9;protocol_data_trans.set_map_data&lt;int>(&quot;number_of_packets&quot;,number_of_packets);&#xA;&#x9;&#xA;&#x9;cf_trace_report( &quot;number_of_packets to send = %d&quot;, number_of_packets);\" executionTime=\"5 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_oKonAHQcEeWGhY6Pn9jbpQ\" name=\"InAction\" isFirstOf=\"_oKom9XQcEeWGhY6Pn9jbpQ\" next=\"_oKom93QcEeWGhY6Pn9jbpQ\" port=\"_oKom63QcEeWGhY6Pn9jbpQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_oKonDHQcEeWGhY6Pn9jbpQ\" name=\"OutAction\" isLastOf=\"_oKonIHQcEeWGhY6Pn9jbpQ\" previous=\"_oKonF3QcEeWGhY6Pn9jbpQ\" port=\"_oKom6nQcEeWGhY6Pn9jbpQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKonF3QcEeWGhY6Pn9jbpQ\" name=\"send\" isFirstOf=\"_oKonIHQcEeWGhY6Pn9jbpQ\" next=\"_oKonDHQcEeWGhY6Pn9jbpQ\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKonIHQcEeWGhY6Pn9jbpQ\" name=\"Loop2\" isLastOf=\"_oKom9XQcEeWGhY6Pn9jbpQ\" firstStatement=\"_oKonF3QcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKonDHQcEeWGhY6Pn9jbpQ\" previous=\"_oKom93QcEeWGhY6Pn9jbpQ\" condition=\"number_of_packets\" type=\"MULTIPLICATION\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oKpN1XQcEeWGhY6Pn9jbpQ\" name=\"Consumer\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_oKpN1nQcEeWGhY6Pn9jbpQ\" name=\"user_data_out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_oKpN7HQcEeWGhY6Pn9jbpQ\" relations=\"_oKpNmXQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oKpN13QcEeWGhY6Pn9jbpQ\" name=\"ConsumerBh\" firstStatement=\"_oKpN2HQcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKpN2HQcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_oKpN13QcEeWGhY6Pn9jbpQ\" next=\"_oKpN4XQcEeWGhY6Pn9jbpQ\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKpN4XQcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_oKpN7HQcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKpN43QcEeWGhY6Pn9jbpQ\" previous=\"_oKpN2HQcEeWGhY6Pn9jbpQ\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKpN43QcEeWGhY6Pn9jbpQ\" name=\"consume\" isLastOf=\"_oKpN4XQcEeWGhY6Pn9jbpQ\" previous=\"_oKpN7HQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;cf_trace_report( &quot;data = %d&quot;, user_data_out_trans.get_map_data&lt;int>(&quot;data&quot;) );\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_oKpN7HQcEeWGhY6Pn9jbpQ\" name=\"InAction\" isFirstOf=\"_oKpN4XQcEeWGhY6Pn9jbpQ\" next=\"_oKpN43QcEeWGhY6Pn9jbpQ\" port=\"_oKpN1nQcEeWGhY6Pn9jbpQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oKpOOHQcEeWGhY6Pn9jbpQ\" name=\"Producer\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_oKpOOXQcEeWGhY6Pn9jbpQ\" name=\"user_data_in\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_oKpOT3QcEeWGhY6Pn9jbpQ\" relations=\"_oKomlXQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oKpOOnQcEeWGhY6Pn9jbpQ\" name=\"ProducerBh\" firstStatement=\"_oKpOO3QcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKpOO3QcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_oKpOOnQcEeWGhY6Pn9jbpQ\" next=\"_oKpORHQcEeWGhY6Pn9jbpQ\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKpORHQcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_oKpORnQcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKpOT3QcEeWGhY6Pn9jbpQ\" previous=\"_oKpOO3QcEeWGhY6Pn9jbpQ\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKpORnQcEeWGhY6Pn9jbpQ\" name=\"produce\" isFirstOf=\"_oKpORHQcEeWGhY6Pn9jbpQ\" next=\"_oKpOT3QcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;int varInt = 18071968;&#xA;&#xA;&#x9;user_data_in_trans.set_map_data&lt;int>(&quot;data&quot;, varInt);&#xA;&#x9;user_data_in_trans.set_user_data_length( cf_dt::cf_data_size(20,CF_BYTE) );\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_oKpOT3QcEeWGhY6Pn9jbpQ\" name=\"OutAction\" isLastOf=\"_oKpORHQcEeWGhY6Pn9jbpQ\" previous=\"_oKpORnQcEeWGhY6Pn9jbpQ\" port=\"_oKpOOXQcEeWGhY6Pn9jbpQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oKp063QcEeWGhY6Pn9jbpQ\" name=\"ProtocolReceive\" declarations=\"int number_of_packets;\" initializations=\"number_of_packets = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_oKp07HQcEeWGhY6Pn9jbpQ\" name=\"protocol_data\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_oKp1AnQcEeWGhY6Pn9jbpQ\" relations=\"_oKomgHQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_oKp07XQcEeWGhY6Pn9jbpQ\" name=\"user_data_out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_oKp1DnQcEeWGhY6Pn9jbpQ\" relations=\"_oKpNmXQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oKp07nQcEeWGhY6Pn9jbpQ\" name=\"ProtocolReceiveBh\" firstStatement=\"_oKp073QcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKp073QcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_oKp07nQcEeWGhY6Pn9jbpQ\" next=\"_oKp093QcEeWGhY6Pn9jbpQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKp093QcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_oKp1G3QcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKp1DnQcEeWGhY6Pn9jbpQ\" previous=\"_oKp073QcEeWGhY6Pn9jbpQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKp0-XQcEeWGhY6Pn9jbpQ\" name=\"gather_and_send\" previous=\"_oKp1GXQcEeWGhY6Pn9jbpQ\" next=\"_oKp1DnQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;protocol_data_trans.delete_map_data(&quot;number_of_packets&quot;);&#xA;&#x9;user_data_out_trans = protocol_data_trans;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_oKp1AnQcEeWGhY6Pn9jbpQ\" name=\"InAction\" isFirstOf=\"_oKp1GXQcEeWGhY6Pn9jbpQ\" next=\"_oKp1JHQcEeWGhY6Pn9jbpQ\" port=\"_oKp07HQcEeWGhY6Pn9jbpQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_oKp1DnQcEeWGhY6Pn9jbpQ\" name=\"OutAction\" isLastOf=\"_oKp093QcEeWGhY6Pn9jbpQ\" previous=\"_oKp0-XQcEeWGhY6Pn9jbpQ\" port=\"_oKp07XQcEeWGhY6Pn9jbpQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKp1GXQcEeWGhY6Pn9jbpQ\" name=\"Loop2\" firstStatement=\"_oKp1AnQcEeWGhY6Pn9jbpQ\" lastStatement=\"_oKp1JHQcEeWGhY6Pn9jbpQ\" previous=\"_oKp1G3QcEeWGhY6Pn9jbpQ\" next=\"_oKp0-XQcEeWGhY6Pn9jbpQ\" condition=\"number_of_packets\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKp1G3QcEeWGhY6Pn9jbpQ\" name=\"init_data_receive\" isFirstOf=\"_oKp093QcEeWGhY6Pn9jbpQ\" next=\"_oKp1GXQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;number_of_packets = 1;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oKp1JHQcEeWGhY6Pn9jbpQ\" name=\"receive\" isLastOf=\"_oKp1GXQcEeWGhY6Pn9jbpQ\" previous=\"_oKp1AnQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;number_of_packets = protocol_data_trans.get_map_data&lt;int>(&quot;number_of_packets&quot;);&#x9;\" executionTime=\"5 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_oKomgHQcEeWGhY6Pn9jbpQ\" name=\"protocol_data\" ports=\"_oKp07HQcEeWGhY6Pn9jbpQ _oKom6nQcEeWGhY6Pn9jbpQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"2 ns\" receiveTime=\"3 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_oKomgXQcEeWGhY6Pn9jbpQ\" predefinedType=\"MAP\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_oKomlXQcEeWGhY6Pn9jbpQ\" name=\"user_data_in\" ports=\"_oKpOOXQcEeWGhY6Pn9jbpQ _oKom63QcEeWGhY6Pn9jbpQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_oKomlnQcEeWGhY6Pn9jbpQ\" predefinedType=\"MAP\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_oKpNmXQcEeWGhY6Pn9jbpQ\" name=\"user_data_out\" ports=\"_oKpN1nQcEeWGhY6Pn9jbpQ _oKp07XQcEeWGhY6Pn9jbpQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_oKpNmnQcEeWGhY6Pn9jbpQ\" predefinedType=\"MAP\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_Fxxf8HQcEeWGhY6Pn9jbpQ\" name=\"MapDataTypeAPIApp\" version=\"6.1.0_beta1_20151012-2100\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_9LRykHY8EeWGhY6Pn9jbpQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_NfUVwHfSEeWT3-plK_cXlg\" key=\"cofluent.managedbuild.config.gnu.gcc.exe.release.693338703\"/>\n    <details xmi:id=\"_R2AHwFDoEeegztV1Np81AQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.386993128\"/>\n    <details xmi:id=\"_t-7GUGC3EeeHhIqtsuzqYQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1890232987\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_FxxgAHQcEeWGhY6Pn9jbpQ\" name=\"MapDataTypeAPIAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_an1wHHQcEeWGhY6Pn9jbpQ\" name=\"ProducerMap\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_an1wHXQcEeWGhY6Pn9jbpQ\" name=\"MsgQMap\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_an1wM3QcEeWGhY6Pn9jbpQ\" relations=\"_an1v4HQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_an1wHnQcEeWGhY6Pn9jbpQ\" name=\"ProducerMapBh\" firstStatement=\"_an1wH3QcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_an1wH3QcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_an1wHnQcEeWGhY6Pn9jbpQ\" next=\"_an1wKHQcEeWGhY6Pn9jbpQ\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_an1wKHQcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_an1wKnQcEeWGhY6Pn9jbpQ\" lastStatement=\"_an1wM3QcEeWGhY6Pn9jbpQ\" previous=\"_an1wH3QcEeWGhY6Pn9jbpQ\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_an1wKnQcEeWGhY6Pn9jbpQ\" name=\"produce\" isFirstOf=\"_an1wKHQcEeWGhY6Pn9jbpQ\" next=\"_an1wM3QcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;int varInt = 85;&#xA;&#x9;double varDouble = 8.05;&#xA;&#x9;char varChar = 'a';&#xA;&#x9;&#xA;&#x9;MsgQMap_trans.set_map_data&lt;int>(&quot;key_int&quot;, varInt);&#xA;&#x9;MsgQMap_trans.set_map_data&lt;double>(&quot;key_double&quot;, varDouble);&#xA;&#x9;MsgQMap_trans.set_map_data&lt;char>(&quot;key_char&quot;, varChar);&#x9;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_an1wM3QcEeWGhY6Pn9jbpQ\" name=\"OutAction\" isLastOf=\"_an1wKHQcEeWGhY6Pn9jbpQ\" previous=\"_an1wKnQcEeWGhY6Pn9jbpQ\" port=\"_an1wHXQcEeWGhY6Pn9jbpQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_an2XMHQcEeWGhY6Pn9jbpQ\" name=\"ConsumerMap\" constructor=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_an2XMnQcEeWGhY6Pn9jbpQ\" name=\"MsgQMap\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_an2XSHQcEeWGhY6Pn9jbpQ\" relations=\"_an1v4HQcEeWGhY6Pn9jbpQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_an2XM3QcEeWGhY6Pn9jbpQ\" name=\"ConsumerMapBh\" firstStatement=\"_an2XNHQcEeWGhY6Pn9jbpQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_an2XNHQcEeWGhY6Pn9jbpQ\" name=\"init\" isFirstOf=\"_an2XM3QcEeWGhY6Pn9jbpQ\" next=\"_an2XPXQcEeWGhY6Pn9jbpQ\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_an2XPXQcEeWGhY6Pn9jbpQ\" name=\"Loop\" firstStatement=\"_an2XSHQcEeWGhY6Pn9jbpQ\" lastStatement=\"_an2XP3QcEeWGhY6Pn9jbpQ\" previous=\"_an2XNHQcEeWGhY6Pn9jbpQ\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_an2XP3QcEeWGhY6Pn9jbpQ\" name=\"consume\" isLastOf=\"_an2XPXQcEeWGhY6Pn9jbpQ\" previous=\"_an2XSHQcEeWGhY6Pn9jbpQ\" algorithm=\"&#x9;cf_trace_report(&quot;*****map received by using get_map_data*****&quot;);&#xA;&#x9;cf_trace_report(&quot;                key_int = %d                &quot;, MsgQMap_trans.get_map_data&lt;int>(&quot;key_int&quot;));&#xA;&#x9;cf_trace_report(&quot;                key_double = %f             &quot;, MsgQMap_trans.get_map_data&lt;double>(&quot;key_double&quot;));&#xA;&#x9;cf_trace_report(&quot;                key_char = %c               &quot;, MsgQMap_trans.get_map_data&lt;char>(&quot;key_char&quot;));&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*****map received by using conv_map_to_string*****&quot;);&#xA;&#x9;cf_trace_report(&quot;                   map:%s                         &quot;, MsgQMap_trans.conv_map_to_string().c_str());&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*****size of the map received*****&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;           map size = %d          &quot;, MsgQMap_trans.get_map_size());&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*****delete element related to the key_char*****&quot;);&#xA;&#x9;MsgQMap_trans.delete_map_data(&quot;key_char&quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*****verify if the element related to the key_char is in the map*****&quot;);&#xA;&#x9;if(MsgQMap_trans.has_map_data(&quot;key_char&quot;))&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                    key_char = %c                               &quot;, MsgQMap_trans.get_map_data&lt;char>(&quot;key_char&quot;));&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;        no element related to key_char in the map       &quot;);&#xA;&#x9;}&#x9;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*****content of the map after the element related to the key_char has been deleted*****&quot;);&#xA;&#x9;cf_trace_report(&quot;                                   map: %s                                          &quot;, MsgQMap_trans.conv_map_to_string().c_str());&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;************size of the map after the element related to the key_char has been deleted*************&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;                                   map size = %d                                                &quot;, MsgQMap_trans.get_map_size());&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;cf_trace_report(&quot;************erase all the content of the map**************&quot;);&#xA;&#x9;MsgQMap_trans.erase_map_data();&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#xA;&#x9;cf_trace_report(&quot;*****map is empty?*****&quot;);&#xA;&#x9;if(MsgQMap_trans.is_map_empty())&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;     map is empty  &quot;);&#xA;&#x9;&#x9;cf_trace_report(&quot;     map size = %d &quot;, MsgQMap_trans.get_map_size());&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;     map is not empty&quot;);&#xA;&#x9;&#x9;cf_trace_report(&quot;     map size = %d &quot;, MsgQMap_trans.get_map_size());&#xA;&#x9;}\" executionTime=\"5 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_an2XSHQcEeWGhY6Pn9jbpQ\" name=\"InAction\" isFirstOf=\"_an2XPXQcEeWGhY6Pn9jbpQ\" next=\"_an2XP3QcEeWGhY6Pn9jbpQ\" port=\"_an2XMnQcEeWGhY6Pn9jbpQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_an1v4HQcEeWGhY6Pn9jbpQ\" name=\"MsgQMap\" ports=\"_an2XMnQcEeWGhY6Pn9jbpQ _an1wHXQcEeWGhY6Pn9jbpQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_an1v4XQcEeWGhY6Pn9jbpQ\" predefinedType=\"MAP\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_4rAUUHgIEeWiStKCVYNGAA\" name=\"ApplicationVectorDataType\" version=\"6.1.0_alpha1_20151007-1142\" declarations=\"\" initializations=\"\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_g01pEHgLEeWiStKCVYNGAA\" source=\"cdt.configurations\">\n    <details xmi:id=\"_vis6sHjGEeWYrZ1ClPi6PA\" key=\"cofluent.managedbuild.config.gnu.gcc.exe.release.1683474215\"/>\n    <details xmi:id=\"_Hj1M0FWoEeepatXwduhZdg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.530084577\"/>\n    <details xmi:id=\"_TpDnwGFlEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.301100444\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_4rAUYHgIEeWiStKCVYNGAA\" name=\"ApplicationVectorDataTypeSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_8UCQsHgIEeWiStKCVYNGAA\" name=\"Producer\" declarations=\"int value;\" initializations=\"value = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_8UCQsXgIEeWiStKCVYNGAA\" name=\"user_data_in\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_8UCQx3gIEeWiStKCVYNGAA\" relations=\"_XGrzoHgJEeWiStKCVYNGAA\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_8UCQsngIEeWiStKCVYNGAA\" name=\"ProducerBh\" firstStatement=\"_8UCQs3gIEeWiStKCVYNGAA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_8UCQs3gIEeWiStKCVYNGAA\" name=\"init\" isFirstOf=\"_8UCQsngIEeWiStKCVYNGAA\" next=\"_8UCQvHgIEeWiStKCVYNGAA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_8UCQvHgIEeWiStKCVYNGAA\" name=\"Loop\" firstStatement=\"_8UCQvngIEeWiStKCVYNGAA\" lastStatement=\"_8UCQx3gIEeWiStKCVYNGAA\" previous=\"_8UCQs3gIEeWiStKCVYNGAA\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_8UCQvngIEeWiStKCVYNGAA\" name=\"produce\" isFirstOf=\"_8UCQvHgIEeWiStKCVYNGAA\" next=\"_8UCQx3gIEeWiStKCVYNGAA\" algorithm=\"&#x9;for(int i=0; i&lt;8;i++)&#xA;&#x9;{&#xA;&#x9;&#x9;user_data_in_trans.set_vector_data&lt;int>(i, value%2);&#xA;&#x9;&#x9;value++;&#xA;&#x9;}&#xA;&#x9;user_data_in_trans.set_user_data_length( cf_dt::cf_data_size(20,CF_BYTE) );&#x9;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_8UCQx3gIEeWiStKCVYNGAA\" name=\"OutAction\" isLastOf=\"_8UCQvHgIEeWiStKCVYNGAA\" previous=\"_8UCQvngIEeWiStKCVYNGAA\" port=\"_8UCQsXgIEeWiStKCVYNGAA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_QNo4MHgJEeWiStKCVYNGAA\" name=\"Processing\" declarations=\"int block_index;\" initializations=\"block_index = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_QNo4MXgJEeWiStKCVYNGAA\" name=\"user_data_in\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_QNo4R3gJEeWiStKCVYNGAA\" relations=\"_XGrzoHgJEeWiStKCVYNGAA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_QNo4MngJEeWiStKCVYNGAA\" name=\"user_data_out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_QNo4U3gJEeWiStKCVYNGAA\" relations=\"_dFEoMHgKEeWiStKCVYNGAA\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_QNo4M3gJEeWiStKCVYNGAA\" name=\"ProcessingBh\" firstStatement=\"_QNo4NHgJEeWiStKCVYNGAA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_QNo4NHgJEeWiStKCVYNGAA\" name=\"init\" isFirstOf=\"_QNo4M3gJEeWiStKCVYNGAA\" next=\"_QNo4PHgJEeWiStKCVYNGAA\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_QNo4PHgJEeWiStKCVYNGAA\" name=\"Loop\" firstStatement=\"_QNo4R3gJEeWiStKCVYNGAA\" lastStatement=\"_QNo4U3gJEeWiStKCVYNGAA\" previous=\"_QNo4NHgJEeWiStKCVYNGAA\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_QNo4PngJEeWiStKCVYNGAA\" name=\"process\" previous=\"_QNo4R3gJEeWiStKCVYNGAA\" next=\"_QNo4U3gJEeWiStKCVYNGAA\" algorithm=\"&#x9;user_data_out_trans = user_data_in_trans;&#xA;&#x9;&#x9;&#xA;&#x9;int parity_bit = 0;&#xA;&#x9;int total_zero_number = 0;&#xA;&#x9;int vector_size = user_data_in_trans.get_vector_size();&#xA;&#x9;&#xA;&#x9;for(int i=0; i&lt;vector_size ;i++)&#xA;&#x9;{&#xA;&#x9;&#x9;if(user_data_in_trans.get_vector_data&lt;int>(i) == 0) total_zero_number++;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;if(total_zero_number % 2 == 0) parity_bit = 0; &#xA;&#x9;else parity_bit = 1; &#xA;&#xA;&#x9;user_data_out_trans.set_vector_data&lt;int>(user_data_in_trans.get_vector_size(), parity_bit);&#xA;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_QNo4R3gJEeWiStKCVYNGAA\" name=\"InAction\" isFirstOf=\"_QNo4PHgJEeWiStKCVYNGAA\" next=\"_QNo4PngJEeWiStKCVYNGAA\" port=\"_QNo4MXgJEeWiStKCVYNGAA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_QNo4U3gJEeWiStKCVYNGAA\" name=\"OutAction\" isLastOf=\"_QNo4PHgJEeWiStKCVYNGAA\" previous=\"_QNo4PngJEeWiStKCVYNGAA\" port=\"_QNo4MngJEeWiStKCVYNGAA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_c2IC4HgJEeWiStKCVYNGAA\" name=\"Consumer\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_c2IC4XgJEeWiStKCVYNGAA\" name=\"user_data_out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_c2IC93gJEeWiStKCVYNGAA\" relations=\"_dFEoMHgKEeWiStKCVYNGAA\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_c2IC4ngJEeWiStKCVYNGAA\" name=\"ConsumerBh\" firstStatement=\"_c2IC43gJEeWiStKCVYNGAA\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_c2IC43gJEeWiStKCVYNGAA\" name=\"init\" isFirstOf=\"_c2IC4ngJEeWiStKCVYNGAA\" next=\"_c2IC7HgJEeWiStKCVYNGAA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_c2IC7HgJEeWiStKCVYNGAA\" name=\"Loop\" firstStatement=\"_c2IC93gJEeWiStKCVYNGAA\" lastStatement=\"_c2IC7ngJEeWiStKCVYNGAA\" previous=\"_c2IC43gJEeWiStKCVYNGAA\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_c2IC7ngJEeWiStKCVYNGAA\" name=\"consume\" isLastOf=\"_c2IC7HgJEeWiStKCVYNGAA\" previous=\"_c2IC93gJEeWiStKCVYNGAA\" algorithm=\"&#x9;cf_trace_report(&quot;************Vector received by using conv_vector_to_string**************&quot;);&#xA;&#x9;cf_trace_report(&quot;                     user_data_out : %s                         &quot;, user_data_out_trans.conv_vector_to_string().c_str() );&#xA;&#x9;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_c2IC93gJEeWiStKCVYNGAA\" name=\"InAction\" isFirstOf=\"_c2IC7HgJEeWiStKCVYNGAA\" next=\"_c2IC7ngJEeWiStKCVYNGAA\" port=\"_c2IC4XgJEeWiStKCVYNGAA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_XGrzoHgJEeWiStKCVYNGAA\" name=\"user_data_in\" ports=\"_QNo4MXgJEeWiStKCVYNGAA _8UCQsXgIEeWiStKCVYNGAA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_XGx6SngJEeWiStKCVYNGAA\" predefinedType=\"VECTOR\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_dFEoMHgKEeWiStKCVYNGAA\" name=\"user_data_out\" ports=\"_c2IC4XgJEeWiStKCVYNGAA _QNo4MngJEeWiStKCVYNGAA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_dFKu2ngKEeWiStKCVYNGAA\" predefinedType=\"VECTOR\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_70JG8HfxEeWAsMwteTghtg\" name=\"VectorDataTypeAPIApp\" version=\"6.1.0_alpha1_20151007-1142\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_FyEvsHfyEeWAsMwteTghtg\" source=\"cdt.configurations\">\n    <details xmi:id=\"_kl_I0HfyEeWAsMwteTghtg\" key=\"cofluent.managedbuild.config.gnu.gcc.exe.release.769061284\"/>\n    <details xmi:id=\"_LZrdAFWoEeepatXwduhZdg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1233616583\"/>\n    <details xmi:id=\"_2ZW98GFlEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.2024341993\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_70JHAHfxEeWAsMwteTghtg\" name=\"VectorDataTypeAPIAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"__ONaVXfxEeWAsMwteTghtg\" name=\"ProducerVector\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"__ONaVnfxEeWAsMwteTghtg\" name=\"MsgQVector\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"__ONabHfxEeWAsMwteTghtg\" relations=\"__ONaGXfxEeWAsMwteTghtg\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__ONaV3fxEeWAsMwteTghtg\" name=\"ProducerVectorBh\" firstStatement=\"__ONaWHfxEeWAsMwteTghtg\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ONaWHfxEeWAsMwteTghtg\" name=\"init\" isFirstOf=\"__ONaV3fxEeWAsMwteTghtg\" next=\"__ONaYXfxEeWAsMwteTghtg\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__ONaYXfxEeWAsMwteTghtg\" name=\"Loop\" firstStatement=\"__ONaY3fxEeWAsMwteTghtg\" lastStatement=\"__ONabHfxEeWAsMwteTghtg\" previous=\"__ONaWHfxEeWAsMwteTghtg\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__ONaY3fxEeWAsMwteTghtg\" name=\"produce\" isFirstOf=\"__ONaYXfxEeWAsMwteTghtg\" next=\"__ONabHfxEeWAsMwteTghtg\" algorithm=\"&#x9;for(int i=0; i&lt;10;i++)&#xA;&#x9;{&#xA;&#x9;&#x9;MsgQVector_trans.set_vector_data&lt;int>(i, i + 10);&#xA;&#x9;}\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"__ONabHfxEeWAsMwteTghtg\" name=\"OutAction\" isLastOf=\"__ONaYXfxEeWAsMwteTghtg\" previous=\"__ONaY3fxEeWAsMwteTghtg\" port=\"__ONaVnfxEeWAsMwteTghtg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"__OTg4HfxEeWAsMwteTghtg\" name=\"ConsumerVector\" includes=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"__OTg4nfxEeWAsMwteTghtg\" name=\"MsgQVector\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"__OTg-HfxEeWAsMwteTghtg\" relations=\"__ONaGXfxEeWAsMwteTghtg\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__OTg43fxEeWAsMwteTghtg\" name=\"ConsumerVectorBh\" firstStatement=\"__OTg5HfxEeWAsMwteTghtg\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__OTg5HfxEeWAsMwteTghtg\" name=\"init\" isFirstOf=\"__OTg43fxEeWAsMwteTghtg\" next=\"__OTg7XfxEeWAsMwteTghtg\" algorithm=\"\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__OTg7XfxEeWAsMwteTghtg\" name=\"Loop\" firstStatement=\"__OTg-HfxEeWAsMwteTghtg\" lastStatement=\"__OTg73fxEeWAsMwteTghtg\" previous=\"__OTg5HfxEeWAsMwteTghtg\" condition=\"1\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"__OTg73fxEeWAsMwteTghtg\" name=\"consume\" isLastOf=\"__OTg7XfxEeWAsMwteTghtg\" previous=\"__OTg-HfxEeWAsMwteTghtg\" algorithm=\"&#x9;cf_trace_report(&quot;************Vector received by using get_vector_data**************&quot;);&#xA;&#x9;for(int i=0; i&lt;10;i++)&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                    MsgQVector[%d] = %d                       &quot;,i, MsgQVector_trans.get_vector_data&lt;int>(i));&#xA;&#x9;}&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#xA;&#x9;cf_trace_report(&quot;************Vector received by using conv_vector_to_string**************&quot;);&#xA;&#x9;cf_trace_report(&quot;                     MsgQVector : %s                         &quot;, MsgQVector_trans.conv_vector_to_string().c_str());&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;************Size of the vector received**************&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;                  Vector size = %d                    &quot;, MsgQVector_trans.get_vector_size());&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;***************Init value stored at index 5 ***************&quot;);&#xA;&#x9;MsgQVector_trans.init_vector_data&lt;int>(5);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;****Check if the value stored at index 5 is equal to 0****&quot;);&#xA;&#x9;cf_trace_report(&quot;    MsgQVector[%d] = %d                       &quot;,5, MsgQVector_trans.get_vector_data&lt;int>(5));&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;***************Remove element stored at index 7 ***************&quot;);&#xA;&#x9;MsgQVector_trans.remove_vector_data(7);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;****Check if the element stored at index 7 was removed (element shifted)****&quot;);&#xA;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#xA;&#xA;&#x9;cf_trace_report(&quot;************Size of the vector**************&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;             Vector size = %d                    &quot;, MsgQVector_trans.get_vector_size());&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;cf_trace_report(&quot;************All values of the vector after remove**************&quot;);&#xA;&#x9;cf_trace_report(&quot;                     Vector : %s                         &quot;, MsgQVector_trans.conv_vector_to_string().c_str());&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;****Check if the element stored at index 15 exists ****&quot;);&#xA;&#x9;if(MsgQVector_trans.has_vector_data(15))&#xA;&#x9;{&#xA;   &#x9;&#x9;cf_trace_report(&quot; MsgQVector[%d] = %d &quot;,15, MsgQVector_trans.get_vector_data&lt;int>(15));&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;   &#x9;&#x9;cf_trace_report(&quot; No value in MsgQVector[15] &quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;*********Check if the vector is empty************&quot;);&#xA;&#x9;if(MsgQVector_trans.is_vector_empty())&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                   Vector is empty                 &quot;);&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                   Vector is not empty            &quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;cf_trace_report(&quot;************Erase all the elements in the vector**************&quot;);&#xA;&#x9;MsgQVector_trans.erase_vector_data();&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#xA;&#x9;cf_trace_report(&quot;*************Check if the vector is empty****************&quot;);&#xA;&#x9;if(MsgQVector_trans.is_vector_empty())&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                   Vector is empty                       &quot;);&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;cf_trace_report(&quot;                   Vector is not empty                    &quot;);&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#xA;&#x9;cf_trace_report(&quot;************Vector content by using conv_vector_to_string after erase**************&quot;);&#xA;&#x9;cf_trace_report(&quot;                     MsgQVector : %s                         &quot;, MsgQVector_trans.conv_vector_to_string().c_str());&#x9;&#xA;&#xA;&#x9;cf_trace_report(&quot; &quot;);&#xA;&#x9;&#x9;&#xA;&#x9;cf_trace_report(&quot;************Size of the vector**************&quot;);&#x9;&#xA;&#x9;cf_trace_report(&quot;             Vector size = %d                    &quot;, MsgQVector_trans.get_vector_size());\" executionTime=\"5 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"__OTg-HfxEeWAsMwteTghtg\" name=\"InAction\" isFirstOf=\"__OTg7XfxEeWAsMwteTghtg\" next=\"__OTg73fxEeWAsMwteTghtg\" port=\"__OTg4nfxEeWAsMwteTghtg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"__ONaGXfxEeWAsMwteTghtg\" name=\"MsgQVector\" ports=\"__OTg4nfxEeWAsMwteTghtg __ONaVnfxEeWAsMwteTghtg\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"__ONaGnfxEeWAsMwteTghtg\" predefinedType=\"VECTOR\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_fEyHoPv9EeucBOM97rjZ5Q\" name=\"CoSimVerilatorChiselApp\" version=\"x.y.z_Dev_dev\" target=\"\" includeInheritedHeader=\"\" inheritanceClass=\"\" callToInheritedConstructors=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n  <annotations xmi:id=\"_fGv2gPv9EeucBOM97rjZ5Q\" source=\"cdt.configurations\">\n    <details xmi:id=\"_fGv2gfv9EeucBOM97rjZ5Q\" key=\"cofluent.managedbuild.config.msvc2015.exe.release.1800770338\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_kia1APv9EeucBOM97rjZ5Q\" name=\"Defsum\" definition=\"typedef struct{&#xD;&#xA;unsigned char s;&#xD;&#xA;unsigned char count;&#xD;&#xA;}Defsum;\" copyPayload=\"cf_payload::cb_copy_payload(_address, _value, _atom_count);\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <dataTypes xmi:id=\"_kibcEPv9EeucBOM97rjZ5Q\" name=\"Defdata1\" definition=\"typedef unsigned char Defdata1;\" copyPayload=\"cf_payload::cb_copy_payload(_address, _value, _atom_count);\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_fEyHofv9EeucBOM97rjZ5Q\" name=\"CoSimVerilatorChiselAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_kiWjr_v9EeucBOM97rjZ5Q\" name=\"Producer1\" declarations=\"int i =1;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_kiWjsPv9EeucBOM97rjZ5Q\" name=\"data1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_kiWjtfv9EeucBOM97rjZ5Q\" relations=\"_kiWj9_v9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_kiWjsfv9EeucBOM97rjZ5Q\" name=\"Producer1Bh\" firstStatement=\"_kiWjsvv9EeucBOM97rjZ5Q\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWjsvv9EeucBOM97rjZ5Q\" name=\"cf\" isFirstOf=\"_kiWjsfv9EeucBOM97rjZ5Q\" next=\"_kiWjs_v9EeucBOM97rjZ5Q\" algorithm=\"data1=cf_util_rand_uint(0,255);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_kiWjs_v9EeucBOM97rjZ5Q\" name=\"Loop\" firstStatement=\"_kiWjtPv9EeucBOM97rjZ5Q\" lastStatement=\"_kiWjtfv9EeucBOM97rjZ5Q\" previous=\"_kiWjsvv9EeucBOM97rjZ5Q\" condition=\"i&lt;=10\" type=\"CONDITIONAL\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWjtPv9EeucBOM97rjZ5Q\" name=\"produce\" isFirstOf=\"_kiWjs_v9EeucBOM97rjZ5Q\" next=\"_kiWjtfv9EeucBOM97rjZ5Q\" algorithm=\"data1=cf_util_rand_int(0,255);&#xD;&#xA;cf_trace_report(&quot;data1[%d]:%u&quot;,i,data1);&#xD;&#xA;i++;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_kiWjtfv9EeucBOM97rjZ5Q\" name=\"OutAction\" isLastOf=\"_kiWjs_v9EeucBOM97rjZ5Q\" previous=\"_kiWjtPv9EeucBOM97rjZ5Q\" port=\"_kiWjsPv9EeucBOM97rjZ5Q\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_kiWj5_v9EeucBOM97rjZ5Q\" name=\"Producer2\" declarations=\"int i =1;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_kiWj6Pv9EeucBOM97rjZ5Q\" name=\"data2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_kiWj7fv9EeucBOM97rjZ5Q\" relations=\"_kiXKrvv9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_kiWj6fv9EeucBOM97rjZ5Q\" name=\"Producer2Bh\" firstStatement=\"_kiWj6vv9EeucBOM97rjZ5Q\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWj6vv9EeucBOM97rjZ5Q\" name=\"init\" isFirstOf=\"_kiWj6fv9EeucBOM97rjZ5Q\" next=\"_kiWj6_v9EeucBOM97rjZ5Q\" algorithm=\"data2=cf_util_rand_int(0,255);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_kiWj6_v9EeucBOM97rjZ5Q\" name=\"Loop\" firstStatement=\"_kiWj7Pv9EeucBOM97rjZ5Q\" lastStatement=\"_kiWj7fv9EeucBOM97rjZ5Q\" previous=\"_kiWj6vv9EeucBOM97rjZ5Q\" condition=\"i&lt;=10\" type=\"CONDITIONAL\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWj7Pv9EeucBOM97rjZ5Q\" name=\"produce\" isFirstOf=\"_kiWj6_v9EeucBOM97rjZ5Q\" next=\"_kiWj7fv9EeucBOM97rjZ5Q\" algorithm=\"data2=cf_util_rand_uint(0,200);&#xD;&#xA;cf_trace_report(&quot;data2[%d]:%u&quot;,i,data2);&#xD;&#xA;i++;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_kiWj7fv9EeucBOM97rjZ5Q\" name=\"OutAction\" isLastOf=\"_kiWj6_v9EeucBOM97rjZ5Q\" previous=\"_kiWj7Pv9EeucBOM97rjZ5Q\" port=\"_kiWj6Pv9EeucBOM97rjZ5Q\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_kiWkSPv9EeucBOM97rjZ5Q\" name=\"adder\" includes=\"#include &lt;cmath>\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"CHISEL_COSIM_INTERFACE\">\n      <ports xmi:id=\"_kiWkSfv9EeucBOM97rjZ5Q\" name=\"data1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_kiWkUPv9EeucBOM97rjZ5Q\" relations=\"_kiWj9_v9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <ports xmi:id=\"_kiWkSvv9EeucBOM97rjZ5Q\" name=\"sum\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_kiWkUfv9EeucBOM97rjZ5Q\" relations=\"_kiVVcPv9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <ports xmi:id=\"_kiWkS_v9EeucBOM97rjZ5Q\" name=\"data2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_kiWkUvv9EeucBOM97rjZ5Q\" relations=\"_kiXKrvv9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_kiWkTPv9EeucBOM97rjZ5Q\" name=\"adderBh\" firstStatement=\"_kiWkTfv9EeucBOM97rjZ5Q\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWkTfv9EeucBOM97rjZ5Q\" name=\"init\" isFirstOf=\"_kiWkTPv9EeucBOM97rjZ5Q\" next=\"_kiWkTvv9EeucBOM97rjZ5Q\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_kiWkTvv9EeucBOM97rjZ5Q\" name=\"Loop\" firstStatement=\"_kiWkUPv9EeucBOM97rjZ5Q\" lastStatement=\"_kiWkUfv9EeucBOM97rjZ5Q\" previous=\"_kiWkTfv9EeucBOM97rjZ5Q\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiWkT_v9EeucBOM97rjZ5Q\" name=\"process\" previous=\"_kiWkUvv9EeucBOM97rjZ5Q\" next=\"_kiWkUfv9EeucBOM97rjZ5Q\" algorithm=\"sum.s=(data1+data2)&amp;0xff;&#xD;&#xA;sum.count=((data1+data2)&amp;0x100)>>8;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_kiWkUPv9EeucBOM97rjZ5Q\" name=\"InAction\" isFirstOf=\"_kiWkTvv9EeucBOM97rjZ5Q\" next=\"_kiWkUvv9EeucBOM97rjZ5Q\" port=\"_kiWkSfv9EeucBOM97rjZ5Q\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_kiWkUfv9EeucBOM97rjZ5Q\" name=\"OutAction\" isLastOf=\"_kiWkTvv9EeucBOM97rjZ5Q\" previous=\"_kiWkT_v9EeucBOM97rjZ5Q\" port=\"_kiWkSvv9EeucBOM97rjZ5Q\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_kiWkUvv9EeucBOM97rjZ5Q\" name=\"InAction2\" previous=\"_kiWkUPv9EeucBOM97rjZ5Q\" next=\"_kiWkT_v9EeucBOM97rjZ5Q\" port=\"_kiWkS_v9EeucBOM97rjZ5Q\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_kiWkhPv9EeucBOM97rjZ5Q\" name=\"Consumer\" declarations=\"int i=1;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_kiWkhfv9EeucBOM97rjZ5Q\" name=\"sum\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_kiXKpPv9EeucBOM97rjZ5Q\" relations=\"_kiVVcPv9EeucBOM97rjZ5Q\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_kiXKoPv9EeucBOM97rjZ5Q\" name=\"ConsumerBh\" firstStatement=\"_kiXKofv9EeucBOM97rjZ5Q\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiXKofv9EeucBOM97rjZ5Q\" name=\"init\" isFirstOf=\"_kiXKoPv9EeucBOM97rjZ5Q\" next=\"_kiXKovv9EeucBOM97rjZ5Q\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_kiXKovv9EeucBOM97rjZ5Q\" name=\"Loop\" firstStatement=\"_kiXKpPv9EeucBOM97rjZ5Q\" lastStatement=\"_kiXKo_v9EeucBOM97rjZ5Q\" previous=\"_kiXKofv9EeucBOM97rjZ5Q\" condition=\"20\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_kiXKo_v9EeucBOM97rjZ5Q\" name=\"consume\" isLastOf=\"_kiXKovv9EeucBOM97rjZ5Q\" previous=\"_kiXKpPv9EeucBOM97rjZ5Q\" algorithm=\"cf_trace_report(&quot;sum_total[%d]:s:%u,count:%u&quot;,i,sum.s,sum.count);&#xD;&#xA;//cf_trace_report(&quot;sum[%d]:%d&quot;,i,sum &amp; 0xff);&#xD;&#xA;//cf_trace_report(&quot;cout[%d]:%d&quot;,i,(sum &amp; 0x100)>>8);&#xD;&#xA;i++;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_kiXKpPv9EeucBOM97rjZ5Q\" name=\"InAction\" isFirstOf=\"_kiXKovv9EeucBOM97rjZ5Q\" next=\"_kiXKo_v9EeucBOM97rjZ5Q\" port=\"_kiWkhfv9EeucBOM97rjZ5Q\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_kiVVcPv9EeucBOM97rjZ5Q\" name=\"sum\" ports=\"_kiWkSvv9EeucBOM97rjZ5Q _kiWkhfv9EeucBOM97rjZ5Q\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"ONE_SIDE\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\" cosimChiselDataPortBits=\"9\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_kiVVcfv9EeucBOM97rjZ5Q\" dataType=\"_kia1APv9EeucBOM97rjZ5Q\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_kiWj9_v9EeucBOM97rjZ5Q\" name=\"data1\" ports=\"_kiWjsPv9EeucBOM97rjZ5Q _kiWkSfv9EeucBOM97rjZ5Q\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_kiWj-Pv9EeucBOM97rjZ5Q\" dataType=\"_kibcEPv9EeucBOM97rjZ5Q\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_kiXKrvv9EeucBOM97rjZ5Q\" name=\"data2\" ports=\"_kiWj6Pv9EeucBOM97rjZ5Q _kiWkS_v9EeucBOM97rjZ5Q\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_kiXKr_v9EeucBOM97rjZ5Q\" dataType=\"_kibcEPv9EeucBOM97rjZ5Q\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_63MjcIeAEeCql8f9buo1Iw\" name=\"TLM2LT\" includes=\"\" version=\"Dev\" cyclePeriod=\"10 ns\" globalTypeDeclarations=\"#ifndef __COMMON_HEADER2_H__&#xD;&#xA;#define __COMMON_HEADER2_H__&#xD;&#xA;&#xD;&#xA;&#x9;struct my_ext : public tlm::tlm_extension&lt;int>&#xD;&#xA;    {&#xD;&#xA;      tlm::tlm_extension_base* clone() const { return 0; }&#xD;&#xA;      void free() {}&#xD;&#xA;      void copy_from(tlm::tlm_extension_base const &amp;) {}&#xD;&#xA;      int i;&#xD;&#xA;    };&#xD;&#xA;&#xD;&#xA;#endif\" globalDeclarations=\"#define MEMORY_ADDRESS (1U&lt;&lt;28)+0x200&#xD;&#xA;#define TARGET_ADDRESS 2U&lt;&lt;28&#xD;&#xA;#define TARGET_2_ADDRESS 3U&lt;&lt;28\" globalDefinitions=\"\">\n  <annotations xmi:id=\"_63MjcYeAEeCql8f9buo1Iw\" source=\"codegen\">\n    <details xmi:id=\"_63MjcoeAEeCql8f9buo1Iw\" key=\"path\" value=\"TLM2LT/gen-sysc\"/>\n  </annotations>\n  <annotations xmi:id=\"_63Mjc4eAEeCql8f9buo1Iw\" source=\"build\">\n    <details xmi:id=\"_63MjdIeAEeCql8f9buo1Iw\" key=\"path\" value=\"TLM2LT/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_LlV5wIeXEeC1fvMXjhAcHQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_Mn9_oFWpEeepatXwduhZdg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1103276710\"/>\n    <details xmi:id=\"_QoDm0GFjEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.2053000208\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_MagcqoeWEeC1fvMXjhAcHQ\" name=\"DefData\" definition=\"typedef int DefData;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_a3H3OYeWEeC1fvMXjhAcHQ\" name=\"Initiator\" definition=\"typedef int Initiator;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_eKH5CoeWEeC1fvMXjhAcHQ\" name=\"Target\" definition=\"typedef int Target;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_8Hx5yUZrEeGc0oM91bg4Nw\" name=\"DefMsgQ\" definition=\"typedef int DefMsgQ;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_63feYIeAEeCql8f9buo1Iw\" name=\"TLM2LTStructSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_nha1AIeVEeC1fvMXjhAcHQ\" name=\"Writer\" declarations=\"int data;\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_1HX34IeWEeC1fvMXjhAcHQ\" name=\"InitiatorWriter\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_xc3fkIeXEeC1fvMXjhAcHQ _lO_WYEZmEeGc0oM91bg4Nw _xrd8QIeXEeC1fvMXjhAcHQ\" relations=\"_clF04IeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_F-GeoEZsEeGc0oM91bg4Nw\" name=\"ReferenceQueue\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_WFhqoEZrEeGc0oM91bg4Nw\" relations=\"_MagcoIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_Inh_AEZsEeGc0oM91bg4Nw\" name=\"ReferenceQueue2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_ealYEIewEeCzPNxdK4nEug\" relations=\"_OsPOsIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_NmHY4EZsEeGc0oM91bg4Nw\" name=\"ReferenceQueue3\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_xzNjAIeXEeC1fvMXjhAcHQ\" relations=\"_8Hov0EZrEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_F5qOEEZtEeGc0oM91bg4Nw\" name=\"Sync\" type=\"EVENT\" direction=\"IN\" inputActions=\"_eU2R8EZqEeGc0oM91bg4Nw\" relations=\"_A1tvgIexEeCzPNxdK4nEug\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_Mf0CsEZtEeGc0oM91bg4Nw\" name=\"Sync2\" type=\"EVENT\" direction=\"IN\" inputActions=\"_eGshMEZqEeGc0oM91bg4Nw\" relations=\"_meKQgEZsEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_R1WkAEZtEeGc0oM91bg4Nw\" name=\"Sync3\" type=\"EVENT\" direction=\"IN\" inputActions=\"_6tqzMIewEeCzPNxdK4nEug\" relations=\"_rsYo4EZsEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_liOSgIeXEeC1fvMXjhAcHQ\" name=\"WriterBehvBh\" firstStatement=\"_4BjfIIeYEeC1fvMXjhAcHQ\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_uP-FwIeXEeC1fvMXjhAcHQ\" name=\"Loop\" firstStatement=\"_9vMz5IeXEeC1fvMXjhAcHQ\" lastStatement=\"_eU2R8EZqEeGc0oM91bg4Nw\" previous=\"_4BjfIIeYEeC1fvMXjhAcHQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_xc3fkIeXEeC1fvMXjhAcHQ\" name=\"OutAction\" previous=\"_MLCJtEZmEeGc0oM91bg4Nw\" next=\"_AE9KVIeYEeC1fvMXjhAcHQ\" port=\"_1HX34IeWEeC1fvMXjhAcHQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_xrd8QIeXEeC1fvMXjhAcHQ\" name=\"OutAction2\" previous=\"_AE9KVIeYEeC1fvMXjhAcHQ\" next=\"_WFhqoEZrEeGc0oM91bg4Nw\" port=\"_1HX34IeWEeC1fvMXjhAcHQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_xzNjAIeXEeC1fvMXjhAcHQ\" name=\"OutAction3\" previous=\"_ealYEIewEeCzPNxdK4nEug\" next=\"_6tqzMIewEeCzPNxdK4nEug\" port=\"_NmHY4EZsEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_9vMz5IeXEeC1fvMXjhAcHQ\" name=\"WriteToMemory\" isFirstOf=\"_uP-FwIeXEeC1fvMXjhAcHQ\" next=\"_lO_WYEZmEeGc0oM91bg4Nw\" algorithm=\"&#x9;data++;&#xA;&#x9;ReferenceQueue = data;&#xA;&#x9;ReferenceQueue2 = data;&#xA;&#x9;ReferenceQueue3 = data;&#xA;&#x9;// prepare TLM2 transaction&#xA;&#x9;InitiatorWriter_trans.set_tlm2_delay(cf_dt::cf_time(1, CF_US));&#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorWriter_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( MEMORY_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_write();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length( sizeof( int ) );&#xA;&#x9;tlm2_gp_req->set_streaming_width(1);\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_AE9KVIeYEeC1fvMXjhAcHQ\" name=\"WriteToTarget_2\" previous=\"_xc3fkIeXEeC1fvMXjhAcHQ\" next=\"_xrd8QIeXEeC1fvMXjhAcHQ\" algorithm=\"&#x9;// prepare TLM2 transaction&#xA;&#x9;InitiatorWriter_trans.set_tlm2_delay(cf_dt::cf_time(2, CF_US));&#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorWriter_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( TARGET_2_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_write();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length( sizeof( int ) );&#xA;&#x9;tlm2_gp_req->set_streaming_width(1);\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_4BjfIIeYEeC1fvMXjhAcHQ\" name=\"Initialization\" isFirstOf=\"_liOSgIeXEeC1fvMXjhAcHQ\" next=\"_uP-FwIeXEeC1fvMXjhAcHQ\" algorithm=\"&#x9;data = 0;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_ealYEIewEeCzPNxdK4nEug\" name=\"OutAction5\" previous=\"_WFhqoEZrEeGc0oM91bg4Nw\" next=\"_xzNjAIeXEeC1fvMXjhAcHQ\" port=\"_Inh_AEZsEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_6tqzMIewEeCzPNxdK4nEug\" name=\"InAction\" previous=\"_xzNjAIeXEeC1fvMXjhAcHQ\" next=\"_eGshMEZqEeGc0oM91bg4Nw\" port=\"_R1WkAEZtEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_MLCJtEZmEeGc0oM91bg4Nw\" name=\"WriteToTarget\" previous=\"_lO_WYEZmEeGc0oM91bg4Nw\" next=\"_xc3fkIeXEeC1fvMXjhAcHQ\" algorithm=\"&#x9;// prepare TLM2 transaction&#xA;&#x9;InitiatorWriter_trans.set_tlm2_delay(cf_dt::cf_time(1, CF_US));&#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorWriter_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( TARGET_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_write();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length( sizeof( int ) );&#xA;&#x9;tlm2_gp_req->set_streaming_width(1);\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lO_WYEZmEeGc0oM91bg4Nw\" name=\"OutAction4\" previous=\"_9vMz5IeXEeC1fvMXjhAcHQ\" next=\"_MLCJtEZmEeGc0oM91bg4Nw\" port=\"_1HX34IeWEeC1fvMXjhAcHQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_eGshMEZqEeGc0oM91bg4Nw\" name=\"InAction2\" previous=\"_6tqzMIewEeCzPNxdK4nEug\" next=\"_eU2R8EZqEeGc0oM91bg4Nw\" port=\"_Mf0CsEZtEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_eU2R8EZqEeGc0oM91bg4Nw\" name=\"InAction3\" isLastOf=\"_uP-FwIeXEeC1fvMXjhAcHQ\" previous=\"_eGshMEZqEeGc0oM91bg4Nw\" port=\"_F5qOEEZtEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_WFhqoEZrEeGc0oM91bg4Nw\" name=\"OutAction6\" previous=\"_xrd8QIeXEeC1fvMXjhAcHQ\" next=\"_ealYEIewEeCzPNxdK4nEug\" port=\"_F-GeoEZsEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_zZ-XYIeVEeC1fvMXjhAcHQ\" name=\"Target\" declarations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_Sz19QIeWEeC1fvMXjhAcHQ\" name=\"ReferenceQueue2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_ddoUgIeYEeC1fvMXjhAcHQ\" relations=\"_OsPOsIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_hYWvkIeWEeC1fvMXjhAcHQ\" name=\"TargetWrapper\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_dk72YIeYEeC1fvMXjhAcHQ\" relations=\"_eKH5AIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_vnxgYEZsEeGc0oM91bg4Nw\" name=\"Sync2\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_0OAWkEZqEeGc0oM91bg4Nw\" relations=\"_meKQgEZsEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_a_h6YIeYEeC1fvMXjhAcHQ\" name=\"TargetBehvBh\" firstStatement=\"_a_h6YYeYEeC1fvMXjhAcHQ\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_a_h6YYeYEeC1fvMXjhAcHQ\" name=\"Loop\" isFirstOf=\"_a_h6YIeYEeC1fvMXjhAcHQ\" firstStatement=\"_ddoUgIeYEeC1fvMXjhAcHQ\" lastStatement=\"_0OAWkEZqEeGc0oM91bg4Nw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_cKLvoIeYEeC1fvMXjhAcHQ\" name=\"Compare\" previous=\"_dk72YIeYEeC1fvMXjhAcHQ\" next=\"_0OAWkEZqEeGc0oM91bg4Nw\" algorithm=\"&#x9;tlm::tlm_generic_payload*   tlm2_gp_resp =&#xA;        TargetWrapper_trans.get_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_resp )&#xA;    int     rcv_data = *reinterpret_cast&lt; int* >(&#xA;                tlm2_gp_resp->get_data_ptr()&#xA;                );&#xA;&#x9;cf_trace_report(&quot;Reference data: 0x%x, received data: 0x%x&quot;,&#xA;&#x9;&#x9;&#x9;ReferenceQueue2, rcv_data&#xA;            );&#xA;    TargetWrapper_trans.release_tlm2_gp();\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_ddoUgIeYEeC1fvMXjhAcHQ\" name=\"InAction\" isFirstOf=\"_a_h6YYeYEeC1fvMXjhAcHQ\" next=\"_dk72YIeYEeC1fvMXjhAcHQ\" port=\"_Sz19QIeWEeC1fvMXjhAcHQ\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_dk72YIeYEeC1fvMXjhAcHQ\" name=\"InAction2\" previous=\"_ddoUgIeYEeC1fvMXjhAcHQ\" next=\"_cKLvoIeYEeC1fvMXjhAcHQ\" port=\"_hYWvkIeWEeC1fvMXjhAcHQ\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_0OAWkEZqEeGc0oM91bg4Nw\" name=\"OutAction\" isLastOf=\"_a_h6YYeYEeC1fvMXjhAcHQ\" previous=\"_cKLvoIeYEeC1fvMXjhAcHQ\" port=\"_vnxgYEZsEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_09NrxoeVEeC1fvMXjhAcHQ\" name=\"Reader\" declarations=\"int data;\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_R8Q1AIeWEeC1fvMXjhAcHQ\" name=\"ReferenceQueue3\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_Sy2z4IeYEeC1fvMXjhAcHQ\" relations=\"_8Hov0EZrEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_fVEpMIeWEeC1fvMXjhAcHQ\" name=\"InitiatorReader\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_TU1fkIeYEeC1fvMXjhAcHQ\" relations=\"_68N_2YegEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_gMD7kIeWEeC1fvMXjhAcHQ\" name=\"ReaderResponse\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_S6nBsIeYEeC1fvMXjhAcHQ\" relations=\"_fZCsiYqyEeCh7baZjD89oQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_CzoRQEZtEeGc0oM91bg4Nw\" name=\"Sync\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_96QrAIewEeCzPNxdK4nEug\" relations=\"_A1tvgIexEeCzPNxdK4nEug\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_MGmXQIeYEeC1fvMXjhAcHQ\" name=\"ReaderBehvBh\" firstStatement=\"_MGwIQIeYEeC1fvMXjhAcHQ\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_MGwIQIeYEeC1fvMXjhAcHQ\" name=\"Loop\" isFirstOf=\"_MGmXQIeYEeC1fvMXjhAcHQ\" firstStatement=\"_Sy2z4IeYEeC1fvMXjhAcHQ\" lastStatement=\"_96QrAIewEeCzPNxdK4nEug\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_PdxucIeYEeC1fvMXjhAcHQ\" name=\"ReadMemory\" previous=\"_Sy2z4IeYEeC1fvMXjhAcHQ\" next=\"_TU1fkIeYEeC1fvMXjhAcHQ\" algorithm=\"&#x9;// prepare TLM2 transaction&#xA;&#x9;InitiatorReader_trans.set_tlm2_delay(cf_dt::cf_time(3, CF_US));&#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorReader_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( MEMORY_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_read();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length( sizeof( int ) );&#xA;&#x9;tlm2_gp_req->set_streaming_width(1);\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_Q4q_IIeYEeC1fvMXjhAcHQ\" name=\"Compare\" previous=\"_S6nBsIeYEeC1fvMXjhAcHQ\" next=\"_96QrAIewEeCzPNxdK4nEug\" algorithm=\"&#x9;tlm::tlm_generic_payload*   tlm2_gp_resp =&#xA;        ReaderResponse_trans.get_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_resp )&#xA;    int     rcv_data = *reinterpret_cast&lt; int* >(&#xA;                tlm2_gp_resp->get_data_ptr()&#xA;                );&#xA;&#x9;cf_trace_report(&quot;Reference data: 0x%x, received data: 0x%x&quot;,&#xA;&#x9;&#x9;&#x9;ReferenceQueue3, rcv_data&#xA;            );&#xA;    ReaderResponse_trans.release_tlm2_gp();\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Sy2z4IeYEeC1fvMXjhAcHQ\" name=\"InAction\" isFirstOf=\"_MGwIQIeYEeC1fvMXjhAcHQ\" next=\"_PdxucIeYEeC1fvMXjhAcHQ\" port=\"_R8Q1AIeWEeC1fvMXjhAcHQ\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_S6nBsIeYEeC1fvMXjhAcHQ\" name=\"InAction2\" previous=\"_TU1fkIeYEeC1fvMXjhAcHQ\" next=\"_Q4q_IIeYEeC1fvMXjhAcHQ\" port=\"_gMD7kIeWEeC1fvMXjhAcHQ\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_TU1fkIeYEeC1fvMXjhAcHQ\" name=\"OutAction\" previous=\"_PdxucIeYEeC1fvMXjhAcHQ\" next=\"_S6nBsIeYEeC1fvMXjhAcHQ\" port=\"_fVEpMIeWEeC1fvMXjhAcHQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_96QrAIewEeCzPNxdK4nEug\" name=\"OutAction2\" isLastOf=\"_MGwIQIeYEeC1fvMXjhAcHQ\" previous=\"_Q4q_IIeYEeC1fvMXjhAcHQ\" port=\"_CzoRQEZtEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:SystemCIP\" xmi:id=\"_jg2GEIeWEeC1fvMXjhAcHQ\" name=\"TLM2Platfom\" className=\"lt_top\" generateInclude=\"true\">\n      <ports xmi:id=\"_1XBdcIeWEeC1fvMXjhAcHQ\" name=\"m_bus.target_socket[2]\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_clF04IeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_1rvJMIeWEeC1fvMXjhAcHQ\" name=\"m_bus.initiator_socket[2]\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_eKH5AIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_8_gGMIegEeC1fvMXjhAcHQ\" name=\"m_bus.target_socket[3]\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_68N_2YegEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_jLfDYIqyEeCh7baZjD89oQ\" name=\"\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_fZCsiYqyEeCh7baZjD89oQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_NEFEkDrAEeGpoMfJIkykDA\" name=\"m_bus.initiator_socket[3]\" documentation=\"\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_HHWneTrAEeGpoMfJIkykDA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_ZseIcDrAEeGpoMfJIkykDA\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_TPtgaTrAEeGpoMfJIkykDA\" synchronizeName=\"true\" vector=\"false\"/>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_FjVsqDq_EeGpoMfJIkykDA\" name=\"Target_2\" declarations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_NlUJYDrAEeGpoMfJIkykDA\" name=\"TargetRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_Fjfdcjq_EeGpoMfJIkykDA\" relations=\"_HHWneTrAEeGpoMfJIkykDA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_VvJXQDrAEeGpoMfJIkykDA\" name=\"TargetResponse\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_v65u8Dq_EeGpoMfJIkykDA\" relations=\"_TPtgaTrAEeGpoMfJIkykDA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_fxcg4EZsEeGc0oM91bg4Nw\" name=\"ReferenceQueue\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_gRAnMEZrEeGc0oM91bg4Nw\" relations=\"_MagcoIeWEeC1fvMXjhAcHQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_x4BEsEZsEeGc0oM91bg4Nw\" name=\"Sync3\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_4sjlgEZqEeGc0oM91bg4Nw\" relations=\"_rsYo4EZsEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_FjVsqTq_EeGpoMfJIkykDA\" name=\"TargetBehvBh\" firstStatement=\"_FjVsqjq_EeGpoMfJIkykDA\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_FjVsqjq_EeGpoMfJIkykDA\" name=\"Loop\" isFirstOf=\"_FjVsqTq_EeGpoMfJIkykDA\" firstStatement=\"_gRAnMEZrEeGc0oM91bg4Nw\" lastStatement=\"_4sjlgEZqEeGc0oM91bg4Nw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_FjVsrDq_EeGpoMfJIkykDA\" name=\"Compare\" previous=\"_Fjfdcjq_EeGpoMfJIkykDA\" next=\"_v65u8Dq_EeGpoMfJIkykDA\" algorithm=\"    TargetResponse_trans = TargetRequest_trans;&#xA;    TargetResponse_trans.set_tlm2_delay(cf_dt::cf_time(4, CF_US));&#xA;    &#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_resp =&#xA;        TargetRequest_trans.get_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_resp )&#xA;    int     rcv_data = *reinterpret_cast&lt; int* >(&#xA;                tlm2_gp_resp->get_data_ptr()&#xA;                );&#xA;&#x9;cf_trace_report(&quot;Reference data: 0x%x, received data: 0x%x&quot;,&#xA;&#x9;&#x9;&#x9;ReferenceQueue, rcv_data&#xA;            );    \" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Fjfdcjq_EeGpoMfJIkykDA\" name=\"InAction2\" previous=\"_gRAnMEZrEeGc0oM91bg4Nw\" next=\"_FjVsrDq_EeGpoMfJIkykDA\" port=\"_NlUJYDrAEeGpoMfJIkykDA\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_v65u8Dq_EeGpoMfJIkykDA\" name=\"OutAction\" previous=\"_FjVsrDq_EeGpoMfJIkykDA\" next=\"_4sjlgEZqEeGc0oM91bg4Nw\" port=\"_VvJXQDrAEeGpoMfJIkykDA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_4sjlgEZqEeGc0oM91bg4Nw\" name=\"OutAction2\" isLastOf=\"_FjVsqjq_EeGpoMfJIkykDA\" previous=\"_v65u8Dq_EeGpoMfJIkykDA\" port=\"_x4BEsEZsEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_gRAnMEZrEeGc0oM91bg4Nw\" name=\"InAction\" isFirstOf=\"_FjVsqjq_EeGpoMfJIkykDA\" next=\"_Fjfdcjq_EeGpoMfJIkykDA\" port=\"_fxcg4EZsEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_MagcoIeWEeC1fvMXjhAcHQ\" name=\"ReferenceQueue\" ports=\"_fxcg4EZsEeGc0oM91bg4Nw _F-GeoEZsEeGc0oM91bg4Nw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zq3o4FWoEeepatXwduhZdg\" dataType=\"_MagcqoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_OsPOsIeWEeC1fvMXjhAcHQ\" name=\"ReferenceQueue2\" ports=\"_Inh_AEZsEeGc0oM91bg4Nw _Sz19QIeWEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ztQOgVWoEeepatXwduhZdg\" dataType=\"_MagcqoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_clF04IeWEeC1fvMXjhAcHQ\" name=\"InitiatorWriter\" ports=\"_1XBdcIeWEeC1fvMXjhAcHQ _1HX34IeWEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"0x000001\" mask=\"0x0000FF\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zsD7sFWoEeepatXwduhZdg\" dataType=\"_a3H3OYeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_eKH5AIeWEeC1fvMXjhAcHQ\" name=\"TargetWrapper\" ports=\"_hYWvkIeWEeC1fvMXjhAcHQ _1rvJMIeWEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"0x000001\" mask=\"0x0000FF\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zsNssFWoEeepatXwduhZdg\" dataType=\"_eKH5CoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_68N_2YegEeC1fvMXjhAcHQ\" name=\"InitiatorReader\" ports=\"_fVEpMIeWEeC1fvMXjhAcHQ _8_gGMIegEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"\" mask=\"\" response=\"_fZCsiYqyEeCh7baZjD89oQ\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zt2EYFWoEeepatXwduhZdg\" dataType=\"_a3H3OYeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_A1tvgIexEeCzPNxdK4nEug\" name=\"Sync\" ports=\"_F5qOEEZtEeGc0oM91bg4Nw _CzoRQEZtEeGc0oM91bg4Nw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_fZCsiYqyEeCh7baZjD89oQ\" name=\"ReaderResponse\" ports=\"_jLfDYIqyEeCh7baZjD89oQ _gMD7kIeWEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zuvcQFWoEeepatXwduhZdg\" dataType=\"_eKH5CoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_HHWneTrAEeGpoMfJIkykDA\" name=\"TargetRequest\" ports=\"_NEFEkDrAEeGpoMfJIkykDA _NlUJYDrAEeGpoMfJIkykDA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"0x000001\" mask=\"0x0000FF\" response=\"_TPtgaTrAEeGpoMfJIkykDA\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zvylIFWoEeepatXwduhZdg\" dataType=\"_eKH5CoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_TPtgaTrAEeGpoMfJIkykDA\" name=\"TargetResponse\" ports=\"_ZseIcDrAEeGpoMfJIkykDA _VvJXQDrAEeGpoMfJIkykDA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_LT\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zrxAwFWoEeepatXwduhZdg\" dataType=\"_eKH5CoeWEeC1fvMXjhAcHQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_8Hov0EZrEeGc0oM91bg4Nw\" name=\"ReferenceQueue3\" ports=\"_NmHY4EZsEeGc0oM91bg4Nw _R8Q1AIeWEeC1fvMXjhAcHQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_zvMIMVWoEeepatXwduhZdg\" dataType=\"_8Hx5yUZrEeGc0oM91bg4Nw\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_meKQgEZsEeGc0oM91bg4Nw\" name=\"Sync2\" ports=\"_Mf0CsEZtEeGc0oM91bg4Nw _vnxgYEZsEeGc0oM91bg4Nw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_rsYo4EZsEeGc0oM91bg4Nw\" name=\"Sync3\" ports=\"_R1WkAEZtEeGc0oM91bg4Nw _x4BEsEZsEeGc0oM91bg4Nw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_iRwyMN0MEeSBNa6cyMzwEQ\" name=\"AutomatedPayloadTrackers\" postSimulation=\"\" version=\"Ibiza_dev3_20150212-1038\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" postElaboration=\"\">\n  <annotations xmi:id=\"_8wYmEN0MEeSBNa6cyMzwEQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_LN1l8FgEEeezr7aOSVUX_g\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1026280493\"/>\n    <details xmi:id=\"_8FxNkGCpEeeCWMy6uX7ruQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1513407630\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_iRxZQN0MEeSBNa6cyMzwEQ\" name=\"AutomatedPayloadTrackersSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQLEEN0MEeSBNa6cyMzwEQ\" name=\"C2\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQLEEd0MEeSBNa6cyMzwEQ\" name=\"M2_2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_lQLEJt0MEeSBNa6cyMzwEQ\" relations=\"_lQS_6d0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQLEEt0MEeSBNa6cyMzwEQ\" name=\"C2Bh\" firstStatement=\"_lQLEE90MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQLEE90MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQLEEt0MEeSBNa6cyMzwEQ\" next=\"_lQLEG90MEeSBNa6cyMzwEQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQLEG90MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQLEJt0MEeSBNa6cyMzwEQ\" lastStatement=\"_lQLEHd0MEeSBNa6cyMzwEQ\" previous=\"_lQLEE90MEeSBNa6cyMzwEQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQLEHd0MEeSBNa6cyMzwEQ\" name=\"consume\" isLastOf=\"_lQLEG90MEeSBNa6cyMzwEQ\" previous=\"_lQLEJt0MEeSBNa6cyMzwEQ\" algorithm=\"cf_trace_report(&quot;[C2] payload %d received&quot;, M2_2);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_lQLEJt0MEeSBNa6cyMzwEQ\" name=\"InAction\" isFirstOf=\"_lQLEG90MEeSBNa6cyMzwEQ\" next=\"_lQLEHd0MEeSBNa6cyMzwEQ\" port=\"_lQLEEd0MEeSBNa6cyMzwEQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQMSMN0MEeSBNa6cyMzwEQ\" name=\"F2\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQMSMd0MEeSBNa6cyMzwEQ\" name=\"M1_2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_lQMSR90MEeSBNa6cyMzwEQ\" relations=\"_lQUOCd0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_lQMSMt0MEeSBNa6cyMzwEQ\" name=\"M1_3\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_lQMSU90MEeSBNa6cyMzwEQ\" relations=\"_lQP8md0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQMSM90MEeSBNa6cyMzwEQ\" name=\"F2Bh\" firstStatement=\"_lQMSNN0MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQMSNN0MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQMSM90MEeSBNa6cyMzwEQ\" next=\"_lQMSPN0MEeSBNa6cyMzwEQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQMSPN0MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQMSR90MEeSBNa6cyMzwEQ\" lastStatement=\"_lQMSU90MEeSBNa6cyMzwEQ\" previous=\"_lQMSNN0MEeSBNa6cyMzwEQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQMSPt0MEeSBNa6cyMzwEQ\" name=\"process\" previous=\"_lQMSR90MEeSBNa6cyMzwEQ\" next=\"_lQMSU90MEeSBNa6cyMzwEQ\" algorithm=\"M1_3 = M1_2;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_lQMSR90MEeSBNa6cyMzwEQ\" name=\"InAction\" isFirstOf=\"_lQMSPN0MEeSBNa6cyMzwEQ\" next=\"_lQMSPt0MEeSBNa6cyMzwEQ\" port=\"_lQMSMd0MEeSBNa6cyMzwEQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lQMSU90MEeSBNa6cyMzwEQ\" name=\"OutAction\" isLastOf=\"_lQMSPN0MEeSBNa6cyMzwEQ\" previous=\"_lQMSPt0MEeSBNa6cyMzwEQ\" port=\"_lQMSMt0MEeSBNa6cyMzwEQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQOucN0MEeSBNa6cyMzwEQ\" name=\"F12\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQOucd0MEeSBNa6cyMzwEQ\" name=\"M1_1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_lQOuid0MEeSBNa6cyMzwEQ\" relations=\"_lQM5Sd0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_lQOuct0MEeSBNa6cyMzwEQ\" name=\"M2_1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_lQOuld0MEeSBNa6cyMzwEQ\" relations=\"_lQQjoN0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_lQOuc90MEeSBNa6cyMzwEQ\" name=\"M1_2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_lQOurN0MEeSBNa6cyMzwEQ\" relations=\"_lQUOCd0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_lQOudN0MEeSBNa6cyMzwEQ\" name=\"M2_2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_lQOuod0MEeSBNa6cyMzwEQ\" relations=\"_lQS_6d0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQOudd0MEeSBNa6cyMzwEQ\" name=\"F12Bh\" firstStatement=\"_lQOudt0MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQOudt0MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQOudd0MEeSBNa6cyMzwEQ\" next=\"_lQOuft0MEeSBNa6cyMzwEQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQOuft0MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQOuid0MEeSBNa6cyMzwEQ\" lastStatement=\"_lQOuod0MEeSBNa6cyMzwEQ\" previous=\"_lQOudt0MEeSBNa6cyMzwEQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQOugN0MEeSBNa6cyMzwEQ\" name=\"compute\" previous=\"_lQOuld0MEeSBNa6cyMzwEQ\" next=\"_lQOurN0MEeSBNa6cyMzwEQ\" algorithm=\"M1_2 = M1_1 + M2_1;&#xA;M2_2 = M1_1 - M2_1;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_lQOuid0MEeSBNa6cyMzwEQ\" name=\"InAction\" isFirstOf=\"_lQOuft0MEeSBNa6cyMzwEQ\" next=\"_lQOuld0MEeSBNa6cyMzwEQ\" port=\"_lQOucd0MEeSBNa6cyMzwEQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_lQOuld0MEeSBNa6cyMzwEQ\" name=\"InAction2\" previous=\"_lQOuid0MEeSBNa6cyMzwEQ\" next=\"_lQOugN0MEeSBNa6cyMzwEQ\" port=\"_lQOuct0MEeSBNa6cyMzwEQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lQOuod0MEeSBNa6cyMzwEQ\" name=\"OutAction\" isLastOf=\"_lQOuft0MEeSBNa6cyMzwEQ\" previous=\"_lQOurN0MEeSBNa6cyMzwEQ\" port=\"_lQOudN0MEeSBNa6cyMzwEQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lQOurN0MEeSBNa6cyMzwEQ\" name=\"OutAction2\" previous=\"_lQOugN0MEeSBNa6cyMzwEQ\" next=\"_lQOuod0MEeSBNa6cyMzwEQ\" port=\"_lQOuc90MEeSBNa6cyMzwEQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQRKsN0MEeSBNa6cyMzwEQ\" name=\"P1\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQRKsd0MEeSBNa6cyMzwEQ\" name=\"M1_1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_lQRKx90MEeSBNa6cyMzwEQ\" relations=\"_lQM5Sd0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQRKst0MEeSBNa6cyMzwEQ\" name=\"P1Bh\" firstStatement=\"_lQRKs90MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQRKs90MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQRKst0MEeSBNa6cyMzwEQ\" next=\"_lQRKvN0MEeSBNa6cyMzwEQ\" algorithm=\"M1_1 = 100;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQRKvN0MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQRKvt0MEeSBNa6cyMzwEQ\" lastStatement=\"_lQRKx90MEeSBNa6cyMzwEQ\" previous=\"_lQRKs90MEeSBNa6cyMzwEQ\" condition=\"10\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQRKvt0MEeSBNa6cyMzwEQ\" name=\"produce\" isFirstOf=\"_lQRKvN0MEeSBNa6cyMzwEQ\" next=\"_lQRKx90MEeSBNa6cyMzwEQ\" algorithm=\"M1_1++;&#xA;cf_trace_report(&quot;[P1] payload %d sent&quot;,M1_1);\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lQRKx90MEeSBNa6cyMzwEQ\" name=\"OutAction\" isLastOf=\"_lQRKvN0MEeSBNa6cyMzwEQ\" previous=\"_lQRKvt0MEeSBNa6cyMzwEQ\" port=\"_lQRKsd0MEeSBNa6cyMzwEQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQSY0N0MEeSBNa6cyMzwEQ\" name=\"P2\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQSY0d0MEeSBNa6cyMzwEQ\" name=\"M2_1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_lQSY590MEeSBNa6cyMzwEQ\" relations=\"_lQQjoN0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQSY0t0MEeSBNa6cyMzwEQ\" name=\"P2Bh\" firstStatement=\"_lQSY090MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQSY090MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQSY0t0MEeSBNa6cyMzwEQ\" next=\"_lQSY3N0MEeSBNa6cyMzwEQ\" algorithm=\"M2_1 = 0;\" executionTime=\"5 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQSY3N0MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQSY3t0MEeSBNa6cyMzwEQ\" lastStatement=\"_lQSY590MEeSBNa6cyMzwEQ\" previous=\"_lQSY090MEeSBNa6cyMzwEQ\" condition=\"10\" type=\"MULTIPLICATION\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQSY3t0MEeSBNa6cyMzwEQ\" name=\"produce\" isFirstOf=\"_lQSY3N0MEeSBNa6cyMzwEQ\" next=\"_lQSY590MEeSBNa6cyMzwEQ\" algorithm=\"M2_1++;&#xA;cf_trace_report(&quot;[P2] payload %d sent&quot;,M2_1);\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_lQSY590MEeSBNa6cyMzwEQ\" name=\"OutAction\" isLastOf=\"_lQSY3N0MEeSBNa6cyMzwEQ\" previous=\"_lQSY3t0MEeSBNa6cyMzwEQ\" port=\"_lQSY0d0MEeSBNa6cyMzwEQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lQTm8N0MEeSBNa6cyMzwEQ\" name=\"C1\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_lQTm8d0MEeSBNa6cyMzwEQ\" name=\"M1_3\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_lQTnBt0MEeSBNa6cyMzwEQ\" relations=\"_lQP8md0MEeSBNa6cyMzwEQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_lQTm8t0MEeSBNa6cyMzwEQ\" name=\"C1Bh\" firstStatement=\"_lQTm890MEeSBNa6cyMzwEQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQTm890MEeSBNa6cyMzwEQ\" name=\"init\" isFirstOf=\"_lQTm8t0MEeSBNa6cyMzwEQ\" next=\"_lQTm-90MEeSBNa6cyMzwEQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_lQTm-90MEeSBNa6cyMzwEQ\" name=\"Loop\" firstStatement=\"_lQTnBt0MEeSBNa6cyMzwEQ\" lastStatement=\"_lQTm_d0MEeSBNa6cyMzwEQ\" previous=\"_lQTm890MEeSBNa6cyMzwEQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lQTm_d0MEeSBNa6cyMzwEQ\" name=\"consume\" isLastOf=\"_lQTm-90MEeSBNa6cyMzwEQ\" previous=\"_lQTnBt0MEeSBNa6cyMzwEQ\" algorithm=\"cf_trace_report(&quot;[C1] payload %d received&quot;, M1_3);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_lQTnBt0MEeSBNa6cyMzwEQ\" name=\"InAction\" isFirstOf=\"_lQTm-90MEeSBNa6cyMzwEQ\" next=\"_lQTm_d0MEeSBNa6cyMzwEQ\" port=\"_lQTm8d0MEeSBNa6cyMzwEQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_lQM5Sd0MEeSBNa6cyMzwEQ\" name=\"M1_1\" ports=\"_lQRKsd0MEeSBNa6cyMzwEQ _lQOucd0MEeSBNa6cyMzwEQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_lQM5St0MEeSBNa6cyMzwEQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_lQP8md0MEeSBNa6cyMzwEQ\" name=\"M1_3\" ports=\"_lQTm8d0MEeSBNa6cyMzwEQ _lQMSMt0MEeSBNa6cyMzwEQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_lQP8mt0MEeSBNa6cyMzwEQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_lQQjoN0MEeSBNa6cyMzwEQ\" name=\"M2_1\" ports=\"_lQSY0d0MEeSBNa6cyMzwEQ _lQOuct0MEeSBNa6cyMzwEQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_lQQjod0MEeSBNa6cyMzwEQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_lQS_6d0MEeSBNa6cyMzwEQ\" name=\"M2_2\" ports=\"_lQOudN0MEeSBNa6cyMzwEQ _lQLEEd0MEeSBNa6cyMzwEQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_lQS_6t0MEeSBNa6cyMzwEQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_lQUOCd0MEeSBNa6cyMzwEQ\" name=\"M1_2\" ports=\"_lQMSMd0MEeSBNa6cyMzwEQ _lQOuc90MEeSBNa6cyMzwEQ\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"10 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_lQUOCt0MEeSBNa6cyMzwEQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_hgYDsLGGEeCKGfGcPtVqvA\" name=\"DDRMemory\" constructor=\"\" includes=\"\" postSimulation=\"AverageReadLatency = TotalReadLatency / NbTotalReadRequests;&#xD;AverageWriteLatency = TotalWriteLatency / NbTotalWriteRequests;&#xD;AverageWriteBandwidth = TotalWriteData * 1000 / TotalWriteLatency;&#xD;AverageReadBandwidth = TotalReadData * 1000 / TotalReadLatency;&#xD;AverageCombinedBandwidth = (TotalWriteData + TotalReadData) * 1000/ (TotalReadLatency + TotalWriteLatency);&#xD;cf_trace_gui_f_t(&quot;AverageReadLatency&quot;, AverageReadLatency);&#xD;cf_trace_report(&quot;AverageReadLatency = %f ns, %f Cycles&quot;, AverageReadLatency,(AverageReadLatency /(CyclePeriod)));&#xD;cf_trace_gui_f_t(&quot;AverageWriteLatency&quot;, AverageWriteLatency, &quot;ns&quot;);&#xD;cf_trace_report(&quot;AverageWriteLatency = %f ns, %f Cycles&quot;,&#xD;AverageWriteLatency, (AverageWriteLatency / (CyclePeriod)));&#xD;cf_trace_gui_f_t(&quot;AverageReadBandwidth&quot;, AverageReadBandwidth, &quot;Mb/s&quot;);&#xD;cf_trace_gui_f_t(&quot;AverageWriteBandwidth&quot;,AverageWriteBandwidth, &quot;Mb/s&quot;);&#xD;cf_trace_gui_f_t(&quot;AverageCombinedBandwidth&quot;, AverageCombinedBandwidth, &quot;Mb/s&quot;);&#xD;cf_trace_report(&quot;AverageReadBandwidth = %f Mb/s&quot;, AverageReadBandwidth);&#xD;cf_trace_report(&quot;AverageWriteBandwidth = %f Mb/s&quot;, AverageWriteBandwidth);&#xD;cf_trace_report(&quot;AverageCombinedBandwidth = %f Mb/s&quot;, AverageCombinedBandwidth);\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"CyclePeriod ns\" preSimulation=\"\" postElaboration=\"\" globalTypeDeclarations=\"const long MEMORYSIZE = 1048575;&#xD;&#xD;typedef enum {&#xD;&#x9;WRITEREQ, READREQ&#xD;} DefMemCmd;&#xD;typedef enum {&#xD;&#x9;ACTIVESTBY,&#xD;&#x9;PRECHARGESTBY,&#xD;&#x9;ACTIVEPWDN,&#xD;&#x9;PRECHARGEPWDN,&#xD;&#x9;ACTIVATING,&#xD;&#x9;READING,&#xD;&#x9;WRITING,&#xD;&#x9;PRECHARGING&#xD;} DefMemoryMode;&#xD;typedef enum {&#xD;&#x9;ACTIVATE, READ, WRITE, PRECHARGE&#xD;} DefDDRCmd;&#xD;typedef int DefDataSize;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDataSize dataSize;&#xD;&#x9;float startTime;&#xD;&#x9;int ID;&#xD;&#x9;long address;&#xD;&#x9;int burstLength;&#xD;&#x9;int size;&#xD;} DefAXIADDRchn;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDataSize dataSize;&#xD;&#x9;float startTime;&#xD;&#x9;int ID;&#xD;&#x9;int dataValue;&#xD;&#x9;int burstLength;&#xD;} DefAXIDATAchn;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDataSize dataSize;&#xD;&#x9;float startTime;&#xD;&#x9;int ID;&#xD;&#x9;int dataValue;&#xD;&#x9;long address;&#xD;&#x9;int burstLength;&#xD;&#x9;int size;&#xD;} DefMemoryWriteRequest;&#xD;&#xD;typedef DefAXIADDRchn DefMemoryReadRequest;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDataSize dataSize;&#xD;&#x9;float startTime;&#xD;&#x9;int ID;&#xD;&#x9;int dataValue;&#xD;&#x9;int burstLength;&#xD;} DefMemoryReadData;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDataSize dataSize;&#xD;&#x9;float startTime;&#xD;&#x9;DefMemCmd memCmd;&#xD;&#x9;int ID;&#xD;&#x9;int memID;&#xD;&#x9;long address;&#xD;&#x9;int dataValue;&#xD;&#x9;int size;&#xD;&#x9;int burstLength;&#xD;} DefMemoryRequest;&#xD;&#xD;struct DefListRequests{&#xD;&#x9;DefMemoryRequest memoryRequest;&#xD;&#x9;struct DefListRequests * nextRequestPtr;&#xD;&#x9;struct DefListRequests * prevRequestPtr;&#xD;} ;&#xD;&#xD;typedef struct {&#xD;&#x9;DefDDRCmd Cmd;&#xD;&#x9;int BankAccessed;&#xD;&#x9;int RowAccessed;&#xD;&#x9;int ColumnAccessed;&#xD;&#x9;int memID;&#xD;} DefDDRAction;\" globalDeclarations=\"extern int cumulativeBytes;&#xD;extern float cumulativeLatency;&#xD;extern int transferNumber;&#xD;&#xD;extern int NbWriteRequests;&#xD;extern int NbReadRequests;&#xD;extern int NbTotalWriteRequests;&#xD;extern int NbTotalReadRequests;&#xD;extern float TotalWriteLatency;&#xD;extern float TotalReadLatency;&#xD;extern float AverageReadLatency;&#xD;extern float AverageWriteLatency;&#xD;extern float ReadBandwidth;&#xD;extern float WriteBandwidth;&#xD;extern float CombinedBandwidth;&#xD;extern float AverageReadBandwidth;&#xD;extern float AverageCombinedBandwidth;&#xD;extern float AverageWriteBandwidth;&#xD;extern float TotalReadData;&#xD;extern float TotalWriteData;&#xD;extern float TotalCombinedData;&#xD;extern int MemoryConsumption;&#xD;extern int DQPutTime;&#xD;extern int srand_seed;&#xD;extern DefListRequests FirstEmptyRequest;&#xD;extern int Tabtest[2][94];&#xD;extern int TabSelectCmd[2][94];&#xD;extern long TabAdressRead[2][51];&#xD;extern long TabAdressWrite[2][44];\" globalDefinitions=\"int cumulativeBytes = 0;&#xD;float cumulativeLatency = 0;&#xD;int transferNumber = 0;&#xD;&#xD;int NbWriteRequests = 0;&#xD;int NbReadRequests = 0;&#xD;int NbTotalWriteRequests = 0;&#xD;int NbTotalReadRequests = 0;&#xD;float TotalWriteLatency = 0;&#xD;float TotalReadLatency = 0;&#xD;float AverageReadLatency = 0;&#xD;float AverageWriteLatency = 0;&#xD;float ReadBandwidth = 0;&#xD;float WriteBandwidth = 0;&#xD;float CombinedBandwidth = 0;&#xD;float AverageReadBandwidth = 0;&#xD;float AverageCombinedBandwidth = 0;&#xD;float AverageWriteBandwidth = 0;&#xD;float TotalReadData = 0;&#xD;float TotalWriteData = 0;&#xD;float TotalCombinedData = 0;&#xD;int MemoryConsumption = 4;&#xD;int DQPutTime = 0;&#xD;int srand_seed = 1;&#xD;DefListRequests FirstEmptyRequest;&#xD;int Tabtest[2][94]={{5,1,4,4,8,4,1,7,7,3,3,0,0,6,6,2,2,9,5,2,8,2,8,5,8,4,1,4,1,7,1,7,4,7,3,0,3,0,6,3,3,6,2,6,2,9,2,9,5,2,8,5,1,8,4,1,7,4,0,4,0,7,0,7,3,0,6,3,9,6,9,6,2,9,5,5,1,1,8,8,4,4,0,7,3,7,7,3,0,6,3,6,2,6},{1,8,8,1,1,7,4,0,4,0,7,0,6,3,6,3,9,3,9,6,9,5,2,9,5,5,1,1,8,8,4,4,0,0,7,7,3,0,6,9,9,9,5,5,2,8,5,1,8,4,1,8,4,1,7,7,3,3,0,6,3,9,6,2,2,9,5,2,8,2,8,5,8,4,1,4,1,7,1,7,4,0,0,3,0,6,3,9,9,9}};&#xD;int TabSelectCmd[2][94]={{66 ,45 ,83 ,10 ,41 ,28 ,96 ,75 ,92 ,79 ,96 ,75 ,92 ,71 ,88 ,75 ,92 ,71 ,50 ,37 ,16 ,54 ,33 ,20 ,50 ,37 ,16 ,54 ,33 ,12 ,50 ,29 ,16 ,46 ,33 ,12 ,50 ,29 ,98 ,85 ,12 ,42 ,29 ,60 ,46 ,25 ,64 ,42 ,21 ,98 ,77 ,56 ,43 ,21 ,90 ,77 ,56 ,43 ,21 ,60 ,39 ,17 ,56 ,35 ,21 ,90 ,69 ,56 ,35 ,14 ,52 ,31 ,18 ,86 ,65 ,82 ,69 ,86 ,65 ,82 ,61 ,78 ,65 ,44 ,23 ,61 ,79 ,65 ,44 ,23 ,10 ,40 ,27 ,57},{27, 96, 23, 62, 79, 58, 45, 24, 62, 41, 20, 58, 37, 24, 54, 41, 20, 58, 37, 16, 54, 33, 20, 89, 75, 93, 71, 89, 67, 85, 71, 89, 67, 85, 64, 81, 68, 46, 25, 64, 81, 98, 77, 94, 81, 60, 38, 25, 94, 73, 60, 39, 25, 94, 73, 90, 77, 94, 73, 52, 39, 17, 86, 73, 90, 69, 48, 35, 14, 52, 31, 10, 48, 27, 14, 44, 31, 10, 48, 27, 96, 83, 10, 48, 27, 96, 83, 61, 79, 96}};&#xD;long TabAdressRead[2][51]={{869114 ,392171 ,9952 ,676372 ,771095 ,578353 ,196165 ,290888 ,957309 ,764567 ,382347 ,666548 ,284360 ,91618 ,186341 ,758039 ,852762 ,470542 ,660020 ,277832 ,372555 ,944220 ,1038975 ,179813 ,846233 ,464014 ,81826 ,748214 ,1032415 ,268008 ,457485 ,552208 ,741686 ,836409 ,359498 ,454221 ,72002 ,261479 ,356202 ,545680 ,447693 ,349674 ,1016094 ,823353 ,441133 ,535888 ,725334 ,1009566 ,55681 ,245159 ,911547},{202694 ,486894 ,104707 ,294152 ,388907 ,960573 ,6688 ,673108 ,862554 ,480366 ,98147 ,160 ,950749 ,568561 ,375819 ,1042239 ,88354 ,754775 ,562033 ,656756 ,366027 ,650227 ,839705 ,934428 ,75298 ,170021 ,1025887 ,643699 ,738422 ,927900 ,163492 ,829881 ,65474 ,731894 ,539152 ,633875 ,156932 ,251687 ,918076 ,58945 ,153668 ,820089 ,343146 ,437869 ,627347}};&#xD;long TabAdressWrite[2][44]={{774358, 581617, 865817, 483630, 3424, 669843, 477102, 571824, 761302, 379083, 473838, 1045502, 947484, 565296, 183077, 85090, 369290, 1035678, 176549, 842968, 937691, 78562, 173285, 362762, 646963, 548944, 166756, 450957, 640402, 735157, 258215, 352938, 542416, 637138, 254951, 62209, 728629, 630610, 248423, 914811, 150404, 816824, 434604},{297416 ,963836 ,199429 ,101411 ,767830 ,385611 ,575089 ,192901 ,287624 ,859289 ,954044 ,94882 ,189637 ,856025 ,663283 ,281096 ,849497 ,467277 ,751478 ,274568 ,940955 ,558768 ,653491 ,271272 ,460749 ,555472 ,744950 ,1029150 ,264743 ,931163 ,833144 ,1022622 ,68738 ,924635 ,1019358 ,160228 ,826616 ,921339 ,444429 ,346410 ,1012829 ,532623 ,722069 ,339882}};\">\n  <annotations xmi:id=\"_hgYDsbGGEeCKGfGcPtVqvA\" source=\"codegen\">\n    <details xmi:id=\"_hgYDsrGGEeCKGfGcPtVqvA\" key=\"path\" value=\"ConfigDDRMemory/gen-sysc\"/>\n  </annotations>\n  <annotations xmi:id=\"_hgYDs7GGEeCKGfGcPtVqvA\" source=\"build\">\n    <details xmi:id=\"_hgYDtLGGEeCKGfGcPtVqvA\" key=\"path\" value=\"ConfigDDRMemory/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_ltr0EMR-EeCiRpbnuwhQTQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"__RqxcEwnEeeIMY_7xuCoNQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1308767030\"/>\n    <details xmi:id=\"_XIIq4GCuEeeCWMy6uX7ruQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1166622717\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_hgZ5eLGGEeCKGfGcPtVqvA\" name=\"DefRDATAchn\" definition=\"typedef DefAXIDATAchn DefRDATAchn;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,dataValue:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataValue;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;\"/>\n  <dataTypes xmi:id=\"_hgZ5erGGEeCKGfGcPtVqvA\" name=\"DefARADDRchn\" definition=\"typedef DefAXIADDRchn DefARADDRchn;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_hgZ5fLGGEeCKGfGcPtVqvA\" name=\"DefBRESPchn\" definition=\"typedef DefAXIADDRchn DefBRESPchn;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_hgZ5frGGEeCKGfGcPtVqvA\" name=\"DefWDATAchn\" definition=\"typedef DefAXIDATAchn DefWDATAchn;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,dataValue:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataValue;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;\"/>\n  <dataTypes xmi:id=\"_hgZ5gLGGEeCKGfGcPtVqvA\" name=\"DefAWADDRchn\" definition=\"typedef DefAXIADDRchn DefAWADDRchn;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\" readTime=\"\" writeTime=\"\"/>\n  <dataTypes xmi:id=\"_hgZ5grGGEeCKGfGcPtVqvA\" name=\"DefDDRCommand\" definition=\"typedef DefDDRAction DefDDRCommand;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; &quot;Cmd:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().Cmd;&#xA;&#x9;trace &lt;&lt; &quot;,BankAccessed:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().BankAccessed;&#xA;&#x9;trace &lt;&lt; &quot;,RowAccessed:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().RowAccessed;&#xA;&#x9;trace &lt;&lt; &quot;,ColumnAccessed:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ColumnAccessed;&#xA;&#x9;trace &lt;&lt; &quot;,memID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().memID;\" readTime=\"\" writeTime=\"\"/>\n  <dataTypes xmi:id=\"_hgZ5hLGGEeCKGfGcPtVqvA\" name=\"DefDQs\" definition=\"typedef int DefDQs;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_hgZ5hbGGEeCKGfGcPtVqvA\" name=\"DefDataRead\" definition=\"typedef DefMemoryWriteRequest DefDataRead;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,dataValue:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataValue;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_hgZ5h7GGEeCKGfGcPtVqvA\" name=\"DefWriteAck\" definition=\"typedef DefAXIADDRchn DefWriteAck;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;&#x9;\" allocatePayload=\"\"/>\n  <dataTypes xmi:id=\"_hgZ5ibGGEeCKGfGcPtVqvA\" name=\"DefMemReadRequest\" definition=\"typedef DefMemoryReadRequest DefMemReadRequest;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_hgZ5i7GGEeCKGfGcPtVqvA\" name=\"DefMemWriteRequest\" definition=\"typedef DefMemoryWriteRequest DefMemWriteRequest;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().startTime;&#xA;&#x9;trace &lt;&lt; &quot;,ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ID;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_hgZ5jbGGEeCKGfGcPtVqvA\" name=\"DefListRequestsPtr\" definition=\"typedef DefListRequests *DefListRequestsPtr;\" copyPayload=\"\" tracePayload=\"trace &lt;&lt; get_data()->memoryRequest.size;&#xA;\" readTime=\"\" writeTime=\"\" allocatePayload=\"\" deallocatePayload=\"\"/>\n  <dataTypes xmi:id=\"_hgZ5j7GGEeCKGfGcPtVqvA\" name=\"DefRequestInformation\" definition=\"typedef struct {&#x9;&#xD;&#xA;&#x9;DefMemoryRequest MemRequest;&#xD;&#xA;&#x9;int NbMemTransactions;&#xD;&#xA;} DefRequestInformation;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;MemRequest.dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.startTime:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.startTime;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.memCmd:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.memCmd;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.ID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.ID;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.memID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.memID;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.address;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.dataValue:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.dataValue;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.size;&#xA;&#x9;trace &lt;&lt; &quot;,MemRequest.burstLength:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemRequest.burstLength;&#xA;&#x9;trace &lt;&lt; &quot;,NbMemTransactions:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().NbMemTransactions;&#x9;\"/>\n  <dataTypes xmi:id=\"_hgZ5kbGGEeCKGfGcPtVqvA\" name=\"DefRequests2Memory\" definition=\"typedef struct {&#x9;&#x9;&#xD;&#xA;&#x9;DefDataSize dataSize;&#xD;&#xA;&#x9;DefMemCmd memCmd;&#xD;&#xA;&#x9;long address;&#xD;&#xA;&#x9;int dataValue;&#xD;&#xA;&#x9;int size;&#xD;&#xA;&#x9;int memID;&#xD;&#xA;} DefRequests2Memory;\" tracePayload=\"&#x9;trace &lt;&lt; &quot;dataSize:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataSize;&#xA;&#x9;trace &lt;&lt; &quot;,memCmd:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().memCmd;&#xA;&#x9;trace &lt;&lt; &quot;,address:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().address;&#xA;&#x9;trace &lt;&lt; &quot;,dataValue:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().dataValue;&#xA;&#x9;trace &lt;&lt; &quot;,size:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().size;&#xA;&#x9;trace &lt;&lt; &quot;,memID:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().memID;\"/>\n  <dataTypes xmi:id=\"_hgZ5k7GGEeCKGfGcPtVqvA\" name=\"DefMemoryStatus\" definition=\"typedef struct {&#x9;&#xD;&#xA;&#x9;DefMemoryMode MemoryState;&#xD;&#xA;&#x9;int ActiveRow[4];&#xD;&#xA;} DefMemoryStatus;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; &quot;MemoryState:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().MemoryState;&#xA;&#x9;trace &lt;&lt; &quot;,ActiveRow[0]:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ActiveRow[0];&#xA;&#x9;trace &lt;&lt; &quot;,ActiveRow[1]:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ActiveRow[1];&#xA;&#x9;trace &lt;&lt; &quot;,ActiveRow[2]:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ActiveRow[2];&#xA;&#x9;trace &lt;&lt; &quot;,ActiveRow[3]:&quot;;&#xA;&#x9;trace &lt;&lt; get_data().ActiveRow[3];\" readTime=\"\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5lbGGEeCKGfGcPtVqvA\" name=\"C_Nbr\" documentation=\"Number of clients \" default=\"1\" visibility=\"PUBLIC\" rangeLimits=\"_hgYrI7GGEeCKGfGcPtVqvA _hgYrLLGGEeCKGfGcPtVqvA _hgYDubGGEeCKGfGcPtVqvA\" value=\"1\" min=\"0\" max=\"9\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5lrGGEeCKGfGcPtVqvA\" name=\"P_Nbr\" documentation=\"Number of ports\" default=\"1\" visibility=\"PUBLIC\" rangeLimits=\"_hgZSq7GGEeCKGfGcPtVqvA _hgZStLGGEeCKGfGcPtVqvA _hgZSvbGGEeCKGfGcPtVqvA _hgZSzbGGEeCKGfGcPtVqvA _hgZS3bGGEeCKGfGcPtVqvA _hgYrWLGGEeCKGfGcPtVqvA\" value=\"1\" min=\"0\" max=\"7\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5l7GGEeCKGfGcPtVqvA\" name=\"M_Nbr\" documentation=\"Number of memories\" default=\"1\" visibility=\"PUBLIC\" rangeLimits=\"_hgZ5PbGGEeCKGfGcPtVqvA _hgZ5RrGGEeCKGfGcPtVqvA _hgZSmbGGEeCKGfGcPtVqvA _hgZS8bGGEeCKGfGcPtVqvA\" value=\"1\" min=\"0\" max=\"15\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5mLGGEeCKGfGcPtVqvA\" name=\"NbBanksperMemory\" documentation=\"Number of banks per memory\" default=\"1\" visibility=\"PUBLIC\" rangeLimits=\"_hgZ5L7GGEeCKGfGcPtVqvA _hgZS9bGGEeCKGfGcPtVqvA\" value=\"1\" min=\"0\" max=\"3\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5mbGGEeCKGfGcPtVqvA\" name=\"WriteAckStrategy\" documentation=\"Strategy selected for write ack\" default=\"NORMAL\" visibility=\"PUBLIC\" value=\"NORMAL\">\n    <values>NORMAL</values>\n    <values>FAST</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5mrGGEeCKGfGcPtVqvA\" name=\"ArbitrationScheme\" documentation=\"Arbitration algorithm selected\" default=\"FIRSTREQUEST\" visibility=\"PUBLIC\" value=\"FIRSTBURST\">\n    <values>FIRSTREQUEST</values>\n    <values>FIRSTBURST</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5m7GGEeCKGfGcPtVqvA\" name=\"BurstLengthMode\" documentation=\"Burst length mode selected\" default=\"FIX\" visibility=\"PUBLIC\">\n    <values>FIX</values>\n    <values>RANDOM</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5nLGGEeCKGfGcPtVqvA\" name=\"BurstLength\" documentation=\"Burst Length\" default=\"4\" visibility=\"PUBLIC\" value=\"4\" min=\"1\" max=\"16\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5nbGGEeCKGfGcPtVqvA\" name=\"Scenario\" documentation=\"Scenario selected\" default=\"BOTH\" visibility=\"PUBLIC\">\n    <values>WRITEFIRST</values>\n    <values>READFIRST</values>\n    <values>BOTH</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5nrGGEeCKGfGcPtVqvA\" name=\"MasterDelay\" documentation=\"Master delay\" default=\"50\" visibility=\"PUBLIC\" value=\"50\" min=\"10\" max=\"300\" step=\"10\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5n7GGEeCKGfGcPtVqvA\" name=\"ArbitrationDelay\" documentation=\"Arbitration delay\" default=\"10\" visibility=\"PUBLIC\" value=\"10\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5oLGGEeCKGfGcPtVqvA\" name=\"MemWriteReqFifoSize\" documentation=\"Memory write request fifo\" default=\"10\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5obGGEeCKGfGcPtVqvA\" name=\"MemReadReqFifoSize\" documentation=\"Memory read request fifo\" default=\"10\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:ArrayParameter\" xmi:id=\"_hgZ5orGGEeCKGfGcPtVqvA\" name=\"AXIDataTransferSize\" documentation=\"Size of a data transfer inside a burst in bits\" default=\"32\" visibility=\"PUBLIC\" value=\"32\">\n    <values>8</values>\n    <values>16</values>\n    <values>32</values>\n    <values>64</values>\n    <values>128</values>\n    <values>256</values>\n    <values>512</values>\n    <values>1024</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:ArrayParameter\" xmi:id=\"_hgZ5q7GGEeCKGfGcPtVqvA\" name=\"EffectiveMemoryWidth\" documentation=\"Effective memory width of the memory (size DDR = size RAM *2) in bits\" default=\"32\" visibility=\"PUBLIC\" value=\"32\">\n    <values>8</values>\n    <values>16</values>\n    <values>32</values>\n    <values>64</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5sLGGEeCKGfGcPtVqvA\" name=\"RCDLatency\" documentation=\"Row activation time\" default=\"5\" visibility=\"PUBLIC\" min=\"1\" max=\"8\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5sbGGEeCKGfGcPtVqvA\" name=\"CASLatency\" documentation=\"Column access latency - time required to make data available on dq signals\" default=\"5\" visibility=\"PUBLIC\" min=\"1\" max=\"8\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5srGGEeCKGfGcPtVqvA\" name=\"RPLatency\" documentation=\"Precharge time\" default=\"5\" visibility=\"PUBLIC\" min=\"1\" max=\"8\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5s7GGEeCKGfGcPtVqvA\" name=\"MODE\" documentation=\"Simulation mode\" default=\"RELEASE\" visibility=\"PUBLIC\" value=\"DEMO\">\n    <values>RELEASE</values>\n    <values>VERBOSE</values>\n    <values>DEMO</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5tLGGEeCKGfGcPtVqvA\" name=\"PrechargePowerDownPowerConsumption\" documentation=\"Power consumption in precharge powerdown mode in mW\" default=\"3\" visibility=\"PUBLIC\" value=\"3\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5tbGGEeCKGfGcPtVqvA\" name=\"ActivePowerDownModePowerConsumption\" documentation=\"Power consumption in active power down mode in mW\" default=\"6\" visibility=\"PUBLIC\" value=\"6\" min=\"0\" max=\"200\" step=\"2\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5trGGEeCKGfGcPtVqvA\" name=\"PrechargeStandbyModePowerConsumption\" documentation=\"Power consumption in precharge standby mode in mW\" default=\"10\" visibility=\"PUBLIC\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5t7GGEeCKGfGcPtVqvA\" name=\"ActiveStandbyModePowerConsumption\" documentation=\"power consumption in active standby mode in mW\" default=\"58\" visibility=\"PUBLIC\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5uLGGEeCKGfGcPtVqvA\" name=\"AutoPreChargeEnabled\" documentation=\"enable or disable precharge after memory access\" default=\"ON\" visibility=\"PUBLIC\" value=\"ON\">\n    <values>ON</values>\n    <values>OFF</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5ubGGEeCKGfGcPtVqvA\" name=\"PowerDownTimeout\" documentation=\"Timeout of the powerdown\" default=\"20\" visibility=\"PUBLIC\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5urGGEeCKGfGcPtVqvA\" name=\"MemoryDelay\" documentation=\"Memory delay to process request\" default=\"5\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5u7GGEeCKGfGcPtVqvA\" name=\"PrechargeConsumption\" documentation=\"Power consumption of a precharge command in mW\" default=\"20\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5vLGGEeCKGfGcPtVqvA\" name=\"ActivatePowerConsumption\" documentation=\"Power consumption of the command activate\" default=\"60\" visibility=\"PUBLIC\" value=\"60\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5vbGGEeCKGfGcPtVqvA\" name=\"WritePowerConsumption\" documentation=\"Power consumed by a write\" default=\"26\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5vrGGEeCKGfGcPtVqvA\" name=\"ReadPowerConsumption\" documentation=\"Power consumed by a read\" default=\"52\" visibility=\"PUBLIC\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5v7GGEeCKGfGcPtVqvA\" name=\"DqPowerConsumption\" documentation=\"Power consumed by dq signals\" default=\"18\" visibility=\"PUBLIC\" min=\"1\" max=\"50\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_hgZ5wLGGEeCKGfGcPtVqvA\" name=\"MEMORYVERBOSE\" documentation=\"Monitoring memory states\" default=\"ISOFF\" visibility=\"PUBLIC\" value=\"ISOFF\">\n    <values>ISON</values>\n    <values>ISOFF</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5wbGGEeCKGfGcPtVqvA\" name=\"RCLatency\" documentation=\"trc\" default=\"12\" visibility=\"PUBLIC\" value=\"12\" min=\"1\" max=\"20\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:ArrayParameter\" xmi:id=\"_hgZ5wrGGEeCKGfGcPtVqvA\" name=\"BurstLengthMemory\" documentation=\"Burst lenght in memory\" default=\"1\" visibility=\"PUBLIC\" value=\"1\">\n    <values>1</values>\n    <values>2</values>\n    <values>4</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hgZ5xrGGEeCKGfGcPtVqvA\" name=\"CyclePeriod\" documentation=\"Cycle period of the system in ns\" default=\"10\" visibility=\"PUBLIC\" value=\"10\" min=\"1\" max=\"100\" step=\"1\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYDtbGGEeCKGfGcPtVqvA\" name=\"DDRMemoryStrucSt\" documentation=\"\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYDtrGGEeCKGfGcPtVqvA\" name=\"ClientSide\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_hgYrNLGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5cbGGEeCKGfGcPtVqvA\" ports=\"_hgYrHLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgYrNbGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5arGGEeCKGfGcPtVqvA\" ports=\"_hgYrDrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgYrNrGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5Y7GGEeCKGfGcPtVqvA\" ports=\"_hgYrFbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgYrN7GGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5XLGGEeCKGfGcPtVqvA\" ports=\"_hgYrD7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgYrOLGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5VbGGEeCKGfGcPtVqvA\" ports=\"_hgYrELGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYDt7GGEeCKGfGcPtVqvA\" name=\"ClientSideStrucSt\" documentation=\"\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYDuLGGEeCKGfGcPtVqvA\" name=\"Device\" documentation=\"\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n          <max xmi:id=\"_hgYDubGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lbGGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgYDurGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <ports xmi:id=\"_hgYrDLGGEeCKGfGcPtVqvA\" name=\"RDATAin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgYrK7GGEeCKGfGcPtVqvA\" ports=\"_hgYq7rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrDbGGEeCKGfGcPtVqvA\" name=\"BRESPin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgYrIrGGEeCKGfGcPtVqvA\" ports=\"_hgYrCLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrDrGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgYrNbGGEeCKGfGcPtVqvA\" ports=\"_hgYqxLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrD7GGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgYrN7GGEeCKGfGcPtVqvA\" ports=\"_hgYqxbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrELGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgYrOLGGEeCKGfGcPtVqvA\" ports=\"_hgYqxrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYDu7GGEeCKGfGcPtVqvA\" name=\"DeviceStrucSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYDvLGGEeCKGfGcPtVqvA\" name=\"Sender\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"DefMemCmd Cmd;&#xD;int dataValue;&#xD;int myIndex;&#xD;long SendInitDuration;&#xD;int burstLength;&#xD;int size;&#xD;float startTime;&#xD;long address;&#xD;int test;&#xD;int SelectCmdDuration;&#xD;&#xD;int cptTabTest;&#xD;int cptTabSelectCmd;&#xD;int cptTabAdressRead;&#xD;int cptTabAdressWrite;\" definitions=\"\" initializations=\"cptTabTest=0;&#xD;&#xA;cptTabSelectCmd=0;&#xD;&#xA;cptTabAdressRead=0;&#xD;&#xA;cptTabAdressWrite=0;\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_hgYqxLGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYDzLGGEeCKGfGcPtVqvA\" port=\"_hgYrDrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYqxbGGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYD1LGGEeCKGfGcPtVqvA\" port=\"_hgYrD7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYqxrGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYDzrGGEeCKGfGcPtVqvA\" port=\"_hgYrELGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYDvbGGEeCKGfGcPtVqvA\" name=\"SenderBehaviorBh\" firstStatement=\"_hgYDvrGGEeCKGfGcPtVqvA\">\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYDvrGGEeCKGfGcPtVqvA\" name=\"SenderInit\" isFirstOf=\"_hgYDvbGGEeCKGfGcPtVqvA\" next=\"_hgYDwrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();//cf_get_current_function_index();&#xD;&#x9;switch (Scenario) {&#xD;&#x9;case WRITEFIRST:&#xD;&#x9;&#x9;SendInitDuration = 1;&#xD;&#x9;&#x9;break;&#xD;&#x9;case READFIRST:&#xD;&#x9;&#x9;SendInitDuration = 800;&#xD;&#x9;&#x9;break;&#xD;&#x9;case BOTH:&#xD;&#x9;&#x9;SendInitDuration = 1;&#xD;&#x9;&#x9;break;&#xD;&#x9;default:&#xD;&#x9;&#x9;break;&#xD;&#x9;}&#xD;&#x9;if (myIndex > C_Nbr)&#xD;&#x9;&#x9;SendInitDuration = 1000000;&#xA;&#x9;&#x9;&#x9;\" executionTime=\"SendInitDuration Cycle\" type=\"PASSIVE\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYDwrGGEeCKGfGcPtVqvA\" name=\"Loop0\" firstStatement=\"_hgYDxLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYD1rGGEeCKGfGcPtVqvA\" previous=\"_hgYDvrGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYDxLGGEeCKGfGcPtVqvA\" name=\"SelectCmd\" isFirstOf=\"_hgYDwrGGEeCKGfGcPtVqvA\" next=\"_hgYD1rGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;&#xA;&#xA;&#x9;if (MODE == DEMO) {&#xA;&#x9;&#x9;test=Tabtest[myIndex][cptTabTest];&#xA;&#x9;&#x9;//cf_trace_report(&quot;1: %d &quot;,Tabtest[0][0]);&#xA;&#x9;&#x9;//cf_trace_report(&quot;test: %d &quot;,test);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[0][0]);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[0][1]);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[0][2]);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[1][0]);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[1][1]);&#xA;&#x9;&#x9;//cf_trace_report(&quot; %d &quot;,Tabtest[1][2]);&#xA;&#x9;&#x9;//cf_trace_report(&quot;%d &quot;,cptTabTest);&#x9;&#xA;&#x9;&#x9;cptTabTest++;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;dataValue = 0;&#xA;&#x9;&#x9;srand( srand_seed);&#xA;&#x9;&#x9;srand_seed++;&#xA;&#x9;&#x9;test = rand() % 10;&#xA;&#x9;&#x9;/*if(myIndex==0){&#xA;&#x9;&#x9;cf_trace_report(&quot;%d &quot;, test);}*/&#xA;&#x9;&#x9;/*cptTabTest++;*/&#xA;&#x9;&#x9;/*cf_trace_report(&quot;%d &quot;, cptTabTest);}*/&#xA;&#x9;}&#xA;&#x9;&#xD;&#x9;if (test &lt; 5) {&#xD;&#x9;&#x9;Cmd = READREQ;&#xA;&#x9;&#x9;/*cf_trace_report(&quot;Cmd = READREQ&quot;);*/&#xD;&#x9;} else {&#xD;&#x9;&#x9;Cmd = WRITEREQ;&#xA;&#x9;&#x9;/*cf_trace_report(&quot;Cmd = WRITEREQ&quot;);*/&#xD;&#x9;}&#xA;&#x9;&#xA;&#xA;&#x9;if (MODE == DEMO) {&#xA;&#x9;&#x9;SelectCmdDuration=TabSelectCmd[myIndex][cptTabSelectCmd];&#xA;&#x9;&#x9;cptTabSelectCmd++;&#xA;&#x9;&#x9;//cf_trace_report(&quot;%d: %d &quot;, myIndex, SelectCmdDuration);/*}*/&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;SelectCmdDuration = rand() % 90 + 10;&#xA;&#x9;}\" executionTime=\"SelectCmdDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYDyLGGEeCKGfGcPtVqvA\" name=\"PrepareReadCmd\" documentation=\"\" isFirstOf=\"_hgYD17GGEeCKGfGcPtVqvA\" next=\"_hgYDzLGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;/* Datasize is only 1 because it takes one cycle to send it*/&#xD;&#x9;ARADDRchn.dataSize = 1;&#xD;&#x9;ARADDRchn.startTime = (float) ( cf_time_stamp().to_scalar(CF_NS) + 10 * MasterDelay );&#xD;&#x9;ARADDRchn.ID = myIndex;&#xA;&#x9;//cf_trace_report(&quot;Before cf_util_rand_uint 1, M_Nbr=%d, MEMORYSIZE=%d&quot;,M_Nbr.get_value(),MEMORYSIZE);&#xA;&#x9;/*ARADDRchn.address = MEMORYSIZE * cf_util_rand_uint(0, M_Nbr.get_value() -1 ) + cf_util_rand_uint(0,MEMORYSIZE); replace by following code in v5.0.0 because cf_util_rand_uint(0, 0) does't work (MIN must be &lt; to MAX)*/ &#xA;&#x9;if (M_Nbr.get_value()==1)&#xA;&#x9;{&#xD;&#x9;&#x9;if (MODE == DEMO) {&#xA;&#x9;&#x9;&#x9;ARADDRchn.address=TabAdressRead[myIndex][cptTabAdressRead];&#xA;&#x9;&#x9;&#x9;cptTabAdressRead++;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;ARADDRchn.address = cf_util_rand_uint(0,MEMORYSIZE);&#xA;&#x9;}&#xA;&#x9;else&#xA;&#x9;{&#xA;&#x9;&#x9;if (MODE == DEMO) {&#xA;&#x9;&#x9;&#x9;ARADDRchn.address=TabAdressRead[myIndex][cptTabAdressRead];&#xA;&#x9;&#x9;&#x9;cptTabAdressRead++;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else&#xA;&#x9;&#x9;ARADDRchn.address = MEMORYSIZE * cf_util_rand_uint(0, M_Nbr.get_value() -1 ) + cf_util_rand_uint(0,MEMORYSIZE);&#xA;&#xA;&#x9;}&#xA;&#x9;/*ARADDRchn.address = MEMORYSIZE * cf_util_rand_uint(M_Nbr - 1, 0) + cf_util_rand_uint(MEMORYSIZE, 0);*/&#xA;&#x9;/*cf_trace_report(&quot;%d&quot;,ARADDRchn.address);*/&#xD;&#x9;if (BurstLengthMode == FIX) {&#xD;&#x9;&#x9;burstLength = BurstLength;&#xD;&#x9;} else {&#xA;&#x9;&#x9;//cf_trace_report(&quot;Before cf_util_rand_uint 2&quot;);&#xD;&#x9;&#x9;/*burstLength = cf_util_rand_uint(1, BurstLength);*/&#xA;&#x9;&#x9;burstLength = cf_util_rand_uint(BurstLength, 1);&#xA;&#x9;&#x9;/*cf_trace_report(&quot;burstLength=%d&quot;,burstLength);*/&#xD;&#x9;}&#xD;&#x9;ARADDRchn.burstLength = burstLength;&#xD;&#x9;size = AXIDataTransferSize;&#xD;&#x9;ARADDRchn.size = size;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&quot;Sending Read Address, Master %i, burstlength %i, address %i, size %i&quot;,&#x9;myIndex, burstLength, ARADDRchn.address, size);&#xD;&#x9;}\" executionTime=\"MasterDelay Cycle\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYDzLGGEeCKGfGcPtVqvA\" name=\"Action16\" isLastOf=\"_hgYD17GGEeCKGfGcPtVqvA\" previous=\"_hgYDyLGGEeCKGfGcPtVqvA\" port=\"_hgYqxLGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYDzrGGEeCKGfGcPtVqvA\" name=\"Action17\" previous=\"_hgYD0LGGEeCKGfGcPtVqvA\" next=\"_hgYqwLGGEeCKGfGcPtVqvA\" port=\"_hgYqxrGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYD0LGGEeCKGfGcPtVqvA\" name=\"PrepareWriteCmd\" isFirstOf=\"_hgYD2bGGEeCKGfGcPtVqvA\" next=\"_hgYDzrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;startTime = (float) cf_time_stamp().to_scalar(CF_NS);&#xD;&#x9;AWADDRchn.startTime = startTime + 10 * MasterDelay;&#xD;&#x9;AWADDRchn.dataSize = 1;&#xD;&#x9;/* Up to now, 1 ID per master*/&#xD;&#x9;AWADDRchn.ID = myIndex;&#xD;&#xA;&#x9;if (MODE == DEMO) {&#xA;&#x9;&#x9;&#x9;address =TabAdressWrite[myIndex][cptTabAdressWrite];&#xA;&#x9;&#x9;&#x9;cptTabAdressWrite++;&#xA;&#x9;&#x9;}&#xA;&#x9;else&#xA;&#x9;&#x9;address = cf_util_rand_uint(0, (M_Nbr * MEMORYSIZE) - 1);&#xA;&#x9;&#xD;&#x9;AWADDRchn.address = address;&#xA;&#x9;cf_trace_report(&quot;%d&quot;,AWADDRchn.address);&#xD;&#x9;if (BurstLengthMode == FIX) {&#xD;&#x9;&#x9;burstLength = BurstLength;&#xD;&#x9;} else {&#xD;&#x9;&#x9;burstLength = cf_util_rand_uint(1, BurstLength);&#xD;&#x9;}&#xD;&#xD;&#x9;AWADDRchn.burstLength = burstLength;&#xD;&#x9;size = AXIDataTransferSize;&#xD;&#x9;AWADDRchn.size = size;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&quot;Sending Write Address, Master %i, burstlength %i, address %d, size %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;myIndex, burstLength, address, size);&#xD;&#x9;}\" executionTime=\"MasterDelay Cycle\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYD1LGGEeCKGfGcPtVqvA\" name=\"Action18\" isLastOf=\"_hgYD2bGGEeCKGfGcPtVqvA\" previous=\"_hgYqwLGGEeCKGfGcPtVqvA\" port=\"_hgYqxbGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_hgYD1rGGEeCKGfGcPtVqvA\" documentation=\"\" isLastOf=\"_hgYDwrGGEeCKGfGcPtVqvA\" previous=\"_hgYDxLGGEeCKGfGcPtVqvA\">\n                  <conditionalBranches xmi:id=\"_hgYD17GGEeCKGfGcPtVqvA\" firstStatement=\"_hgYDyLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYDzLGGEeCKGfGcPtVqvA\" condition=\"Cmd==READREQ\"/>\n                  <conditionalBranches xmi:id=\"_hgYD2bGGEeCKGfGcPtVqvA\" firstStatement=\"_hgYD0LGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYD1LGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                </statements>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYqwLGGEeCKGfGcPtVqvA\" name=\"PrepareDataTransfer\" previous=\"_hgYDzrGGEeCKGfGcPtVqvA\" next=\"_hgYD1LGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;WDATAchn.dataValue = dataValue;&#xD;&#x9;WDATAchn.startTime = startTime;&#xD;&#x9;WDATAchn.ID = myIndex;&#xD;&#x9;dataValue++;\" executionTime=\"4 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYqyrGGEeCKGfGcPtVqvA\" name=\"ReceiverRData\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int burstLength;&#xD;&#x9;int myIndex;&#xD;&#x9;long ReceiveInitDuration;&#xD;&#x9;float startTime;&#xD;&#x9;float ReadLatency;&#xD;&#x9;int NbDataTransfer;&#xD;&#x9;int RemainingDataTransfer;\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n              <ports xmi:id=\"_hgYq7rGGEeCKGfGcPtVqvA\" name=\"RDATAin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_DeE4ULF1EeKpQpdJd9Uknw _XG_BkLuUEeWBz90L4uMBKw\" port=\"_hgYrDLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYqy7GGEeCKGfGcPtVqvA\" name=\"ReceiverRDataBehaviorBh\" firstStatement=\"_hgYq2LGGEeCKGfGcPtVqvA\">\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_y9sWYCg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector2\" inputAction=\"_hgYq4LGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_DeE4ULF1EeKpQpdJd9Uknw\" name=\"InputSelectorInput\" port=\"_hgYq7rGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ns\" duration=\" ns\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_T5aSULuUEeWBz90L4uMBKw\" name=\"InstanceInSelector\" inputAction=\"_hgYq67GGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_XG_BkLuUEeWBz90L4uMBKw\" name=\"InputSelectorInput\" port=\"_hgYq7rGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYq2LGGEeCKGfGcPtVqvA\" name=\"ReceiverRDataInit\" isFirstOf=\"_hgYqy7GGEeCKGfGcPtVqvA\" next=\"_hgYq3LGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();&#xD;&#x9;ReceiveInitDuration = 1;&#xD;&#x9;if (myIndex > C_Nbr) {&#xD;&#x9;&#x9;ReceiveInitDuration = 1000000;&#xD;&#x9;&#x9;cf_trace_report(&quot;instance %i of rddata disabled&quot;, myIndex);&#xD;&#x9;}\" executionTime=\"ReceiveInitDuration Cycle\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYq3LGGEeCKGfGcPtVqvA\" name=\"Loop2\" firstStatement=\"_hgYq67GGEeCKGfGcPtVqvA\" lastStatement=\"_hgYq3rGGEeCKGfGcPtVqvA\" previous=\"_hgYq2LGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYq3rGGEeCKGfGcPtVqvA\" name=\"Loop3\" isLastOf=\"_hgYq3LGGEeCKGfGcPtVqvA\" firstStatement=\"_hgYq4LGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYq47GGEeCKGfGcPtVqvA\" previous=\"_hgYq57GGEeCKGfGcPtVqvA\" condition=\"NbDataTransfer\" type=\"MULTIPLICATION\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYq4LGGEeCKGfGcPtVqvA\" name=\"Cond1\" isFirstOf=\"_hgYq3rGGEeCKGfGcPtVqvA\" next=\"_hgYq47GGEeCKGfGcPtVqvA\" inputSelector=\"_y9sWYCg7EeGtYfh4PZkfcA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYq47GGEeCKGfGcPtVqvA\" name=\"RxNextDataTransfer\" isLastOf=\"_hgYq3rGGEeCKGfGcPtVqvA\" previous=\"_hgYq4LGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;startTime = RDATAin.startTime;&#xD;&#x9;ReadLatency = ( float ) ( cf_time_stamp().to_scalar(CF_NS) - startTime );&#xD;&#x9;ReadBandwidth = (burstLength * AXIDataTransferSize) * 1000 / ReadLatency;&#xD;&#x9;RemainingDataTransfer--;&#xD;&#x9;if (RemainingDataTransfer == 0) {&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;ReadLatency&quot;, ReadLatency, &quot;ns&quot;);&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;ReadBandwidth&quot;, ReadBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;CombinedBandwith&quot;, ReadBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;&#x9;TotalReadData = TotalReadData + burstLength * AXIDataTransferSize;&#xD;&#x9;&#x9;TotalReadLatency = TotalReadLatency + ReadLatency;&#xD;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;ReadLatency = %f ns, starttime %f currenttime %f NbDataTransfer %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;ReadLatency, startTime, cf_time_stamp().to_scalar(CF_NS),&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;NbDataTransfer, cf_get_innermost_mi_container()->get_cp_index());/*cf_get_current_function_index());*/&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;\" executionTime=\"1 Cycle\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYq57GGEeCKGfGcPtVqvA\" name=\"RxFirstDataTransfer\" previous=\"_hgYq67GGEeCKGfGcPtVqvA\" next=\"_hgYq3rGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;/* burstLength = RequestsStatus[RDATAin.ID];*/&#xD;&#x9;burstLength = RDATAin.burstLength;&#xD;&#x9;NbDataTransfer = burstLength - 1;&#xD;&#x9;RemainingDataTransfer = NbDataTransfer;&#xD;&#x9;startTime = RDATAin.startTime;&#xD;&#x9;ReadLatency = (float) ( cf_time_stamp().to_scalar(CF_NS) - startTime );&#xD;&#x9;ReadBandwidth = (burstLength * AXIDataTransferSize) * 1000 / ReadLatency;&#xD;&#x9;if (NbDataTransfer == 0) {&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;ReadLatency&quot;, ReadLatency, &quot;ns&quot;);&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;ReadBandwidth&quot;, ReadBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;CombinedBandwidth&quot;, ReadBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;&#x9;TotalReadData = TotalReadData + burstLength * AXIDataTransferSize;&#xD;&#x9;&#x9;TotalReadLatency = TotalReadLatency + ReadLatency;&#xD;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;ReadLatency = %f ns, starttime %f currenttime %f NbDataTransfer %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;ReadLatency, startTime, cf_time_stamp().to_scalar(CF_NS),&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;NbDataTransfer, cf_get_current_function_index());&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#x9;NbTotalReadRequests++;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYq67GGEeCKGfGcPtVqvA\" name=\"Cond27\" isFirstOf=\"_hgYq3LGGEeCKGfGcPtVqvA\" next=\"_hgYq57GGEeCKGfGcPtVqvA\" inputSelector=\"_T5aSULuUEeWBz90L4uMBKw\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYq87GGEeCKGfGcPtVqvA\" name=\"ReceiveWACK\" documentation=\"\" constructor=\"\" includes=\"\" declarations=\"int myIndex;&#xD;&#xA;long ReceiveWACKInitDuration;&#xD;&#xA;float WriteLatency;&#xD;&#xA;float startTime;&#xD;&#xA;int burstLength;\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\">\n              <ports xmi:id=\"_hgYrCLGGEeCKGfGcPtVqvA\" name=\"BRESPin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_zu3UoCg7EeGtYfh4PZkfcA\" port=\"_hgYrDbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYq9LGGEeCKGfGcPtVqvA\" name=\"ReceiveWACKBehaviorBh\" firstStatement=\"_hgYrALGGEeCKGfGcPtVqvA\">\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_w1TtkCg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" documentation=\"\" inputAction=\"_hgYq_bGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_zu3UoCg7EeGtYfh4PZkfcA\" port=\"_hgYrCLGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYq-7GGEeCKGfGcPtVqvA\" name=\"Loop26\" firstStatement=\"_hgYq_bGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrBLGGEeCKGfGcPtVqvA\" previous=\"_hgYrALGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYq_bGGEeCKGfGcPtVqvA\" name=\"Cond28\" documentation=\"\" isFirstOf=\"_hgYq-7GGEeCKGfGcPtVqvA\" next=\"_hgYrBLGGEeCKGfGcPtVqvA\" inputSelector=\"_w1TtkCg7EeGtYfh4PZkfcA\" timeout=\" ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrALGGEeCKGfGcPtVqvA\" name=\"RcvWACKInit\" documentation=\"\" isFirstOf=\"_hgYq9LGGEeCKGfGcPtVqvA\" next=\"_hgYq-7GGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"10 Cycle\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrBLGGEeCKGfGcPtVqvA\" name=\"RcvWACKProcess\" isLastOf=\"_hgYq-7GGEeCKGfGcPtVqvA\" previous=\"_hgYq_bGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;startTime = BRESPin.startTime;&#xD;&#x9;burstLength = BRESPin.burstLength;&#xD;&#x9;WriteLatency = ( float ) (  cf_time_stamp().to_scalar(CF_NS) - startTime );&#xD;&#x9;cf_trace_gui_f_t(&quot;WriteLatency&quot;, WriteLatency, &quot;ns&quot;);&#xD;&#x9;NbTotalWriteRequests++;&#xD;&#x9;TotalWriteLatency = TotalWriteLatency + WriteLatency;&#xD;&#x9;WriteBandwidth = (burstLength * AXIDataTransferSize) * 1000 / WriteLatency;&#xD;&#x9;cf_trace_gui_f_t(&quot;WriteBandwidth&quot;, WriteBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;cf_trace_gui_f_t(&quot;CombinedBandwidth&quot;, WriteBandwidth, &quot;Mb/s&quot;);&#xD;&#x9;TotalWriteData = TotalWriteData + burstLength * AXIDataTransferSize;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&quot;WriteLatency = %f us, starttime %f currenttime %f ID %i&quot;,WriteLatency, startTime, cf_time_stamp().to_scalar(CF_NS),cf_get_current_function_index());&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n              </refinement>\n            </models>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_hgYrFLGGEeCKGfGcPtVqvA\" name=\"WRDmux\" constructor=\"\" destination=\" &#x9; int sourceID;&#xA; &#x9; sourceID = ((cft_defbrespchn*)_trans)->get_data().ID;&#xA; &#x9; std::stringstream ss;&#xA; &#x9; ss &lt;&lt; &quot;BRESPin[&quot; &lt;&lt; sourceID &lt;&lt; &quot;]&quot;;&#xA; &#x9; return ss.str();&#xA; &#x9; return &quot;&quot;;\" concurrency=\"1\" routingTime=\"1 Cycle\">\n          <ports xmi:id=\"_hgYrFbGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgYrNrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrFrGGEeCKGfGcPtVqvA\" name=\"BRESPin\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgYrIrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n        </models>\n        <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_hgYrG7GGEeCKGfGcPtVqvA\" name=\"RDDmux\" documentation=\"\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" destination=\"&#x9;int sourceID;&#xD;&#x9;sourceID = ((cft_defrdatachn*)_trans)->get_data().ID;&#xD;&#xD;&#x9;std::stringstream ss;&#xD;&#x9;ss &lt;&lt; &quot;RDATAin[&quot; &lt;&lt; sourceID &lt;&lt; &quot;]&quot;;&#xD;&#x9;return ss.str();\" concurrency=\"1\" routingTime=\"1 Cycle\">\n          <ports xmi:id=\"_hgYrHLGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgYrNLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgYrHbGGEeCKGfGcPtVqvA\" name=\"RDATAin\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgYrK7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgYrIrGGEeCKGfGcPtVqvA\" name=\"BRESPin\" ports=\"_hgYrFrGGEeCKGfGcPtVqvA _hgYrDbGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n          <max xmi:id=\"_hgYrI7GGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lbGGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgYrJLGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_112mAEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5fLGGEeCKGfGcPtVqvA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgYrK7GGEeCKGfGcPtVqvA\" name=\"RDATAin\" ports=\"_hgYrHbGGEeCKGfGcPtVqvA _hgYrDLGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n          <max xmi:id=\"_hgYrLLGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lbGGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgYrLbGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1rE5YEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5eLGGEeCKGfGcPtVqvA\"/>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrO7GGEeCKGfGcPtVqvA\" name=\"Target\" documentation=\"\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_hgZ5TrGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5cbGGEeCKGfGcPtVqvA\" ports=\"_hgZS57GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgZ5T7GGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5arGGEeCKGfGcPtVqvA\" ports=\"_hgZS6LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgZ5ULGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5Y7GGEeCKGfGcPtVqvA\" ports=\"_hgZS6bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgZ5UbGGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5XLGGEeCKGfGcPtVqvA\" ports=\"_hgZS6rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_hgZ5UrGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5VbGGEeCKGfGcPtVqvA\" ports=\"_hgZS67GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYrPLGGEeCKGfGcPtVqvA\" name=\"TargetStrucSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrPbGGEeCKGfGcPtVqvA\" name=\"MemoryController\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_hgZS5rGGEeCKGfGcPtVqvA\" name=\"DQs\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5PLGGEeCKGfGcPtVqvA\" ports=\"_hgZSobGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS57GGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgZ5TrGGEeCKGfGcPtVqvA\" ports=\"_hgYr6LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS6LGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZ5T7GGEeCKGfGcPtVqvA\" ports=\"_hgYrUbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS6bGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgZ5ULGGEeCKGfGcPtVqvA\" ports=\"_hgYr6bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS6rGGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZ5UbGGEeCKGfGcPtVqvA\" ports=\"_hgYrSbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS67GGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZ5UrGGEeCKGfGcPtVqvA\" ports=\"_hgYrQbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZS7LGGEeCKGfGcPtVqvA\" name=\"DDRCommand\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5RbGGEeCKGfGcPtVqvA\" ports=\"_hgZSp7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYrPrGGEeCKGfGcPtVqvA\" name=\"MemoryControllerStrucSt\">\n            <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_hgYrP7GGEeCKGfGcPtVqvA\" name=\"WAddrDmux\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int Port_ID;\" definitions=\"\" preElaboration=\"\" initializations=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" destination=\"&#x9;int sourceID;&#xD;&#x9;sourceID = ((cft_defawaddrchn*)_trans)->get_data().ID;&#xD;&#x9;&#xD;&#x9;std::stringstream ss;&#xD;&#x9;ss &lt;&lt; &quot;AWADDRin[&quot;&lt;&lt; sourceID &lt;&lt; &quot;]&quot;;&#x9;cout &lt;&lt; ss.str();&#xD;&#x9;return ss.str();&#xD;\" concurrency=\"1\" routingTime=\"0 Cycle\">\n              <ports xmi:id=\"_hgYrQLGGEeCKGfGcPtVqvA\" name=\"AWADDRin\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZSqrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYrQbGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZS67GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n            </models>\n            <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_hgYrR7GGEeCKGfGcPtVqvA\" name=\"WdataDmux\" declarations=\"int Port_ID;\" definitions=\"\" destination=\"&#x9;int sourceID;&#xA;&#x9;sourceID = ((cft_defwdatachn*)_trans)->get_data().ID;&#xA;&#x9;std::stringstream ss;&#xA;&#x9;ss &lt;&lt; &quot;WDATAin[&quot; &lt;&lt; sourceID &lt;&lt; &quot;]&quot;;&#xA;&#x9;return ss.str();\" concurrency=\"1\" routingTime=\"0 Cycle\">\n              <ports xmi:id=\"_hgYrSLGGEeCKGfGcPtVqvA\" name=\"WDATAin\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZSs7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYrSbGGEeCKGfGcPtVqvA\" name=\"WDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZS6rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n            </models>\n            <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_hgYrT7GGEeCKGfGcPtVqvA\" name=\"RAddrDmux\" constructor=\"\" destructor=\"\" declarations=\"int Port_ID;\" definitions=\"\" initializations=\"\" destination=\"&#x9;int sourceID;&#xA;&#x9;sourceID = ((cft_defaraddrchn*)_trans)->get_data().ID;&#xA;&#x9;std::stringstream ss;&#xA;&#x9;ss &lt;&lt; &quot;ARADDRin[&quot; &lt;&lt; sourceID &lt;&lt; &quot;]&quot;;&#xA;&#x9;return ss.str();\" concurrency=\"1\" routingTime=\"0 Cycle\">\n              <ports xmi:id=\"_hgYrULGGEeCKGfGcPtVqvA\" name=\"ARADDRin\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZSvLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYrUbGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZS6LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrV7GGEeCKGfGcPtVqvA\" name=\"FrontEnd\" declarations=\"\" preElaboration=\"\" cyclePeriod=\"10 ns\">\n              <max xmi:id=\"_hgYrWLGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgYrWbGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <ports xmi:id=\"_hgYr5rGGEeCKGfGcPtVqvA\" name=\"DataRead\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZS3LGGEeCKGfGcPtVqvA\" ports=\"_hgYr4rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYr57GGEeCKGfGcPtVqvA\" name=\"WriteAck\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZSzLGGEeCKGfGcPtVqvA\" ports=\"_hgYrwLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYr6LGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgZS57GGEeCKGfGcPtVqvA\" ports=\"_hgYr4bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgYr6bGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgZS6bGGEeCKGfGcPtVqvA\" ports=\"_hgYrwbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZR0LGGEeCKGfGcPtVqvA\" name=\"MemReadRequest\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZS1bGGEeCKGfGcPtVqvA\" ports=\"_hgYrpLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZR0bGGEeCKGfGcPtVqvA\" name=\"MemWriteRequest\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZSxbGGEeCKGfGcPtVqvA\" ports=\"_hgYrgbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZR0rGGEeCKGfGcPtVqvA\" name=\"ARADDRin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZSvLGGEeCKGfGcPtVqvA\" ports=\"_hgYrpbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZR07GGEeCKGfGcPtVqvA\" name=\"WDATAin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZSs7GGEeCKGfGcPtVqvA\" ports=\"_hgYrgrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZR1LGGEeCKGfGcPtVqvA\" name=\"AWADDRin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZSqrGGEeCKGfGcPtVqvA\" ports=\"_hgYrg7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgYrWrGGEeCKGfGcPtVqvA\" name=\"FrontEndStrucSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrW7GGEeCKGfGcPtVqvA\" name=\"WriteDriver\" declarations=\"int burstLength;&#xD;&#x9;float startTime;&#xD;&#x9;int address;&#xD;&#x9;int ID;&#xD;&#x9;int size;&#xD;&#x9;long WriteInitDuration;&#xD;&#x9;int myIndex;&#xD;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgYrgbGGEeCKGfGcPtVqvA\" name=\"MemWriteRequest\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYrf7GGEeCKGfGcPtVqvA\" port=\"_hgZR0bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgYrgrGGEeCKGfGcPtVqvA\" name=\"WDATAin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_5K-_ECg7EeGtYfh4PZkfcA\" port=\"_hgZR07GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgYrg7GGEeCKGfGcPtVqvA\" name=\"AWADDRin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_4owbwCg7EeGtYfh4PZkfcA\" port=\"_hgZR1LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYrXLGGEeCKGfGcPtVqvA\" name=\"WriteDriverBehaviorBh\" firstStatement=\"_hgYrabGGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_3z2NACg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" inputAction=\"_hgYrb7GGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_4owbwCg7EeGtYfh4PZkfcA\" port=\"_hgYrg7GGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_3-U-sCg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector2\" inputAction=\"_hgYreLGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_5K-_ECg7EeGtYfh4PZkfcA\" port=\"_hgYrgrGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrabGGEeCKGfGcPtVqvA\" name=\"WdInit\" isFirstOf=\"_hgYrXLGGEeCKGfGcPtVqvA\" next=\"_hgYrbbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();&#xD;&#x9;WriteInitDuration = 1;&#xD;&#x9;if (myIndex > P_Nbr)&#xD;&#x9;&#x9;WriteInitDuration = 1000000;\" executionTime=\"WriteInitDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYrbbGGEeCKGfGcPtVqvA\" name=\"Loop4\" firstStatement=\"_hgYrb7GGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrdrGGEeCKGfGcPtVqvA\" previous=\"_hgYrabGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYrb7GGEeCKGfGcPtVqvA\" name=\"Cond2\" isFirstOf=\"_hgYrbbGGEeCKGfGcPtVqvA\" next=\"_hgYrcrGGEeCKGfGcPtVqvA\" inputSelector=\"_3z2NACg7EeGtYfh4PZkfcA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrcrGGEeCKGfGcPtVqvA\" name=\"WdAddr\" previous=\"_hgYrb7GGEeCKGfGcPtVqvA\" next=\"_hgYreLGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;burstLength = AWADDRin.burstLength;&#xD;&#x9;startTime = AWADDRin.startTime;&#xD;&#x9;address = AWADDRin.address;&#xD;&#x9;ID = AWADDRin.ID;&#xD;&#x9;size = AWADDRin.size;&#xD;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&quot;WriteDriver ADDR: address = %i, ID = %i, Instance = %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;address, ID, myIndex);&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYrdrGGEeCKGfGcPtVqvA\" name=\"Loop5\" isLastOf=\"_hgYrbbGGEeCKGfGcPtVqvA\" firstStatement=\"_hgYre7GGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrf7GGEeCKGfGcPtVqvA\" previous=\"_hgYreLGGEeCKGfGcPtVqvA\" condition=\"burstLength\" type=\"MULTIPLICATION\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYreLGGEeCKGfGcPtVqvA\" name=\"Cond3\" previous=\"_hgYrcrGGEeCKGfGcPtVqvA\" next=\"_hgYrdrGGEeCKGfGcPtVqvA\" inputSelector=\"_3-U-sCg7EeGtYfh4PZkfcA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYre7GGEeCKGfGcPtVqvA\" name=\"WdData\" isFirstOf=\"_hgYrdrGGEeCKGfGcPtVqvA\" next=\"_hgYrf7GGEeCKGfGcPtVqvA\" algorithm=\"&#x9;MemWriteRequest.startTime = startTime;&#xD;&#x9;MemWriteRequest.ID = ID;&#xD;&#x9;MemWriteRequest.address = address;&#xD;&#x9;MemWriteRequest.burstLength = burstLength;&#xD;&#x9;MemWriteRequest.size = size;&#xD;&#x9;MemWriteRequest.dataValue = WDATAin.dataValue;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&quot;WriteDriver DATA: address = %i, ID = %i&quot;, address, ID);&#xD;&#x9;}&#xD;&#x9;address++;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYrf7GGEeCKGfGcPtVqvA\" name=\"Action3\" isLastOf=\"_hgYrdrGGEeCKGfGcPtVqvA\" previous=\"_hgYre7GGEeCKGfGcPtVqvA\" port=\"_hgYrgbGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrh7GGEeCKGfGcPtVqvA\" name=\"ReadDriver\" constructor=\"\" destructor=\"\" declarations=\"int burstLength;&#xD;&#x9;float startTime;&#xD;&#x9;int address;&#xD;&#x9;int ID;&#xD;&#x9;int size;&#xD;&#x9;bool First;&#xD;&#x9;long RdInitDuration;&#xD;&#x9;int myIndex;\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgYrpLGGEeCKGfGcPtVqvA\" name=\"MemReadRequest\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYrnLGGEeCKGfGcPtVqvA\" port=\"_hgZR0LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgYrpbGGEeCKGfGcPtVqvA\" name=\"ARADDRin\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_53AXkCg7EeGtYfh4PZkfcA\" port=\"_hgZR0rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYriLGGEeCKGfGcPtVqvA\" name=\"ReadDriverBehaviorBh\" firstStatement=\"_hgYrj7GGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_4HF5ICg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" inputAction=\"_hgYrlbGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_53AXkCg7EeGtYfh4PZkfcA\" port=\"_hgYrpbGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrj7GGEeCKGfGcPtVqvA\" name=\"RdInit\" isFirstOf=\"_hgYriLGGEeCKGfGcPtVqvA\" next=\"_hgYrk7GGEeCKGfGcPtVqvA\" algorithm=\"&#x9;First = true;&#xD;&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();&#xD;&#x9;RdInitDuration = 1;&#xD;&#x9;if (myIndex > P_Nbr)&#xD;&#x9;&#x9;RdInitDuration = 1000000;\" executionTime=\"RdInitDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYrk7GGEeCKGfGcPtVqvA\" name=\"Loop7\" firstStatement=\"_hgYrlbGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrnrGGEeCKGfGcPtVqvA\" previous=\"_hgYrj7GGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYrlbGGEeCKGfGcPtVqvA\" name=\"Cond5\" isFirstOf=\"_hgYrk7GGEeCKGfGcPtVqvA\" next=\"_hgYrmLGGEeCKGfGcPtVqvA\" inputSelector=\"_4HF5ICg7EeGtYfh4PZkfcA\" timeout=\" ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrmLGGEeCKGfGcPtVqvA\" name=\"RdAddr\" previous=\"_hgYrlbGGEeCKGfGcPtVqvA\" next=\"_hgYrnrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;burstLength = ARADDRin.burstLength;&#xD;&#x9;startTime = ARADDRin.startTime;&#xD;&#x9;address = ARADDRin.address;&#xD;&#x9;ID = ARADDRin.ID;&#xD;&#x9;size = ARADDRin.size;&#xD;&#x9;First = true;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYrnLGGEeCKGfGcPtVqvA\" name=\"Action6\" isLastOf=\"_hgYrnrGGEeCKGfGcPtVqvA\" previous=\"_hgYroLGGEeCKGfGcPtVqvA\" port=\"_hgYrpLGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYrnrGGEeCKGfGcPtVqvA\" name=\"Loop25\" isLastOf=\"_hgYrk7GGEeCKGfGcPtVqvA\" firstStatement=\"_hgYroLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrnLGGEeCKGfGcPtVqvA\" previous=\"_hgYrmLGGEeCKGfGcPtVqvA\" condition=\"burstLength\" type=\"MULTIPLICATION\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYroLGGEeCKGfGcPtVqvA\" name=\"UpdAddress\" isFirstOf=\"_hgYrnrGGEeCKGfGcPtVqvA\" next=\"_hgYrnLGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;MemReadRequest.startTime = startTime;&#xD;&#x9;MemReadRequest.burstLength = burstLength;&#xD;&#x9;MemReadRequest.ID = ID;&#xD;&#x9;MemReadRequest.address = address;&#xD;&#x9;MemReadRequest.size = size;&#xA;&#xD;&#x9;if (First == true) {&#xD;&#x9;&#x9;First = false;&#xD;&#x9;&#x9;address = address + size / (EffectiveMemoryWidth);&#xD;&#x9;} else {&#xD;&#x9;&#x9;address = address + size / (EffectiveMemoryWidth);&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrqbGGEeCKGfGcPtVqvA\" name=\"SendWAckDriver\" declarations=\"long WACKInitDuration;&#xD;&#xA;int myIndex;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgYrwLGGEeCKGfGcPtVqvA\" name=\"WriteAck\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_8oyisCg7EeGtYfh4PZkfcA\" port=\"_hgYr57GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgYrwbGGEeCKGfGcPtVqvA\" name=\"BRESPchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYrvrGGEeCKGfGcPtVqvA\" port=\"_hgYr6bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYrqrGGEeCKGfGcPtVqvA\" name=\"SendWAckBehaviorBh\" firstStatement=\"_hgYrsbGGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_7fAQICg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" inputAction=\"_hgYrt7GGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_8oyisCg7EeGtYfh4PZkfcA\" port=\"_hgYrwLGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrsbGGEeCKGfGcPtVqvA\" name=\"SendWAckInit\" isFirstOf=\"_hgYrqrGGEeCKGfGcPtVqvA\" next=\"_hgYrtbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();&#xD;&#x9;WACKInitDuration = 1;&#xD;&#x9;if (myIndex > P_Nbr)&#xD;&#x9;&#x9;WACKInitDuration = 1000000;\" executionTime=\"WACKInitDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYrtbGGEeCKGfGcPtVqvA\" name=\"Loop10\" firstStatement=\"_hgYrt7GGEeCKGfGcPtVqvA\" lastStatement=\"_hgYrvrGGEeCKGfGcPtVqvA\" previous=\"_hgYrsbGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYrt7GGEeCKGfGcPtVqvA\" name=\"Cond8\" isFirstOf=\"_hgYrtbGGEeCKGfGcPtVqvA\" next=\"_hgYrurGGEeCKGfGcPtVqvA\" inputSelector=\"_7fAQICg7EeGtYfh4PZkfcA\" timeout=\" ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrurGGEeCKGfGcPtVqvA\" name=\"PrepareWAck\" previous=\"_hgYrt7GGEeCKGfGcPtVqvA\" next=\"_hgYrvrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;BRESPchn = WriteAck;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYrvrGGEeCKGfGcPtVqvA\" name=\"Action10\" isLastOf=\"_hgYrtbGGEeCKGfGcPtVqvA\" previous=\"_hgYrurGGEeCKGfGcPtVqvA\" port=\"_hgYrwbGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgYrxbGGEeCKGfGcPtVqvA\" name=\"ReadDataDriver\" declarations=\"float startTime;&#xD;&#x9;int ID;&#xD;&#x9;int burstLength;&#xD;&#x9;long ReadDataInitDuration;&#xD;&#x9;int myIndex;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgYr4bGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgYr3LGGEeCKGfGcPtVqvA\" port=\"_hgYr6LGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgYr4rGGEeCKGfGcPtVqvA\" name=\"DataRead\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_9LBtECg7EeGtYfh4PZkfcA\" port=\"_hgYr5rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgYrxrGGEeCKGfGcPtVqvA\" name=\"ReadDataDriverBehaviorBh\" firstStatement=\"_hgYrzbGGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_72RgoCg7EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" inputAction=\"_hgYr07GGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_9LBtECg7EeGtYfh4PZkfcA\" port=\"_hgYr4rGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYrzbGGEeCKGfGcPtVqvA\" name=\"ReadDataInit\" isFirstOf=\"_hgYrxrGGEeCKGfGcPtVqvA\" next=\"_hgYr0bGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;myIndex = cf_get_innermost_mi_container()->get_cp_index();&#xD;&#x9;ReadDataInitDuration = 1;&#xD;&#x9;if (myIndex > P_Nbr)&#xD;&#x9;&#x9;ReadDataInitDuration = 1000000;\" executionTime=\"ReadDataInitDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYr0bGGEeCKGfGcPtVqvA\" name=\"Loop19\" firstStatement=\"_hgYr07GGEeCKGfGcPtVqvA\" lastStatement=\"_hgYr1rGGEeCKGfGcPtVqvA\" previous=\"_hgYrzbGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgYr07GGEeCKGfGcPtVqvA\" name=\"Cond15\" isFirstOf=\"_hgYr0bGGEeCKGfGcPtVqvA\" next=\"_hgYr3rGGEeCKGfGcPtVqvA\" inputSelector=\"_72RgoCg7EeGtYfh4PZkfcA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgYr1rGGEeCKGfGcPtVqvA\" name=\"Loop20\" isLastOf=\"_hgYr0bGGEeCKGfGcPtVqvA\" firstStatement=\"_hgYr2LGGEeCKGfGcPtVqvA\" lastStatement=\"_hgYr3LGGEeCKGfGcPtVqvA\" previous=\"_hgYr3rGGEeCKGfGcPtVqvA\" condition=\"1\" type=\"MULTIPLICATION\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYr2LGGEeCKGfGcPtVqvA\" name=\"PrepareDataTransfer\" isFirstOf=\"_hgYr1rGGEeCKGfGcPtVqvA\" next=\"_hgYr3LGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;RDATAchn.dataSize = DataRead.dataSize;&#xD;&#x9;RDATAchn.startTime = DataRead.startTime;&#xD;&#x9;RDATAchn.ID = DataRead.ID;&#xD;&#x9;RDATAchn.burstLength = DataRead.burstLength;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&quot;ReadDataDriver fwed = burstlength %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;DataRead.burstLength, DataRead.ID);&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgYr3LGGEeCKGfGcPtVqvA\" name=\"Action20\" isLastOf=\"_hgYr1rGGEeCKGfGcPtVqvA\" previous=\"_hgYr2LGGEeCKGfGcPtVqvA\" port=\"_hgYr4bGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgYr3rGGEeCKGfGcPtVqvA\" name=\"RcvReadData\" previous=\"_hgYr07GGEeCKGfGcPtVqvA\" next=\"_hgYr1rGGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZR17GGEeCKGfGcPtVqvA\" name=\"BackEnd\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_hgZSobGGEeCKGfGcPtVqvA\" name=\"DQs\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_hgZS5rGGEeCKGfGcPtVqvA\" ports=\"_hgZSGrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZSorGGEeCKGfGcPtVqvA\" name=\"DataRead\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZS3LGGEeCKGfGcPtVqvA\" ports=\"_hgZSHLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZSo7GGEeCKGfGcPtVqvA\" name=\"WriteAck\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZSzLGGEeCKGfGcPtVqvA\" ports=\"_hgZSHbGGEeCKGfGcPtVqvA _hgZSSLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZSpLGGEeCKGfGcPtVqvA\" name=\"MemReadRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZS1bGGEeCKGfGcPtVqvA\" ports=\"_hgZR9bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZSpbGGEeCKGfGcPtVqvA\" name=\"MemWriteRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZSxbGGEeCKGfGcPtVqvA\" ports=\"_hgZR9rGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZSp7GGEeCKGfGcPtVqvA\" name=\"DDRCommand\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_hgZS7LGGEeCKGfGcPtVqvA\" ports=\"_hgZSerGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgZR2LGGEeCKGfGcPtVqvA\" name=\"BackEndStrucSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZR2bGGEeCKGfGcPtVqvA\" name=\"CollectRequests\" declarations=\"DefListRequestsPtr currentRequestPtr;&#xD;&#xA;DefListRequestsPtr prevRequestPtr;&#xD;&#xA;int memID;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgZR87GGEeCKGfGcPtVqvA\" name=\"ListRequestsPtr\" type=\"SHARED_VARIABLE\" direction=\"IN_OUT\" relations=\"_hgZShLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZR9LGGEeCKGfGcPtVqvA\" name=\"RequestCounter\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_hgZR4LGGEeCKGfGcPtVqvA\" relations=\"_hgZSf7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZR9bGGEeCKGfGcPtVqvA\" name=\"MemReadRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_hgZR6LGGEeCKGfGcPtVqvA\" port=\"_hgZSpLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZR9rGGEeCKGfGcPtVqvA\" name=\"MemWriteRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_hgZR3bGGEeCKGfGcPtVqvA\" port=\"_hgZSpbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZR2rGGEeCKGfGcPtVqvA\" name=\"CollectRequestsBehaviorBh\" firstStatement=\"_hgZR4bGGEeCKGfGcPtVqvA\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZR27GGEeCKGfGcPtVqvA\" name=\"Loop21\" firstStatement=\"_hgZR5bGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZR4LGGEeCKGfGcPtVqvA\" previous=\"_hgZR4bGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZR3bGGEeCKGfGcPtVqvA\" name=\"Cond16\" isFirstOf=\"_hgZR57GGEeCKGfGcPtVqvA\" next=\"_hgZR77GGEeCKGfGcPtVqvA\" port=\"_hgZR9rGGEeCKGfGcPtVqvA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZR4LGGEeCKGfGcPtVqvA\" name=\"Action21\" isLastOf=\"_hgZR27GGEeCKGfGcPtVqvA\" previous=\"_hgZR5bGGEeCKGfGcPtVqvA\" port=\"_hgZR9LGGEeCKGfGcPtVqvA\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZR4bGGEeCKGfGcPtVqvA\" name=\"CollectInit\" isFirstOf=\"_hgZR2rGGEeCKGfGcPtVqvA\" next=\"_hgZR27GGEeCKGfGcPtVqvA\" algorithm=\"&#x9;ListRequestsPtr = &amp;FirstEmptyRequest;&#xD;&#x9;ListRequestsPtr->prevRequestPtr = NULL;&#xD;&#x9;ListRequestsPtr->nextRequestPtr = NULL;\" executionTime=\"10 ns\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:MultipleGuardedStatement\" xmi:id=\"_hgZR5bGGEeCKGfGcPtVqvA\" name=\"MultipleWait\" isFirstOf=\"_hgZR27GGEeCKGfGcPtVqvA\" next=\"_hgZR4LGGEeCKGfGcPtVqvA\">\n                      <guardedBranches xmi:id=\"_hgZR5rGGEeCKGfGcPtVqvA\" firstStatement=\"_hgZR6LGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZR67GGEeCKGfGcPtVqvA\"/>\n                      <guardedBranches xmi:id=\"_hgZR57GGEeCKGfGcPtVqvA\" firstStatement=\"_hgZR3bGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZR77GGEeCKGfGcPtVqvA\"/>\n                    </statements>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZR6LGGEeCKGfGcPtVqvA\" name=\"Cond17\" isFirstOf=\"_hgZR5rGGEeCKGfGcPtVqvA\" next=\"_hgZR67GGEeCKGfGcPtVqvA\" port=\"_hgZR9bGGEeCKGfGcPtVqvA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZR67GGEeCKGfGcPtVqvA\" name=\"StoreReadRequest\" isLastOf=\"_hgZR5rGGEeCKGfGcPtVqvA\" previous=\"_hgZR6LGGEeCKGfGcPtVqvA\" algorithm=\"&#xA;if (ListRequestsPtr->nextRequestPtr == NULL) {&#xD;&#x9;&#x9;currentRequestPtr = (DefListRequests*) malloc(sizeof(DefListRequests));&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memCmd = READREQ;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataSize = MemReadRequest.dataSize;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.startTime = MemReadRequest.startTime;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.ID = MemReadRequest.ID;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memID = MemReadRequest.address&#xD;&#x9;&#x9;&#x9;&#x9;/ MEMORYSIZE + 1;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.address = (MemReadRequest.address)&#xD;&#x9;&#x9;&#x9;&#x9;% MEMORYSIZE;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.size = MemReadRequest.size;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue = 0;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength =&#xD;&#x9;&#x9;&#x9;&#x9;MemReadRequest.burstLength;&#xD;&#x9;&#x9;currentRequestPtr->nextRequestPtr = NULL;&#xD;&#x9;&#x9;currentRequestPtr->prevRequestPtr = ListRequestsPtr;&#xD;&#x9;&#x9;memID = MemReadRequest.address / MEMORYSIZE + 1;&#xD;&#x9;&#x9;ListRequestsPtr->nextRequestPtr = currentRequestPtr;&#xD;&#x9;} else {&#xD;&#x9;&#x9;currentRequestPtr = ListRequestsPtr->nextRequestPtr;&#xD;&#x9;&#x9;do {&#xD;&#x9;&#x9;&#x9;prevRequestPtr = currentRequestPtr;&#xD;&#x9;&#x9;&#x9;currentRequestPtr = currentRequestPtr->nextRequestPtr;&#xD;&#x9;&#x9;} while (currentRequestPtr != NULL);&#xD;&#x9;&#x9;currentRequestPtr = (DefListRequests*) malloc(sizeof(DefListRequests));&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataSize = MemReadRequest.dataSize;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.startTime = MemReadRequest.startTime;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memCmd = READREQ;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.ID = MemReadRequest.ID;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memID = MemReadRequest.address&#xD;&#x9;&#x9;&#x9;&#x9;/ MEMORYSIZE + 1;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.address = (MemReadRequest.address)&#xD;&#x9;&#x9;&#x9;&#x9;% MEMORYSIZE;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.size = MemReadRequest.size;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength =&#xD;&#x9;&#x9;&#x9;&#x9;MemReadRequest.burstLength;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue = 0;&#xD;&#x9;&#x9;currentRequestPtr->nextRequestPtr = NULL;&#xD;&#x9;&#x9;currentRequestPtr->prevRequestPtr = prevRequestPtr;&#xD;&#x9;&#x9;prevRequestPtr->nextRequestPtr = currentRequestPtr;&#xD;&#x9;&#x9;memID = MemReadRequest.address / MEMORYSIZE + 1;&#xD;&#x9;}&#xD;&#x9;NbReadRequests = NbReadRequests + 1;&#xD;&#x9;cf_trace_gui_f_t(&quot;NbReadRequests&quot;, NbReadRequests, &quot;requests&quot;);&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&quot;Request stored read = address %i datavalue %i size %i burstlength %i ID %i address request %x previous %x starttime %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.ID, currentRequestPtr,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->prevRequestPtr, MemReadRequest.startTime);&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZR77GGEeCKGfGcPtVqvA\" name=\"StoreWriteRequest\" isLastOf=\"_hgZR57GGEeCKGfGcPtVqvA\" previous=\"_hgZR3bGGEeCKGfGcPtVqvA\" algorithm=\"if (ListRequestsPtr->nextRequestPtr == NULL) {&#xD;&#x9;&#x9;currentRequestPtr = (DefListRequests*) malloc(sizeof(DefListRequests));&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataSize = MemWriteRequest.dataSize;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.startTime = MemWriteRequest.startTime;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memCmd = WRITEREQ;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.ID = MemWriteRequest.ID;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memID = MemWriteRequest.address&#xD;&#x9;&#x9;&#x9;&#x9;/ MEMORYSIZE + 1;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.address = (MemWriteRequest.address)&#xD;&#x9;&#x9;&#x9;&#x9;% MEMORYSIZE;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.size = MemWriteRequest.size;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue = MemWriteRequest.dataValue;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength =&#xD;&#x9;&#x9;&#x9;&#x9;MemWriteRequest.burstLength;&#xD;&#x9;&#x9;currentRequestPtr->nextRequestPtr = NULL;&#xD;&#x9;&#x9;currentRequestPtr->prevRequestPtr = ListRequestsPtr;&#xD;&#x9;&#x9;ListRequestsPtr->nextRequestPtr = currentRequestPtr;&#xD;&#x9;} else {&#xD;&#x9;&#x9;currentRequestPtr = ListRequestsPtr->nextRequestPtr;&#xD;&#x9;&#x9;do {&#xD;&#x9;&#x9;&#x9;prevRequestPtr = currentRequestPtr;&#xD;&#x9;&#x9;&#x9;currentRequestPtr = currentRequestPtr->nextRequestPtr;&#xD;&#x9;&#x9;} while (currentRequestPtr != NULL);&#xD;&#x9;&#x9;currentRequestPtr = (DefListRequests*) malloc(sizeof(DefListRequests));&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataSize = MemWriteRequest.dataSize;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.startTime = MemWriteRequest.startTime;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memCmd = WRITEREQ;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.ID = MemWriteRequest.ID;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.memID = MemWriteRequest.address&#xD;&#x9;&#x9;&#x9;&#x9;/ MEMORYSIZE + 1;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.address = (MemWriteRequest.address)&#xD;&#x9;&#x9;&#x9;&#x9;% MEMORYSIZE;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.size = MemWriteRequest.size;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue = MemWriteRequest.dataValue;&#xD;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength =&#xD;&#x9;&#x9;&#x9;&#x9;MemWriteRequest.burstLength;&#xD;&#x9;&#x9;currentRequestPtr->nextRequestPtr = NULL;&#xD;&#x9;&#x9;currentRequestPtr->prevRequestPtr = prevRequestPtr;&#xD;&#x9;&#x9;prevRequestPtr->nextRequestPtr = currentRequestPtr;&#xD;&#x9;}&#xD;&#x9;NbWriteRequests = NbWriteRequests + 1;&#xD;&#x9;cf_trace_gui_f_t(&quot;NbWriteRequests&quot;, NbWriteRequests, &quot;requests&quot;);&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&quot;Request stored write = address %i datavalue %i size %i burstlength %i ID %i adresse requete %x previous %x&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.dataValue,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->memoryRequest.ID, currentRequestPtr,&#xD;&#x9;&#x9;&#x9;&#x9;currentRequestPtr->prevRequestPtr);&#xD;&#x9;}\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZR-rGGEeCKGfGcPtVqvA\" name=\"ResponseForward\" destructor=\"\" declarations=\"bool IS_WRITE_ACK;&#xD;&#xA;bool IS_DATA_READ;&#xD;&#xA;int NbDataTransfer;&#xD;&#xA;// delay expected before data is available on dq signals&#xD;&#xA;int DqReadyDuration;&#xD;&#xA;bool NORMAL_ACK;&#xD;&#xA;bool SEND_NORMAL_ACK;&#xD;&#xA;long PrepareResponseDuration;&#xD;&#xA;int BankAccessed;&#xD;&#xA;int RowAccessed;&#xD;&#xA;int ColumnAccessed;&#xD;&#xA;int NbMemRcvTransactions;&#xD;&#xA;// Table used to count the number data transfers already processed within a burst for each master and each command Write/Read&#xD;&#xA;int RemainingData[10][2];&#xD;&#xA;int ID;&#xD;&#xA;int Length;&#xD;&#xA;int Command;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgZSGrGGEeCKGfGcPtVqvA\" name=\"DQs\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_hgZSF7GGEeCKGfGcPtVqvA\" port=\"_hgZSobGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSG7GGEeCKGfGcPtVqvA\" name=\"RequestInformation\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_hgZSCLGGEeCKGfGcPtVqvA\" relations=\"_hgZSirGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSHLGGEeCKGfGcPtVqvA\" name=\"DataRead\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_hgZSALGGEeCKGfGcPtVqvA\" port=\"_hgZSorGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSHbGGEeCKGfGcPtVqvA\" name=\"WriteAck\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_hgZR_bGGEeCKGfGcPtVqvA\" port=\"_hgZSo7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZR-7GGEeCKGfGcPtVqvA\" name=\"ResponseForwardBehaviorBh\" firstStatement=\"_hgZSArGGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZR_LGGEeCKGfGcPtVqvA\" name=\"OutSel5\" instanceNumber=\"SELF\" outputAction=\"_hgZSD7GGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_hgZR_bGGEeCKGfGcPtVqvA\" port=\"_hgZSHbGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZR_7GGEeCKGfGcPtVqvA\" name=\"OutSel6\" instanceNumber=\"SELF\" outputAction=\"_hgZSErGGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_hgZSALGGEeCKGfGcPtVqvA\" port=\"_hgZSHLGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSArGGEeCKGfGcPtVqvA\" name=\"ResponseFwInit\" isFirstOf=\"_hgZR-7GGEeCKGfGcPtVqvA\" next=\"_hgZSBrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;NbDataTransfer = 0;&#xD;&#x9;/* by default, put 3 cycles before data ready*/&#xD;&#x9;DqReadyDuration = 3;&#xD;&#x9;if (WriteAckStrategy == NORMAL) {&#xD;&#x9;&#x9;NORMAL_ACK = true;&#xD;&#x9;} else {&#xD;&#x9;&#x9;NORMAL_ACK = false;&#xD;&#x9;}&#xD;&#x9;memset(*RemainingData, 0, sizeof(RemainingData));\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZSBrGGEeCKGfGcPtVqvA\" name=\"Loop23\" firstStatement=\"_hgZSCLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZSErGGEeCKGfGcPtVqvA\" previous=\"_hgZSArGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZSCLGGEeCKGfGcPtVqvA\" name=\"Cond18\" isFirstOf=\"_hgZSBrGGEeCKGfGcPtVqvA\" next=\"_hgZSC7GGEeCKGfGcPtVqvA\" port=\"_hgZSG7GGEeCKGfGcPtVqvA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSC7GGEeCKGfGcPtVqvA\" name=\"PrepareResponse\" previous=\"_hgZSCLGGEeCKGfGcPtVqvA\" next=\"_hgZSFbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;ID = RequestInformation.MemRequest.ID;&#xD;&#x9;Length = RequestInformation.MemRequest.burstLength;&#xD;&#x9;Command = RequestInformation.MemRequest.memCmd;&#xD;&#xD;&#x9;if (RemainingData[ID][Command] == 0) {&#xD;&#x9;&#x9;RemainingData[ID][Command] = Length;&#xD;&#x9;}&#xD;&#x9;NbDataTransfer = RemainingData[ID][Command];&#xD;&#xD;&#x9;if (NbDataTransfer == 1) {&#xD;&#x9;&#x9;if (Command == WRITEREQ) {&#xD;&#x9;&#x9;&#x9;IS_WRITE_ACK = true;&#xD;&#x9;&#x9;&#x9;IS_DATA_READ = false;&#xD;&#x9;&#x9;&#x9;WriteAck.startTime = RequestInformation.MemRequest.startTime;&#xD;&#x9;&#x9;&#x9;WriteAck.ID = ID;&#xD;&#x9;&#x9;&#x9;WriteAck.burstLength = Length;&#xD;&#x9;&#x9;&#x9;WriteAck.size = 1;&#xD;&#x9;&#x9;&#x9;WriteAck.address = RequestInformation.MemRequest.address;&#xD;&#x9;&#x9;&#x9;RemainingData[ID][Command]--;&#xD;&#x9;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Request Write fwed = address %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.ID);&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;} else {&#xD;&#x9;&#x9;&#x9;IS_WRITE_ACK = false;&#xD;&#x9;&#x9;&#x9;IS_DATA_READ = true;&#xD;&#x9;&#x9;&#x9;DataRead.startTime = RequestInformation.MemRequest.startTime;&#xD;&#x9;&#x9;&#x9;DataRead.ID = ID;&#xD;&#x9;&#x9;&#x9;DataRead.address = RequestInformation.MemRequest.address;&#xD;&#x9;&#x9;&#x9;DataRead.burstLength = Length;&#xD;&#x9;&#x9;&#x9;DataRead.size = RequestInformation.MemRequest.size;&#xD;&#x9;&#x9;&#x9;RemainingData[ID][Command]--;&#xD;&#x9;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Request Read fwed = address %i size %i burstlength %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.ID);&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;}&#xD;&#x9;} else {&#xD;&#x9;&#x9;if (Command == WRITEREQ) {&#xD;&#x9;&#x9;&#x9;IS_WRITE_ACK = false;&#xD;&#x9;&#x9;&#x9;IS_DATA_READ = false;&#xD;&#x9;&#x9;&#x9;RemainingData[ID][Command]--;&#xD;&#x9;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;Data Transfers Write Expected, Remaining %i &quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;NbDataTransfer);&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;} else {&#xD;&#x9;&#x9;&#x9;IS_WRITE_ACK = false;&#xD;&#x9;&#x9;&#x9;IS_DATA_READ = true;&#xD;&#x9;&#x9;&#x9;DataRead.startTime = RequestInformation.MemRequest.startTime;&#xD;&#x9;&#x9;&#x9;DataRead.ID = ID;&#xD;&#x9;&#x9;&#x9;DataRead.address = RequestInformation.MemRequest.address;&#xD;&#x9;&#x9;&#x9;DataRead.burstLength = Length;&#xD;&#x9;&#x9;&#x9;DataRead.size = RequestInformation.MemRequest.size;&#xD;&#x9;&#x9;&#x9;RemainingData[ID][Command]--;&#xD;&#x9;&#x9;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Request Read fwed = address %i size %i burstlength %i ID %i Remaining %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;RequestInformation.MemRequest.ID, NbDataTransfer);&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#x9;SEND_NORMAL_ACK = NORMAL_ACK &amp;&amp; IS_WRITE_ACK;&#xD;&#xD;&#x9;NbMemRcvTransactions = RequestInformation.NbMemTransactions;&#xD;&#x9;PrepareResponseDuration = 1;\" executionTime=\"DqReadyDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSD7GGEeCKGfGcPtVqvA\" name=\"Action23\" previous=\"_hgZSFbGGEeCKGfGcPtVqvA\" next=\"_hgZSErGGEeCKGfGcPtVqvA\" outputSelector=\"_hgZR_LGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"SEND_NORMAL_ACK\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSErGGEeCKGfGcPtVqvA\" name=\"Action24\" isLastOf=\"_hgZSBrGGEeCKGfGcPtVqvA\" previous=\"_hgZSD7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZR_7GGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"IS_DATA_READ\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZSFbGGEeCKGfGcPtVqvA\" name=\"Loop30\" firstStatement=\"_hgZSF7GGEeCKGfGcPtVqvA\" lastStatement=\"_hgZSF7GGEeCKGfGcPtVqvA\" previous=\"_hgZSC7GGEeCKGfGcPtVqvA\" next=\"_hgZSD7GGEeCKGfGcPtVqvA\" condition=\"NbMemRcvTransactions\" type=\"MULTIPLICATION\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZSF7GGEeCKGfGcPtVqvA\" name=\"Cond34\" isFirstOf=\"_hgZSFbGGEeCKGfGcPtVqvA\" isLastOf=\"_hgZSFbGGEeCKGfGcPtVqvA\" port=\"_hgZSGrGGEeCKGfGcPtVqvA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZSIbGGEeCKGfGcPtVqvA\" name=\"Arbitration\" declarations=\"DefListRequestsPtr SelectedRequestPtr;&#xD;&#xA;DefListRequestsPtr CurrentRequestPtr;&#xD;&#xA;DefListRequestsPtr NextRequestPtr;&#xD;&#xA;int memID;&#xD;&#xA;int RemainingRequests;&#xD;&#xA;int BurstID;&#xD;&#xA;int RequestID;&#xD;&#xA;bool RequestIDerror;&#xD;&#xA;int NbRequestsCk;&#xD;&#xA;DefMemCmd CMDRef;&#xD;&#xA;DefMemCmd CMDCurrent;&#xD;&#xA;int NbMemoryTransactions;&#xD;&#xA;bool SendFastAck;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgZSSLGGEeCKGfGcPtVqvA\" name=\"WriteAck\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_t_vKoLF4EeKpQpdJd9Uknw\" port=\"_hgZSo7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSSbGGEeCKGfGcPtVqvA\" name=\"RequestInformation\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgZSM7GGEeCKGfGcPtVqvA\" relations=\"_hgZSirGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSSrGGEeCKGfGcPtVqvA\" name=\"ListRequestsPtr\" type=\"SHARED_VARIABLE\" direction=\"IN_OUT\" relations=\"_hgZShLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSS7GGEeCKGfGcPtVqvA\" name=\"Requests2Memory\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hgZSNbGGEeCKGfGcPtVqvA\" relations=\"_hgZSkbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSTLGGEeCKGfGcPtVqvA\" name=\"RequestCounter\" type=\"EVENT\" direction=\"IN\" inputActions=\"_hgZSLLGGEeCKGfGcPtVqvA\" relations=\"_hgZSf7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZSIrGGEeCKGfGcPtVqvA\" name=\"ArbitrationBehaviorBh\" firstStatement=\"_hgZSJrGGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZSI7GGEeCKGfGcPtVqvA\" name=\"OutSel26\" instanceNumber=\"SELF\" outputAction=\"_hgZSRbGGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_t_vKoLF4EeKpQpdJd9Uknw\" name=\"OutputSelectorOutput\" port=\"_hgZSSLGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSJrGGEeCKGfGcPtVqvA\" name=\"ArbitrerInit\" isFirstOf=\"_hgZSIrGGEeCKGfGcPtVqvA\" next=\"_hgZSKrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;RemainingRequests = 0;&#xD;&#x9;RequestID = 0;&#xD;&#x9;BurstID = 0;&#xD;&#x9;SendFastAck = false;&#xD;&#x9;RequestIDerror = false;\" executionTime=\"10 ns\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZSKrGGEeCKGfGcPtVqvA\" name=\"Loop24\" firstStatement=\"_hgZSLLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZSRbGGEeCKGfGcPtVqvA\" previous=\"_hgZSJrGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZSLLGGEeCKGfGcPtVqvA\" name=\"Cond19\" isFirstOf=\"_hgZSKrGGEeCKGfGcPtVqvA\" next=\"_hgZSL7GGEeCKGfGcPtVqvA\" port=\"_hgZSTLGGEeCKGfGcPtVqvA\" timeout=\" ms\" duration=\" ns\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSL7GGEeCKGfGcPtVqvA\" name=\"ReadRequestList\" previous=\"_hgZSLLGGEeCKGfGcPtVqvA\" next=\"_hgZSN7GGEeCKGfGcPtVqvA\" algorithm=\"/* Up to now, just select the first pending request*/&#xD;&#x9;CurrentRequestPtr = ListRequestsPtr->nextRequestPtr;&#xD;\" executionTime=\"1 Cycle\" systematicRead=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSM7GGEeCKGfGcPtVqvA\" name=\"Action25\" previous=\"_hgZSN7GGEeCKGfGcPtVqvA\" next=\"_hgZSP7GGEeCKGfGcPtVqvA\" port=\"_hgZSSbGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSNbGGEeCKGfGcPtVqvA\" name=\"Action26\" isLastOf=\"_hgZSP7GGEeCKGfGcPtVqvA\" previous=\"_hgZSQbGGEeCKGfGcPtVqvA\" port=\"_hgZSS7GGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSN7GGEeCKGfGcPtVqvA\" name=\"SelectRequest\" previous=\"_hgZSL7GGEeCKGfGcPtVqvA\" next=\"_hgZSM7GGEeCKGfGcPtVqvA\" algorithm=\"&#x9;if (ArbitrationScheme == FIRSTREQUEST) {&#xD;&#x9;&#x9;SelectedRequestPtr = CurrentRequestPtr;&#xD;&#x9;} &#xA;&#x9;else if (ArbitrationScheme == FIRSTBURST) {&#xD;&#x9;&#x9;if (RemainingRequests == 0) {&#xD;&#x9;&#x9;&#x9;SelectedRequestPtr = CurrentRequestPtr;&#xD;&#x9;&#x9;&#x9;RemainingRequests = SelectedRequestPtr->memoryRequest.burstLength;&#xD;&#x9;&#x9;&#x9;CMDRef = SelectedRequestPtr->memoryRequest.memCmd;&#xD;&#x9;&#x9;&#x9;BurstID = SelectedRequestPtr->memoryRequest.ID;&#xD;&#x9;&#x9;&#x9;RemainingRequests--;&#xD;&#x9;&#x9;} &#xA;&#x9;&#x9;else {&#xD;&#x9;&#x9;&#x9;SelectedRequestPtr = CurrentRequestPtr;&#xD;&#x9;&#x9;&#x9;RequestID = SelectedRequestPtr->memoryRequest.ID;&#xD;&#x9;&#x9;&#x9;CMDCurrent = SelectedRequestPtr->memoryRequest.memCmd;&#xD;&#x9;&#x9;&#x9;NbRequestsCk = 0;&#xD;&#x9;&#x9;&#x9;while (((RequestID != BurstID) || (CMDCurrent != CMDRef))&amp;&amp; (RequestIDerror == false)) {&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr = SelectedRequestPtr->nextRequestPtr;&#xD;&#x9;&#x9;&#x9;&#x9;RequestID = SelectedRequestPtr->memoryRequest.ID;&#xD;&#x9;&#x9;&#x9;&#x9;CMDCurrent = SelectedRequestPtr->memoryRequest.memCmd;&#xD;&#x9;&#x9;&#x9;&#x9;NbRequestsCk++;&#xD;&#x9;&#x9;&#x9;&#x9;/*If after 20 tries, no request ID match, there s a problem in the algorithm*/&#xD;&#x9;&#x9;&#x9;&#x9;if (NbRequestsCk > 20) {&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;RequestIDerror = true;&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&quot;ERROR identifying pending requests&quot;);&#xD;&#x9;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;&#x9;RemainingRequests--;&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#xD;&#x9;NbMemoryTransactions = ((SelectedRequestPtr->memoryRequest.size - 1)/ (EffectiveMemoryWidth * BurstLengthMemory)) + 1;&#xD;&#x9;RequestInformation.MemRequest = SelectedRequestPtr->memoryRequest;&#xD;&#x9;RequestInformation.NbMemTransactions = NbMemoryTransactions;&#xD;&#x9;memID = SelectedRequestPtr->memoryRequest.memID;&#xD;&#x9;if (SelectedRequestPtr->memoryRequest.memCmd == WRITEREQ) {&#xD;&#x9;&#x9;NbWriteRequests = NbWriteRequests - 1;&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;NbWriteRequests&quot;, NbWriteRequests, &quot;requests&quot;);&#xD;&#x9;} &#xA;&#x9;else {&#xD;&#x9;&#x9;NbReadRequests = NbReadRequests - 1;&#xD;&#x9;&#x9;cf_trace_gui_f_t(&quot;NbReadRequests&quot;, NbReadRequests, &quot;requests&quot;);&#xD;&#x9;}&#xD;&#xD;&#x9;if ((WriteAckStrategy == FAST) &amp;&amp; (SelectedRequestPtr->memoryRequest.memCmd == WRITEREQ)) {&#xD;&#x9;&#x9;SendFastAck = true;&#xD;&#x9;&#x9;WriteAck.startTime = SelectedRequestPtr->memoryRequest.startTime;&#xD;&#x9;&#x9;WriteAck.ID = SelectedRequestPtr->memoryRequest.ID;&#xD;&#x9;&#x9;WriteAck.burstLength = SelectedRequestPtr->memoryRequest.burstLength;&#xD;&#x9;&#x9;WriteAck.size = 1;&#xD;&#x9;&#x9;WriteAck.address = SelectedRequestPtr->memoryRequest.address;&#xD;&#x9;} &#xA;&#x9;else {&#xD;&#x9;&#x9;SendFastAck = false;&#xD;&#x9;}&#xD;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&quot;Request Selected = address %i datavalue %i size %i burstlength %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;CurrentRequestPtr->memoryRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.dataValue,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.ID);&#xD;&#x9;}\" executionTime=\"ArbitrationDelay Cycle\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSO7GGEeCKGfGcPtVqvA\" name=\"UpdateRequestList\" previous=\"_hgZSP7GGEeCKGfGcPtVqvA\" next=\"_hgZSRbGGEeCKGfGcPtVqvA\" algorithm=\"if (SelectedRequestPtr == ListRequestsPtr->nextRequestPtr) {&#xA;&#x9;NextRequestPtr = ListRequestsPtr->nextRequestPtr->nextRequestPtr;&#xA;&#x9;if (NextRequestPtr == NULL) {&#xA;&#x9;&#x9;ListRequestsPtr->nextRequestPtr = NULL;&#xA;&#x9;} &#xA;&#x9;else {&#xA;&#x9;&#x9;ListRequestsPtr->nextRequestPtr = NextRequestPtr;&#xA;&#x9;&#x9;ListRequestsPtr->nextRequestPtr->prevRequestPtr = NULL;&#xA;&#x9;}&#xA;&#x9;free (SelectedRequestPtr);&#xA;} &#xA;else {&#xA;&#x9;SelectedRequestPtr->prevRequestPtr->nextRequestPtr = SelectedRequestPtr->nextRequestPtr;&#xA;&#x9;if (SelectedRequestPtr->nextRequestPtr) /*added in v4.1*/&#xA;&#x9;SelectedRequestPtr->nextRequestPtr->prevRequestPtr = SelectedRequestPtr->prevRequestPtr;&#xA;&#x9;free (SelectedRequestPtr);&#xA;&#x9;}\" executionTime=\"1 Cycle\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZSP7GGEeCKGfGcPtVqvA\" name=\"Loop29\" firstStatement=\"_hgZSQbGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZSNbGGEeCKGfGcPtVqvA\" previous=\"_hgZSM7GGEeCKGfGcPtVqvA\" next=\"_hgZSO7GGEeCKGfGcPtVqvA\" condition=\"NbMemoryTransactions\" type=\"MULTIPLICATION\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSQbGGEeCKGfGcPtVqvA\" name=\"PrepRequest\" isFirstOf=\"_hgZSP7GGEeCKGfGcPtVqvA\" next=\"_hgZSNbGGEeCKGfGcPtVqvA\" algorithm=\"Requests2Memory.memCmd = SelectedRequestPtr->memoryRequest.memCmd;&#xD;&#x9;Requests2Memory.address = SelectedRequestPtr->memoryRequest.address;&#xD;&#x9;Requests2Memory.dataValue = SelectedRequestPtr->memoryRequest.dataValue;&#xD;&#x9;Requests2Memory.size = SelectedRequestPtr->memoryRequest.size;&#xD;&#x9;Requests2Memory.size = BurstLengthMemory * EffectiveMemoryWidth;&#xD;&#x9;Requests2Memory.memID = memID;&#xD;&#xD;&#x9;if (MODE == VERBOSE) {&#xD;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&quot;Request transaction = address %i datavalue %i size %i burstlength %i ID %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;CurrentRequestPtr->memoryRequest.address,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.dataValue,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.size,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.burstLength,&#xD;&#x9;&#x9;&#x9;&#x9;SelectedRequestPtr->memoryRequest.ID);&#xD;&#x9;}\" executionTime=\"1 Cycle\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSRbGGEeCKGfGcPtVqvA\" name=\"Action52\" isLastOf=\"_hgZSKrGGEeCKGfGcPtVqvA\" previous=\"_hgZSO7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZSI7GGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"SendFastAck\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZSULGGEeCKGfGcPtVqvA\" name=\"DDRCommandGeneration\" declarations=\"int BankAccessed, RowAccessed, ColumnAccessed;&#xD;&#x9;bool NeedActive, NeedPrecharge;&#xD;&#x9;DefMemoryMode MemoryState;&#xD;&#x9;unsigned int memID;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_hgZSd7GGEeCKGfGcPtVqvA\" name=\"MemoryStatus\" type=\"SHARED_VARIABLE\" direction=\"IN_OUT\" inputSelectorInputs=\"_RvZfQINxEeG4L6yaWfhiPw\" outputSelectorOutputs=\"_SR69gINxEeG4L6yaWfhiPw\" relations=\"_hgZSmLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSebGGEeCKGfGcPtVqvA\" name=\"Requests2Memory\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_hgZSYLGGEeCKGfGcPtVqvA\" relations=\"_hgZSkbGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_hgZSerGGEeCKGfGcPtVqvA\" name=\"DDRCommand\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_hgZSVrGGEeCKGfGcPtVqvA _NmxUUGV-EeKZfuJGjkXbdg _OdEqMGV-EeKZfuJGjkXbdg\" port=\"_hgZSp7GGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZSUbGGEeCKGfGcPtVqvA\" name=\"DDRCommandGenerationBehaviorBh\" firstStatement=\"_hgZSW7GGEeCKGfGcPtVqvA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZSUrGGEeCKGfGcPtVqvA\" name=\"OutSel24\" instanceNumber=\"memID\" outputAction=\"_hgZSb7GGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_OdEqMGV-EeKZfuJGjkXbdg\" name=\"OutputSelectorOutput\" port=\"_hgZSerGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZSVbGGEeCKGfGcPtVqvA\" name=\"InstanceOutSelector37\" instanceNumber=\"SELF\" outputAction=\"_hgZScrGGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_hgZSVrGGEeCKGfGcPtVqvA\" port=\"_hgZSerGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZSWLGGEeCKGfGcPtVqvA\" name=\"InstanceOutSelector38\" instanceNumber=\"SELF\" outputAction=\"_hgZSdbGGEeCKGfGcPtVqvA\">\n                      <output xmi:id=\"_NmxUUGV-EeKZfuJGjkXbdg\" name=\"OutputSelectorOutput\" port=\"_hgZSerGGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_I9IYYINxEeG4L6yaWfhiPw\" name=\"InstanceInSelector\" inputAction=\"_Dpt-AINxEeG4L6yaWfhiPw\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_RvZfQINxEeG4L6yaWfhiPw\" port=\"_hgZSd7GGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ns\" duration=\" ns\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_JbVXUINxEeG4L6yaWfhiPw\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_ENINEINxEeG4L6yaWfhiPw\">\n                      <output xmi:id=\"_SR69gINxEeG4L6yaWfhiPw\" port=\"_hgZSd7GGEeCKGfGcPtVqvA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSW7GGEeCKGfGcPtVqvA\" name=\"CommandGenInit\" isFirstOf=\"_hgZSUbGGEeCKGfGcPtVqvA\" next=\"_hgZSXrGGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"10 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZSXrGGEeCKGfGcPtVqvA\" name=\"Loop33\" firstStatement=\"_hgZSYLGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZSdbGGEeCKGfGcPtVqvA\" previous=\"_hgZSW7GGEeCKGfGcPtVqvA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZSYLGGEeCKGfGcPtVqvA\" name=\"Cond38\" isFirstOf=\"_hgZSXrGGEeCKGfGcPtVqvA\" next=\"_lsSEcINxEeG4L6yaWfhiPw\" port=\"_hgZSebGGEeCKGfGcPtVqvA\" timeout=\" ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSY7GGEeCKGfGcPtVqvA\" name=\"NeedPrechargeOrNot\" previous=\"_Dpt-AINxEeG4L6yaWfhiPw\" next=\"_ENINEINxEeG4L6yaWfhiPw\" algorithm=\"&#xD;&#x9;if ((RowAccessed == MemoryStatus.ActiveRow[BankAccessed])&#xD;&#x9;&#x9;&#x9;&amp;&amp; (AutoPreChargeEnabled == OFF)) {&#xD;&#x9;&#x9;NeedActive = false;&#xD;&#x9;} else {&#xD;&#x9;&#x9;NeedActive = true;&#xD;&#x9;&#x9;if (AutoPreChargeEnabled == OFF) {&#xD;&#x9;&#x9;&#x9;NeedPrecharge = true;&#xD;&#x9;&#x9;&#x9;DDRCommand.Cmd = PRECHARGE;&#xD;&#x9;&#x9;&#x9;DDRCommand.BankAccessed = BankAccessed;&#xD;&#x9;&#x9;&#x9;DDRCommand.memID = memID;&#xD;&#x9;&#x9;&#x9;DDRCommand.RowAccessed = RowAccessed;&#xD;&#x9;&#x9;&#x9;DDRCommand.ColumnAccessed = ColumnAccessed;&#xD;&#x9;&#x9;&#x9;if (MEMORYVERBOSE == ON) {&#xD;&#x9;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Memory Command Generation PRECHARGE Module %i, Bank %i, Row %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;memID, BankAccessed, RowAccessed);&#xD;&#x9;&#x9;&#x9;}&#xD;&#x9;&#x9;} else {&#xD;&#x9;&#x9;&#x9;NeedPrecharge = false;&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;&#x9;MemoryStatus.ActiveRow[BankAccessed] = RowAccessed;&#xD;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSZ7GGEeCKGfGcPtVqvA\" name=\"NeedActivateOrNot\" previous=\"_hgZSb7GGEeCKGfGcPtVqvA\" next=\"_hgZScrGGEeCKGfGcPtVqvA\" algorithm=\"if (NeedActive == true) {&#xD;&#x9;&#x9;DDRCommand.Cmd = ACTIVATE;&#xD;&#x9;&#x9;DDRCommand.RowAccessed = RowAccessed;&#xD;&#x9;&#x9;DDRCommand.ColumnAccessed = ColumnAccessed;&#xD;&#x9;&#x9;DDRCommand.BankAccessed = BankAccessed;&#xD;&#x9;&#x9;DDRCommand.memID = memID;&#xD;&#x9;&#x9;if (MEMORYVERBOSE == ON) {&#xD;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Memory Command Generation ACTIVATE Module %i, Bank %i, Row %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;memID, BankAccessed, RowAccessed);&#xD;&#x9;&#x9;}&#xD;&#x9;}&#xD;\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZSa7GGEeCKGfGcPtVqvA\" name=\"PrepareCommand\" previous=\"_hgZScrGGEeCKGfGcPtVqvA\" next=\"_hgZSdbGGEeCKGfGcPtVqvA\" algorithm=\"if (Requests2Memory.memCmd == READREQ) {&#xD;&#x9;&#x9;DDRCommand.Cmd = READ;&#xD;&#x9;&#x9;DDRCommand.memID = memID;&#xD;&#x9;&#x9;DDRCommand.RowAccessed = RowAccessed;&#xD;&#x9;&#x9;DDRCommand.ColumnAccessed = ColumnAccessed;&#xD;&#x9;&#x9;DDRCommand.BankAccessed = BankAccessed;&#xD;&#x9;&#x9;if (MEMORYVERBOSE == ON) {&#xD;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Memory Command Generation READ Module %i, Bank %i, Row %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;memID, BankAccessed, RowAccessed);&#xD;&#x9;&#x9;}&#xD;&#x9;} else {&#xD;&#x9;&#x9;DDRCommand.Cmd = WRITE;&#xD;&#x9;&#x9;DDRCommand.memID = memID;&#xD;&#x9;&#x9;DDRCommand.RowAccessed = RowAccessed;&#xD;&#x9;&#x9;DDRCommand.ColumnAccessed = ColumnAccessed;&#xD;&#x9;&#x9;DDRCommand.BankAccessed = BankAccessed;&#xD;&#x9;&#x9;if (MEMORYVERBOSE == ON) {&#xD;&#x9;&#x9;&#x9;cf_trace_report(&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;Memory Command Generation WRITE Module %i, Bank %i, Row %i&quot;,&#xD;&#x9;&#x9;&#x9;&#x9;&#x9;memID, BankAccessed, RowAccessed);&#xD;&#x9;&#x9;}&#xD;&#x9;}\" executionTime=\"1 Cycle\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSb7GGEeCKGfGcPtVqvA\" name=\"AfterNeedPrecharge\" previous=\"_ENINEINxEeG4L6yaWfhiPw\" next=\"_hgZSZ7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZSUrGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"NeedPrecharge\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZScrGGEeCKGfGcPtVqvA\" name=\"AfterNeedActivate\" previous=\"_hgZSZ7GGEeCKGfGcPtVqvA\" next=\"_hgZSa7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZSVbGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"NeedActive\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZSdbGGEeCKGfGcPtVqvA\" name=\"AfterPrepareCommand\" isLastOf=\"_hgZSXrGGEeCKGfGcPtVqvA\" previous=\"_hgZSa7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZSWLGGEeCKGfGcPtVqvA\" duration=\" ns\" priority=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Dpt-AINxEeG4L6yaWfhiPw\" name=\"InAction\" previous=\"_lsSEcINxEeG4L6yaWfhiPw\" next=\"_hgZSY7GGEeCKGfGcPtVqvA\" inputSelector=\"_I9IYYINxEeG4L6yaWfhiPw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_ENINEINxEeG4L6yaWfhiPw\" name=\"OutAction\" previous=\"_hgZSY7GGEeCKGfGcPtVqvA\" next=\"_hgZSb7GGEeCKGfGcPtVqvA\" outputSelector=\"_JbVXUINxEeG4L6yaWfhiPw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lsSEcINxEeG4L6yaWfhiPw\" name=\"SelectStatus\" previous=\"_hgZSYLGGEeCKGfGcPtVqvA\" next=\"_Dpt-AINxEeG4L6yaWfhiPw\" algorithm=\"NeedActive = false;&#xA;NeedPrecharge = false;&#xA;memID = Requests2Memory.memID;&#xA;BankAccessed = (Requests2Memory.address / (MEMORYSIZE / NbBanksperMemory))&#x9;&#x9;&#x9;+ 1;&#xA;/* Let's consider row address are the 8 LSB and column access 8 MSB*/&#xA;ColumnAccessed = ((Requests2Memory.address - BankAccessed) &lt;&lt; 8) >> 8;&#xA;RowAccessed = (Requests2Memory.address - BankAccessed) >> 8;&#xA;/* Var_MemoryStatus.SetRelationIndex(memID);*/&#xA;/* Var_MemoryStatus.Read(&amp;MemoryStatus);*/\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                  </refinement>\n                </models>\n                <relations xsi:type=\"cofluent:Event\" xmi:id=\"_hgZSf7GGEeCKGfGcPtVqvA\" name=\"RequestCounter\" ports=\"_hgZR9LGGEeCKGfGcPtVqvA _hgZSTLGGEeCKGfGcPtVqvA\" policy=\"COUNTER\" setTime=\"0 Cycle\" getTime=\"0 Cycle\"/>\n                <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_hgZShLGGEeCKGfGcPtVqvA\" name=\"ListRequestsPtr\" ports=\"_hgZSSrGGEeCKGfGcPtVqvA _hgZR87GGEeCKGfGcPtVqvA\" concurrency=\"1\" counter=\"\" writeTime=\"0 Cycle\" readTime=\"0 Cycle\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_13wqgEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5jbGGEeCKGfGcPtVqvA\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSirGGEeCKGfGcPtVqvA\" name=\"RequestInformation\" ports=\"_hgZSSbGGEeCKGfGcPtVqvA _hgZSG7GGEeCKGfGcPtVqvA\" policy=\"INFINITE\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_17f7AEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5j7GGEeCKGfGcPtVqvA\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSkbGGEeCKGfGcPtVqvA\" name=\"Requests2Memory\" ports=\"_hgZSebGGEeCKGfGcPtVqvA _hgZSS7GGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_14KTIEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5kbGGEeCKGfGcPtVqvA\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_hgZSmLGGEeCKGfGcPtVqvA\" name=\"MemoryStatus\" ports=\"_hgZSd7GGEeCKGfGcPtVqvA\" concurrency=\"1\" counter=\"\" writeTime=\"0 Cycle\" readTime=\"0 Cycle\">\n                  <max xmi:id=\"_hgZSmbGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5l7GGEeCKGfGcPtVqvA\"/>\n                  <min xmi:id=\"_hgZSmrGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_16XSkEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5k7GGEeCKGfGcPtVqvA\"/>\n                </relations>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSqrGGEeCKGfGcPtVqvA\" name=\"AWADDRin\" ports=\"_hgZR1LGGEeCKGfGcPtVqvA _hgYrQLGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZSq7GGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZSrLGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1vRc4EwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5gLGGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSs7GGEeCKGfGcPtVqvA\" name=\"WDATAin\" ports=\"_hgYrSLGGEeCKGfGcPtVqvA _hgZR07GGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZStLGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZStbGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1xitwEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5frGGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSvLGGEeCKGfGcPtVqvA\" name=\"ARADDRin\" ports=\"_hgYrULGGEeCKGfGcPtVqvA _hgZR0rGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZSvbGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZSvrGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_19qeMEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5erGGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSxbGGEeCKGfGcPtVqvA\" name=\"MemWriteRequest\" ports=\"_hgZSpbGGEeCKGfGcPtVqvA _hgZR0bGGEeCKGfGcPtVqvA\" policy=\"INFINITE\" capacity=\"MemWriteReqFifoSize\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_13aFMEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5i7GGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZSzLGGEeCKGfGcPtVqvA\" name=\"WriteAck\" ports=\"_hgYr57GGEeCKGfGcPtVqvA _hgZSo7GGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZSzbGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZSzrGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1_iGcEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5h7GGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZS1bGGEeCKGfGcPtVqvA\" name=\"MemReadRequest\" ports=\"_hgZR0LGGEeCKGfGcPtVqvA _hgZSpLGGEeCKGfGcPtVqvA\" policy=\"INFINITE\" capacity=\"MemReadReqFifoSize\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_18c9QEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5ibGGEeCKGfGcPtVqvA\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZS3LGGEeCKGfGcPtVqvA\" name=\"DataRead\" ports=\"_hgYr5rGGEeCKGfGcPtVqvA _hgZSorGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZS3bGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5lrGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZS3rGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1vEBgEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5hbGGEeCKGfGcPtVqvA\"/>\n            </relations>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZS8LGGEeCKGfGcPtVqvA\" name=\"Memory\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" cyclePeriod=\"10 ns\">\n          <max xmi:id=\"_hgZS8bGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5l7GGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgZS8rGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <ports xmi:id=\"_hgZ5OLGGEeCKGfGcPtVqvA\" name=\"DQs\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_hgZ5PLGGEeCKGfGcPtVqvA\" ports=\"_hgZ47bGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_hgZ5ObGGEeCKGfGcPtVqvA\" name=\"DDRCommand\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_hgZ5RbGGEeCKGfGcPtVqvA\" ports=\"_hgZ5KrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_hgZS87GGEeCKGfGcPtVqvA\" name=\"MemoryStructComplexSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZS9LGGEeCKGfGcPtVqvA\" name=\"MemoryCommandExecution\" constructor=\"\" declarations=\"int ExecuteCommandDuration;&#xD;&#xA;bool SendDQ;&#xD;&#xA;int AutoPrechargedDuration;&#xD;&#xA;int memID;&#xD;&#xA;int InitBankDuration;&#xD;&#xA;int PowerConsumption;&#xD;&#xA;double StaticPowerConsumption;&#xD;&#xA;// 4 because of a maximum of 4 banks per memory&#xD;&#xA;int StartBank[4];&#xD;&#xA;int Instance;\" definitions=\"\" initializations=\"StartBank[0] = 0;&#xD;StartBank[1] = 0;&#xD;StartBank[2] = 0;&#xD;StartBank[3] = 0;&#xD;memID = 0;\" cyclePeriod=\"10 ns\">\n              <max xmi:id=\"_hgZS9bGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5mLGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZS9rGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <ports xmi:id=\"_hgZ47bGGEeCKGfGcPtVqvA\" name=\"DQs\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_hgZS_7GGEeCKGfGcPtVqvA\" port=\"_hgZ5OLGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZ47rGGEeCKGfGcPtVqvA\" name=\"DDRAction\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_D1bIgCg8EeGtYfh4PZkfcA\" relations=\"_hgZ5LrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZS97GGEeCKGfGcPtVqvA\" name=\"MemoryCommandExecutionBehaviorBh\" firstStatement=\"_hgZTCbGGEeCKGfGcPtVqvA\">\n                <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZS_rGGEeCKGfGcPtVqvA\" name=\"OutSel16\" instanceNumber=\"memID\" outputAction=\"_hgZTBrGGEeCKGfGcPtVqvA\">\n                  <output xmi:id=\"_hgZS_7GGEeCKGfGcPtVqvA\" port=\"_hgZ47bGGEeCKGfGcPtVqvA\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_DBlQwCg8EeGtYfh4PZkfcA\" name=\"InstanceInSelector\" inputAction=\"_hgZTA7GGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_D1bIgCg8EeGtYfh4PZkfcA\" port=\"_hgZ47rGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ms\" duration=\" ns\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZTAbGGEeCKGfGcPtVqvA\" name=\"Loop32\" firstStatement=\"_hgZTA7GGEeCKGfGcPtVqvA\" lastStatement=\"_hgZ46rGGEeCKGfGcPtVqvA\" previous=\"_hgZTCbGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZTA7GGEeCKGfGcPtVqvA\" name=\"Cond36\" isFirstOf=\"_hgZTAbGGEeCKGfGcPtVqvA\" next=\"_hgZ44rGGEeCKGfGcPtVqvA\" inputSelector=\"_DBlQwCg8EeGtYfh4PZkfcA\" timeout=\" ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZTBrGGEeCKGfGcPtVqvA\" name=\"Action40\" previous=\"_hgZ44rGGEeCKGfGcPtVqvA\" next=\"_hgZ45rGGEeCKGfGcPtVqvA\" outputSelector=\"_hgZS_rGGEeCKGfGcPtVqvA\" duration=\" fs\" condition=\"SendDQ\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZTCbGGEeCKGfGcPtVqvA\" name=\"CommandExecInit\" isFirstOf=\"_hgZS97GGEeCKGfGcPtVqvA\" next=\"_hgZTAbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;InitBankDuration = 1;&#xA;&#x9;ExecuteCommandDuration =1;\" executionTime=\"ExecuteCommandDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ44rGGEeCKGfGcPtVqvA\" name=\"ExecuteCommand\" previous=\"_hgZTA7GGEeCKGfGcPtVqvA\" next=\"_hgZTBrGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;if (DDRAction.Cmd == READ) {&#xA;&#x9;&#x9;SendDQ = true;&#xA;&#x9;&#x9;DQPutTime = BurstLengthMemory;&#xA;&#x9;&#x9;ExecuteCommandDuration = CASLatency;&#xA;&#x9;}&#xA;&#x9;else if (DDRAction.Cmd == WRITE) {&#xA;&#x9;&#x9;SendDQ = true;&#x9;DQPutTime = BurstLengthMemory;&#xA;&#x9;&#x9;ExecuteCommandDuration = CASLatency;&#xA;&#x9;} &#xA;&#x9;else if (DDRAction.Cmd == ACTIVATE) {&#xA;&#x9;&#x9;SendDQ = false;&#xA;&#x9;&#x9;ExecuteCommandDuration = RCDLatency;&#xA;&#x9;}&#xA;&#x9;else if (DDRAction.Cmd == PRECHARGE) {&#xA;&#x9;&#x9;SendDQ = false;&#xA;&#x9;&#x9;ExecuteCommandDuration = RPLatency;&#xA;&#x9;}\" executionTime=\"ExecuteCommandDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ45rGGEeCKGfGcPtVqvA\" name=\"AutoPrecharged\" previous=\"_hgZTBrGGEeCKGfGcPtVqvA\" next=\"_hgZ46rGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;if (AutoPreChargeEnabled == ON) {&#xA;&#x9;&#x9;AutoPrechargedDuration = 1;&#xA;&#x9;}&#xA;&#x9;else &#xA;&#x9;{&#x9;&#xA;&#x9;&#x9;AutoPrechargedDuration = 0;&#xA;&#x9;}\" executionTime=\"AutoPrechargedDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ46rGGEeCKGfGcPtVqvA\" name=\"PrechargeStandby\" isLastOf=\"_hgZTAbGGEeCKGfGcPtVqvA\" previous=\"_hgZ45rGGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"0 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_hgZ48rGGEeCKGfGcPtVqvA\" name=\"BankDmuxer\" constructor=\"\" destructor=\"\" declarations=\"bool RcvRequest;&#xD;int Bank;&#xD;float LastActivate, CurrentActivate;&#xD;int LastBank;&#xD;int Send2BankDuration;&#xD;int DDRActionSend;\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\">\n              <ports xmi:id=\"_hgZ5KLGGEeCKGfGcPtVqvA\" name=\"DDRAction\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_hgZ4-7GGEeCKGfGcPtVqvA\" relations=\"_hgZ5LrGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_hgZ5KrGGEeCKGfGcPtVqvA\" name=\"DDRCommand\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_3yxYsLF9EeKpQpdJd9Uknw _bUMo4LuUEeWBz90L4uMBKw\" port=\"_hgZ5ObGGEeCKGfGcPtVqvA\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_hgZ487GGEeCKGfGcPtVqvA\" name=\"BankDmuxerBehaviorBh\" firstStatement=\"_hgZ5A7GGEeCKGfGcPtVqvA\">\n                <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_hgZ4-rGGEeCKGfGcPtVqvA\" name=\"OutSel25\" instanceNumber=\"Bank\" outputAction=\"_hgZ5CbGGEeCKGfGcPtVqvA\">\n                  <output xmi:id=\"_hgZ4-7GGEeCKGfGcPtVqvA\" port=\"_hgZ5KLGGEeCKGfGcPtVqvA\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_GLr1QCg8EeGtYfh4PZkfcA\" name=\"InstanceInSelector2\" inputAction=\"_hgZ5JbGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_3yxYsLF9EeKpQpdJd9Uknw\" name=\"InputSelectorInput\" port=\"_hgZ5KrGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ns\" duration=\" ns\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_ao0woLuUEeWBz90L4uMBKw\" name=\"InstanceInSelector\" inputAction=\"_hgZ5BrGGEeCKGfGcPtVqvA\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_bUMo4LuUEeWBz90L4uMBKw\" name=\"InputSelectorInput\" port=\"_hgZ5KrGGEeCKGfGcPtVqvA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5A7GGEeCKGfGcPtVqvA\" name=\"BankDmuxInit\" isFirstOf=\"_hgZ487GGEeCKGfGcPtVqvA\" next=\"_hgZ5D7GGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZ5BrGGEeCKGfGcPtVqvA\" name=\"Standby\" isFirstOf=\"_hgZ5D7GGEeCKGfGcPtVqvA\" next=\"_hgZ5FrGGEeCKGfGcPtVqvA\" inputSelector=\"_ao0woLuUEeWBz90L4uMBKw\" timeout=\" us\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hgZ5CbGGEeCKGfGcPtVqvA\" name=\"Action47\" isLastOf=\"_hgZ5D7GGEeCKGfGcPtVqvA\" previous=\"_hgZ5C7GGEeCKGfGcPtVqvA\" outputSelector=\"_hgZ4-rGGEeCKGfGcPtVqvA\" duration=\"DDRActionSend* 10 ns\" condition=\"\" priority=\"1\" vectorSize=\"\" blocking=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5C7GGEeCKGfGcPtVqvA\" name=\"Send2Bank\" previous=\"_hgZ5EbGGEeCKGfGcPtVqvA\" next=\"_hgZ5CbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;DDRAction = DDRCommand;&#xA;&#x9;Bank = DDRCommand.BankAccessed;&#xA;&#x9;Send2BankDuration = 1;DDRActionSend = 1;&#xA;&#x9;if (DDRCommand.Cmd == ACTIVATE){&#x9;&#xA;&#x9;&#x9;if (RcvRequest == true) {&#xA;&#x9;&#x9;&#x9;/*CurrentActivate = CurrentUserTime(cycle);*/&#xA;&#x9;&#x9;&#x9;LastBank = Bank;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;else if (DDRCommand.Cmd == WRITE){&#xA;&#x9;&#x9;DDRActionSend = BurstLengthMemory;&#xA;&#x9;}\" executionTime=\"Send2BankDuration Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_hgZ5D7GGEeCKGfGcPtVqvA\" name=\"Loop34\" firstStatement=\"_hgZ5BrGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZ5CbGGEeCKGfGcPtVqvA\" previous=\"_hgZ5A7GGEeCKGfGcPtVqvA\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_hgZ5EbGGEeCKGfGcPtVqvA\" previous=\"_hgZ5FrGGEeCKGfGcPtVqvA\" next=\"_hgZ5C7GGEeCKGfGcPtVqvA\">\n                  <conditionalBranches xmi:id=\"_hgZ5ErGGEeCKGfGcPtVqvA\" firstStatement=\"_hgZ5GrGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZ5HrGGEeCKGfGcPtVqvA\" condition=\"RcvRequest==false\"/>\n                  <conditionalBranches xmi:id=\"_hgZ5FLGGEeCKGfGcPtVqvA\" firstStatement=\"_hgZ5IrGGEeCKGfGcPtVqvA\" lastStatement=\"_hgZ5IrGGEeCKGfGcPtVqvA\" condition=\"\"/>\n                </statements>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5FrGGEeCKGfGcPtVqvA\" name=\"PowerDownTimeoutOrNot\" previous=\"_hgZ5BrGGEeCKGfGcPtVqvA\" next=\"_hgZ5EbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;RcvRequest = true;\" executionTime=\"0 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5GrGGEeCKGfGcPtVqvA\" name=\"GoToPowerDown\" isFirstOf=\"_hgZ5ErGGEeCKGfGcPtVqvA\" next=\"_hgZ5JbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;/* if (AutoPreChargeEnabled == ON) {&#xA;&#x9;&#x9;SetStaticPowerConsumption(PrechargePowerDownPowerConsumption,mW);&#xA;&#x9;&#x9;SetDynamicPowerConsumption(0,mW);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else {&#xA;&#x9;&#x9;SetStaticPowerConsumption(ActivePowerDownModePowerConsumption,mW);&#xA;&#x9;&#x9;SetDynamicPowerConsumption(0,mW);} &#xA;&#x9;*/\" executionTime=\"1 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5HrGGEeCKGfGcPtVqvA\" name=\"ExitPowerDown\" isLastOf=\"_hgZ5ErGGEeCKGfGcPtVqvA\" previous=\"_hgZ5JbGGEeCKGfGcPtVqvA\" algorithm=\"&#x9;/* if (AutoPreChargeEnabled == ON) {&#xA; &#x9;&#x9;SetStaticPowerConsumption(0, mW);&#xA; &#x9;&#x9;SetDynamicPowerConsumption(PrechargeStandbyModePowerConsumption, mW);&#xA; &#x9;&#x9;}&#xA; &#x9;&#x9;else {&#xA; &#x9;&#x9;SetStaticPowerConsumption(0, mW);&#xA; &#x9;&#x9;SetDynamicPowerConsumption(ActiveStandbyModePowerConsumption, mW);&#xA; &#x9;&#x9;}&#xA;&#x9;*/\" executionTime=\"6 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_hgZ5IrGGEeCKGfGcPtVqvA\" name=\"NoPowerDown\" isFirstOf=\"_hgZ5FLGGEeCKGfGcPtVqvA\" isLastOf=\"_hgZ5FLGGEeCKGfGcPtVqvA\" algorithm=\"\" executionTime=\"0 Cycle\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_hgZ5JbGGEeCKGfGcPtVqvA\" name=\"PowerDown\" previous=\"_hgZ5GrGGEeCKGfGcPtVqvA\" next=\"_hgZ5HrGGEeCKGfGcPtVqvA\" inputSelector=\"_GLr1QCg8EeGtYfh4PZkfcA\" timeout=\"PowerDownTimeout ms\" priority=\"\" duration=\" fs\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5LrGGEeCKGfGcPtVqvA\" name=\"DDRAction\" ports=\"_hgZ5KLGGEeCKGfGcPtVqvA _hgZ47rGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"10 ns\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n              <max xmi:id=\"_hgZ5L7GGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5mLGGEeCKGfGcPtVqvA\"/>\n              <min xmi:id=\"_hgZ5MLGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1s_k8EwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5grGGEeCKGfGcPtVqvA\"/>\n            </relations>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5PLGGEeCKGfGcPtVqvA\" name=\"DQs\" ports=\"_hgZ5OLGGEeCKGfGcPtVqvA _hgZS5rGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 Cycle\" receiveTime=\"DQPutTime Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n          <max xmi:id=\"_hgZ5PbGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5l7GGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgZ5PrGGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1rzSIEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5hLGGEeCKGfGcPtVqvA\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5RbGGEeCKGfGcPtVqvA\" name=\"DDRCommand\" ports=\"_hgZS7LGGEeCKGfGcPtVqvA _hgZ5ObGGEeCKGfGcPtVqvA\" policy=\"INFINITE\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n          <max xmi:id=\"_hgZ5RrGGEeCKGfGcPtVqvA\" designParameter=\"_hgZ5l7GGEeCKGfGcPtVqvA\"/>\n          <min xmi:id=\"_hgZ5R7GGEeCKGfGcPtVqvA\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1t-cYEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5grGGEeCKGfGcPtVqvA\"/>\n        </relations>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5VbGGEeCKGfGcPtVqvA\" name=\"AWADDRchn\" ports=\"_hgZ5UrGGEeCKGfGcPtVqvA _hgYrOLGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1zIpMEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5gLGGEeCKGfGcPtVqvA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5XLGGEeCKGfGcPtVqvA\" name=\"WDATAchn\" ports=\"_hgYrN7GGEeCKGfGcPtVqvA _hgZ5UbGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"BurstLength Cycle\" receiveTime=\"1 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1yESMEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5frGGEeCKGfGcPtVqvA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5Y7GGEeCKGfGcPtVqvA\" name=\"BRESPchn\" ports=\"_hgZ5ULGGEeCKGfGcPtVqvA _hgYrNrGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1rcFwEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5fLGGEeCKGfGcPtVqvA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5arGGEeCKGfGcPtVqvA\" name=\"ARADDRchn\" ports=\"_hgYrNbGGEeCKGfGcPtVqvA _hgZ5T7GGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1qqCoEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5erGGEeCKGfGcPtVqvA\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_hgZ5cbGGEeCKGfGcPtVqvA\" name=\"RDATAchn\" ports=\"_hgZ5TrGGEeCKGfGcPtVqvA _hgYrNLGGEeCKGfGcPtVqvA\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 Cycle\" receiveTime=\"0 Cycle\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_1qcnQEwhEeeQX8Btr5lqFA\" dataType=\"_hgZ5eLGGEeCKGfGcPtVqvA\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_HQiikOSUEeudiLrsMQYKNQ\" name=\"Inheritance_example3App\" version=\"8.1.0_r1_434\" target=\"\" includeInheritedHeader=\"\" inheritanceClass=\"\" callToInheritedConstructors=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n  <annotations xmi:id=\"_HRiBEOSUEeudiLrsMQYKNQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_HRiBEeSUEeudiLrsMQYKNQ\" key=\"cofluent.managedbuild.config.msvc2019.exe.release.996501612\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_HQjJoOSUEeudiLrsMQYKNQ\" name=\"Inheritance_example3AppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_J8zUgOSUEeudiLrsMQYKNQ\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <max xmi:id=\"_J8zUgeSUEeudiLrsMQYKNQ\" integerLimit=\"1\"/>\n      <min xmi:id=\"_J8zUguSUEeudiLrsMQYKNQ\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_J8zUg-SUEeudiLrsMQYKNQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_J8zUhuSUEeudiLrsMQYKNQ\" relations=\"_J8zUlOSUEeudiLrsMQYKNQ\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_J8zUhOSUEeudiLrsMQYKNQ\" name=\"ConsumerBh\" firstStatement=\"_J8zUh-SUEeudiLrsMQYKNQ\">\n        <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_J8zUheSUEeudiLrsMQYKNQ\" name=\"InstanceInSelector\" inputAction=\"_J8zUiuSUEeudiLrsMQYKNQ\" instanceNumber=\"SELF\">\n          <inputs xmi:id=\"_J8zUhuSUEeudiLrsMQYKNQ\" name=\"InputSelectorInput\" port=\"_J8zUg-SUEeudiLrsMQYKNQ\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n        </selectors>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zUh-SUEeudiLrsMQYKNQ\" name=\"init\" isFirstOf=\"_J8zUhOSUEeudiLrsMQYKNQ\" next=\"_J8zUiOSUEeudiLrsMQYKNQ\" executionTime=\"300 Cycle\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_J8zUiOSUEeudiLrsMQYKNQ\" name=\"Loop\" firstStatement=\"_J8zUiuSUEeudiLrsMQYKNQ\" lastStatement=\"_J8zUieSUEeudiLrsMQYKNQ\" previous=\"_J8zUh-SUEeudiLrsMQYKNQ\" condition=\"3\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zUieSUEeudiLrsMQYKNQ\" name=\"consume\" isLastOf=\"_J8zUiOSUEeudiLrsMQYKNQ\" previous=\"_J8zUiuSUEeudiLrsMQYKNQ\" executionTime=\"200 Cycle\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_J8zUiuSUEeudiLrsMQYKNQ\" name=\"InAction\" isFirstOf=\"_J8zUiOSUEeudiLrsMQYKNQ\" next=\"_J8zUieSUEeudiLrsMQYKNQ\" inputSelector=\"_J8zUheSUEeudiLrsMQYKNQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_J8zUvuSUEeudiLrsMQYKNQ\" name=\"OS\" includes=\"#include &quot;user_processor_base_class.h&quot;\" destructor=\"delete sel_processor;\" declarations=\"cf_core::cf_cp_selection&lt; cf_core::cf_processor >*  sel_processor;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_J8zUv-SUEeudiLrsMQYKNQ\" name=\"OSBh\" firstStatement=\"_J8zUwOSUEeudiLrsMQYKNQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zUwOSUEeudiLrsMQYKNQ\" name=\"init\" isFirstOf=\"_J8zUv-SUEeudiLrsMQYKNQ\" next=\"_J8zUweSUEeudiLrsMQYKNQ\" algorithm=\"std::string path = &quot;/Inheritance_example3Plf&quot;;&#xD;&#xA;sel_processor = new cf_cp_selection&lt;cf_processor>(path);&#xD;&#xA;&#xD;&#xA;for (auto i = sel_processor->begin();&#xD;&#xA;&#x9;&#x9;i != sel_processor->end(); i++) {&#xD;&#xA;&#x9;user_processor_base_class* p = dynamic_cast&lt;user_processor_base_class*>(*i);&#xD;&#xA;&#x9;// update processor reference to enable computation&#xD;&#xA;&#x9;p->update_processor_ref(p->get_hcp_name());&#xD;&#xA;&#x9;// start new active ratio period measurement&#xD;&#xA;&#x9;p->start_temp_active_ratio();&#xD;&#xA;}&#xD;&#xA;\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_J8zUweSUEeudiLrsMQYKNQ\" name=\"Loop\" firstStatement=\"_J8zUw-SUEeudiLrsMQYKNQ\" lastStatement=\"_J8zUwuSUEeudiLrsMQYKNQ\" previous=\"_J8zUwOSUEeudiLrsMQYKNQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zUwuSUEeudiLrsMQYKNQ\" name=\"get_active_ratio\" isLastOf=\"_J8zUweSUEeudiLrsMQYKNQ\" previous=\"_J8zUw-SUEeudiLrsMQYKNQ\" algorithm=\"for (auto i = sel_processor->begin();&#xD;&#xA;&#x9;&#x9;&#x9;i != sel_processor->end(); i++) {&#xD;&#xA;&#x9;&#x9;// cast processor object to user_processor_base_class&#x9;&#xD;&#xA;&#x9;&#x9;user_processor_base_class* p = dynamic_cast&lt;user_processor_base_class*>(*i);&#xD;&#xA;&#x9;&#x9;//&#xD;&#xA;&#x9;&#x9;double period = p->get_temp_period().to_scalar(CF_NS);&#xD;&#xA;&#x9;&#x9;// start new active ratio period measurement&#xD;&#xA;&#x9;&#x9;double active_ratio = p->start_temp_active_ratio();&#xD;&#xA;&#x9;&#x9;// print active ratio data&#xD;&#xA;&#x9;&#x9;cf_trace_report(&quot;%s has an active ratio of %.2lf over a period of %.2lf ns&quot;,&#xD;&#xA;&#x9;&#x9;p->get_cp_name(), active_ratio, period);&#xD;&#xA;&#x9;&#x9;// update processor custom state&#xD;&#xA;&#x9;&#x9;p->update_user_state(active_ratio);&#xD;&#xA;&#x9;}\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zUw-SUEeudiLrsMQYKNQ\" name=\"wait\" isFirstOf=\"_J8zUweSUEeudiLrsMQYKNQ\" next=\"_J8zUwuSUEeudiLrsMQYKNQ\" executionTime=\"500 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_J8zU-uSUEeudiLrsMQYKNQ\" name=\"Producer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <max xmi:id=\"_J8zU--SUEeudiLrsMQYKNQ\" integerLimit=\"1\"/>\n      <min xmi:id=\"_J8zU_OSUEeudiLrsMQYKNQ\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_J8zU_eSUEeudiLrsMQYKNQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_J8zVAOSUEeudiLrsMQYKNQ\" relations=\"_J8zUlOSUEeudiLrsMQYKNQ\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_J8zU_uSUEeudiLrsMQYKNQ\" name=\"ProducerBh\" firstStatement=\"_J8zVAeSUEeudiLrsMQYKNQ\">\n        <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_J8zU_-SUEeudiLrsMQYKNQ\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_J8zVBOSUEeudiLrsMQYKNQ\">\n          <output xmi:id=\"_J8zVAOSUEeudiLrsMQYKNQ\" name=\"OutputSelectorOutput\" port=\"_J8zU_eSUEeudiLrsMQYKNQ\"/>\n        </selectors>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zVAeSUEeudiLrsMQYKNQ\" name=\"init\" isFirstOf=\"_J8zU_uSUEeudiLrsMQYKNQ\" next=\"_J8zVAuSUEeudiLrsMQYKNQ\" executionTime=\"10 Cycle\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_J8zVAuSUEeudiLrsMQYKNQ\" name=\"Loop\" firstStatement=\"_J8zVA-SUEeudiLrsMQYKNQ\" lastStatement=\"_J8zVBOSUEeudiLrsMQYKNQ\" previous=\"_J8zVAeSUEeudiLrsMQYKNQ\" condition=\"3\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_J8zVA-SUEeudiLrsMQYKNQ\" name=\"produce\" isFirstOf=\"_J8zVAuSUEeudiLrsMQYKNQ\" next=\"_J8zVBOSUEeudiLrsMQYKNQ\" executionTime=\"200 Cycle\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_J8zVBOSUEeudiLrsMQYKNQ\" name=\"OutAction\" isLastOf=\"_J8zVAuSUEeudiLrsMQYKNQ\" previous=\"_J8zVA-SUEeudiLrsMQYKNQ\" outputSelector=\"_J8zU_-SUEeudiLrsMQYKNQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_J8zUlOSUEeudiLrsMQYKNQ\" name=\"MsgQ\" ports=\"_J8zU_eSUEeudiLrsMQYKNQ _J8zUg-SUEeudiLrsMQYKNQ\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <max xmi:id=\"_J8zUleSUEeudiLrsMQYKNQ\" integerLimit=\"1\"/>\n      <min xmi:id=\"_J8zUluSUEeudiLrsMQYKNQ\" integerLimit=\"0\"/>\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_J8zUl-SUEeudiLrsMQYKNQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_Qy0fUCWtEeev0Li77iEQPw\" name=\"datacenter\" constructor=\"\" includes=\"#include &lt;chrono>&#xD;&#xA;\" postSimulation=\"// End chrono except for controller (controller already measures execution time)&#xD;&#xA;#ifndef COF_LSS_CONTROLLER&#xD;&#xA;std::chrono::high_resolution_clock::time_point t_end = std::chrono::high_resolution_clock::now();&#xD;&#xA;std::chrono::duration&lt;double> time_span = std::chrono::duration_cast&lt;std::chrono::duration&lt;double> >(t_end - t_start);&#xD;&#xA;cf_mon_ostream  &lt;&lt; &quot;Wall-clock simulation time: &quot;&lt;&lt; time_span.count() &lt;&lt; &quot; sec&quot; &lt;&lt; cf_mon_endl;&#xD;&#xA;#endif&#xD;&#xA;&#xD;&#xA;// Create map for chart&#xD;&#xA;std::map&lt;int,int> graph;&#xD;&#xA;// Need dp for it&#xD;&#xA;for (auto it : producer_exec_time){&#xD;&#xA;&#x9;//cf_trace_report(&quot;time %s&quot;, it.to_c_str());&#xD;&#xA;&#x9;int t = (int)it.to_scalar(CF_NS) / 100;&#xD;&#xA;&#x9;auto s = graph.find(t);&#xD;&#xA;&#x9;if (s != graph.end())&#xD;&#xA;&#x9;&#x9;s->second = s->second + 1 ;&#xD;&#xA;&#x9;else&#xD;&#xA;&#x9;&#x9;graph.insert(std::pair&lt;int,int>(t,1));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;for(auto it : graph)&#xD;&#xA;{&#xD;&#xA;&#x9;//cf_trace_report(&quot;key %d value %d&quot;, it.first, it.second);&#xD;&#xA;&#x9;// create graph point&#xD;&#xA;&#x9;cf_trace_gui_f_x(&quot;latency&quot;,&quot;nb_func&quot;,it.first,it.second);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Display simulation result&#xD;&#xA;// Transaction counts&#xD;&#xA;cf_trace_report(&quot;Total number of transaction sent is %d&quot;,total_requests_sent);&#xD;&#xA;cf_trace_report(&quot;Transaction number routed by ToR switches : %d&quot;,nb_trans_routed_by_ToR_Switch);&#xD;&#xA;cf_trace_report(&quot;Transaction number routed by AGG switches : %d&quot;,nb_trans_routed_by_AGG_Switch);&#xD;&#xA;cf_trace_report(&quot;Transaction number routed by Data Center switch : %d&quot;,nb_trans_routed_by_Data_Center_Switch);&#xD;&#xA;cf_trace_report(&quot;Total number of transaction received is %d&quot;,total_requests_received);&#xD;&#xA;&#xD;&#xA;// controller and sequential simulation &#xD;&#xA;#if defined(COF_LSS_CONTROLLER) || !defined(COF_LSS)&#xD;&#xA;&#xD;&#xA;cf_trace_report(&quot;Assert number of requests sent and received are the same.&quot;);&#xD;&#xA;cf_assert( (total_requests_sent ==  total_requests_received),&#xD;&#xA;&#x9;&#x9;&#x9;&quot;Post-Simulation&quot;, CF_ERROR_USER_ASSERT,&#xD;&#xA;&#x9;&#x9;&#x9;&quot;The number of transactions received (%d) is not the same as the number of transactions sent (%d). \\nIncrease simulation time to get full simulation results.&quot;,&#x9;&#x9;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9;&#x9;total_requests_received, total_requests_sent&#xD;&#xA;&#x9;&#x9;&#x9;);&#xD;&#xA;&#xD;&#xA;// Transaction rate&#xD;&#xA;cf_trace_report(&quot;Rate of outside server room transaction is %.2f &quot;, ((float)nb_trans_routed_by_Data_Center_Switch/total_requests_received)*100 );&#xD;&#xA;cf_trace_report(&quot;Rate of outside rack transaction is %.2f &quot;, ((float)(nb_trans_routed_by_AGG_Switch-(nb_trans_routed_by_Data_Center_Switch))/total_requests_received)*100 );&#xD;&#xA;// Display simulation_duration&#xD;&#xA;cf_trace_report(&quot;simulation_duration %s&quot;,simulation_duration.to_string() );&#xD;&#xA;// Display switches load &#xD;&#xA;data_center_switch_load = (data_center_switch_running_time.to_scalar(CF_MS) *100) / simulation_duration.to_scalar(CF_MS);&#xD;&#xA;cf_trace_report(&quot;Data center switch load = %.2f%%&quot;, data_center_switch_load);&#xD;&#xA;agg_switch_load = ( (agg_switch_running_time.to_scalar(CF_MS) *100) / simulation_duration.to_scalar(CF_MS)) / (dpServerRoomNb + 1);&#xD;&#xA;cf_trace_report(&quot;Agg switch average load = %.2f%%&quot;, agg_switch_load);&#xD;&#xA;tor_switch_load = ((tor_switch_running_time.to_scalar(CF_MS) *100) / simulation_duration.to_scalar(CF_MS)) / ((dpServerRoomNb + 1)*(dpRackNb + 1));&#xD;&#xA;cf_trace_report(&quot;ToR switch average load = %.2f%%&quot;, tor_switch_load);&#xD;&#xA;&#xD;&#xA;// Latencies&#xD;&#xA;// Update average latency&#x9;&#x9;&#xD;&#xA;average_latency = total_latency / ((double) total_requests_received);&#xD;&#xA;cf_trace_report(&quot;Average latency = %.0f ns&quot;, average_latency.to_scalar(CF_NS));&#xD;&#xA;intra_rack_average_latency = intra_rack_total_latency / ((double) intra_rack_total_requests_received);&#xD;&#xA;cf_trace_report(&quot;Intra rack requests average latency = %.0f ns&quot;, intra_rack_average_latency.to_scalar(CF_NS));&#xD;&#xA;intra_server_room_average_latency = intra_server_room_total_latency / ((double) intra_server_room_total_requests_received);&#xD;&#xA;cf_trace_report(&quot;Intra server room requests average latency = %.0f ns&quot;, intra_server_room_average_latency.to_scalar(CF_NS));&#xD;&#xA;outside_server_room_average_latency = outside_server_room_total_latency / ((double) outside_server_room_total_requests_received);&#xD;&#xA;cf_trace_report(&quot;Outside server room requests average latency = %.0f ns&quot;, outside_server_room_average_latency.to_scalar(CF_NS));&#xD;&#xA;&#xD;&#xA;#endif&#xD;&#xA;\" version=\"6.2.0_r1_20160630-2100\" destructor=\"\" declarations=\"std::chrono::high_resolution_clock::time_point t_start;\" definitions=\"void merge_and_sort_vector(std::vector&lt;cf_dt::cf_time>&amp; vect1,&#xD;&#xA;&#x9;&#x9;std::vector&lt;cf_dt::cf_time>&amp; vect2) {&#xD;&#xA;&#x9;vect1.insert(vect1.begin(), vect2.begin(), vect2.end());&#xD;&#xA;}\" preElaboration=\"\" initializations=\"&#x9;// Init variables used to generate transaction rate&#xD;&#xA;&#x9;min_waiting_time = 1000000000 / ( dpTransactionRate + dpTransactionRateInterval ) ;&#xD;&#xA;&#x9;max_waiting_time = 1000000000 / ( dpTransactionRate - dpTransactionRateInterval ) ;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Init variables used to count transaction&#xD;&#xA;&#x9;nb_trans_routed_by_ToR_Switch = 0;&#xD;&#xA;&#x9;nb_trans_routed_by_AGG_Switch = 0;&#xD;&#xA;&#x9;nb_trans_routed_by_Data_Center_Switch = 0;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;// Init variables used to compute latency&#xD;&#xA;&#x9;total_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;average_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;intra_rack_total_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;intra_rack_average_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;intra_server_room_total_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;intra_server_room_average_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;outside_server_room_total_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;outside_server_room_average_latency = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#xD;&#xA;&#x9;// Init variables used to compute requests number&#xD;&#xA;&#x9;/*total_requests_sent = (dpServerRoomNb + 1) * (dpRackNb + 1)&#xD;&#xA;&#x9;&#x9;&#x9;* (dpServerPerRackNb + 1) * dpNbTransPerServer;*/&#xD;&#xA;&#x9;total_requests_received = 0;&#xD;&#xA;&#x9;intra_rack_total_requests_received = 0;&#xD;&#xA;&#x9;intra_server_room_total_requests_received = 0;&#xD;&#xA;&#xD;&#xA;&#x9;// Variables used to compute switches loads&#xD;&#xA;&#x9;simulation_duration = cf_dt::cf_time(0,CF_SEC);&#xD;&#xA;&#x9;data_center_switch_running_time = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;data_center_switch_load = 0;&#xD;&#xA;&#x9;agg_switch_running_time = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;agg_switch_load = 0;&#xD;&#xA;&#x9;tor_switch_running_time = cf_dt::cf_time(0, CF_SEC);&#xD;&#xA;&#x9;tor_switch_load = 0;&#xD;&#xA;&#x9;\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" postElaboration=\"// Start chrono&#xD;&#xA;t_start = std::chrono::high_resolution_clock::now();\" globalTypeDeclarations=\"// Transaction structure used in producer&#xD;&#xA;struct transaction_struct{&#xD;&#xA;&#x9;&#x9;float&#x9;IntraServerRoomDraw;&#xD;&#xA;&#x9;&#x9;float&#x9;IntraRackDraw;&#xD;&#xA;&#x9;&#x9;int&#x9;&#x9;RackNumber;&#xD;&#xA;&#x9;&#x9;int&#x9;&#x9;ServerNumber;&#xD;&#xA;&#x9;&#x9;int &#x9;ServerRoomNumber;&#xD;&#xA;&#x9;&#x9;int &#x9;WaitingTime;&#xD;&#xA;&#x9;};\" globalDeclarations=\"// Store end of execution time for each producer&#xD;&#xA;extern std::vector&lt;cf_dt::cf_time> producer_exec_time;&#xD;&#xA;&#xD;&#xA;// Variables used to count transaction&#xD;&#xA;extern unsigned int nb_trans_routed_by_ToR_Switch;&#xD;&#xA;extern unsigned int nb_trans_routed_by_AGG_Switch;&#xD;&#xA;extern unsigned int nb_trans_routed_by_Data_Center_Switch;&#xD;&#xA;&#xD;&#xA;// Variables used to generate transaction rate&#xD;&#xA;extern unsigned int min_waiting_time;&#xD;&#xA;extern unsigned int max_waiting_time;&#xD;&#xA;&#xD;&#xA;// Variables used to compute latency&#xD;&#xA;extern cf_dt::cf_time total_latency;&#xD;&#xA;extern cf_dt::cf_time average_latency;&#xD;&#xA;extern cf_dt::cf_time intra_rack_total_latency;&#xD;&#xA;extern cf_dt::cf_time intra_rack_average_latency;&#xD;&#xA;extern cf_dt::cf_time intra_server_room_total_latency;&#xD;&#xA;extern cf_dt::cf_time intra_server_room_average_latency;&#xD;&#xA;extern cf_dt::cf_time outside_server_room_total_latency;&#xD;&#xA;extern cf_dt::cf_time outside_server_room_average_latency;&#xD;&#xA;&#xD;&#xA;// Variables used to compute requests number&#xD;&#xA;extern int total_requests_sent;&#xD;&#xA;extern int total_requests_received;&#xD;&#xA;extern int intra_rack_total_requests_received;&#xD;&#xA;extern int intra_server_room_total_requests_received;&#xD;&#xA;extern int outside_server_room_total_requests_received;&#xD;&#xA;&#xD;&#xA;// Variables used to compute switches loads&#xD;&#xA;extern cf_dt::cf_time simulation_duration;&#xD;&#xA;extern cf_dt::cf_time data_center_switch_running_time;&#xD;&#xA;extern double data_center_switch_load;&#xD;&#xA;extern cf_dt::cf_time agg_switch_running_time;&#xD;&#xA;extern double agg_switch_load;&#xD;&#xA;extern cf_dt::cf_time tor_switch_running_time;&#xD;&#xA;extern double tor_switch_load;&#xD;&#xA;&#xD;&#xA;// functions&#xD;&#xA;extern void merge_vector(std::vector&lt;cf_dt::cf_time>&amp; vect1,&#xD;&#xA; &#x9;&#x9;std::vector&lt;cf_dt::cf_time>&amp; vect2);\" globalDefinitions=\"// Variables used to count transaction&#xD;&#xA;unsigned int nb_trans_routed_by_ToR_Switch;&#xD;&#xA;unsigned int nb_trans_routed_by_AGG_Switch;&#xD;&#xA;unsigned int nb_trans_routed_by_Data_Center_Switch;&#xD;&#xA;&#xD;&#xA;// Variables used to generate transaction rate&#xD;&#xA;unsigned int min_waiting_time;&#xD;&#xA;unsigned int max_waiting_time;&#xD;&#xA;&#xD;&#xA;// Variables used to compute latency&#xD;&#xA;cf_dt::cf_time total_latency;&#xD;&#xA;cf_dt::cf_time average_latency;&#xD;&#xA;cf_dt::cf_time intra_rack_total_latency;&#xD;&#xA;cf_dt::cf_time intra_rack_average_latency;&#xD;&#xA;cf_dt::cf_time intra_server_room_total_latency;&#xD;&#xA;cf_dt::cf_time intra_server_room_average_latency;&#xD;&#xA;cf_dt::cf_time outside_server_room_total_latency;&#xD;&#xA;cf_dt::cf_time outside_server_room_average_latency;&#xD;&#xA;&#xD;&#xA;// Variables used to compute requests number&#xD;&#xA;int total_requests_sent;&#xD;&#xA;int total_requests_received;&#xD;&#xA;int intra_rack_total_requests_received;&#xD;&#xA;int intra_server_room_total_requests_received;&#xD;&#xA;int outside_server_room_total_requests_received;&#xD;&#xA;&#xD;&#xA;// Variables used to compute switches loads&#xD;&#xA;cf_dt::cf_time simulation_duration; // LSS_FUNCTION_MERGE std::max&#xD;&#xA;cf_dt::cf_time data_center_switch_running_time;&#xD;&#xA;double data_center_switch_load;&#xD;&#xA;cf_dt::cf_time agg_switch_running_time;&#xD;&#xA;double agg_switch_load;&#xD;&#xA;cf_dt::cf_time tor_switch_running_time;&#xD;&#xA;double tor_switch_load;&#xD;&#xA;std::vector&lt;cf_dt::cf_time> producer_exec_time; // LSS_VECTOR_MERGE merge_and_sort_vector &lt;cf_dt::cf_time>&#xD;&#xA;&#xD;&#xA;// functions&#xD;&#xA;void merge_and_sort_vector(std::vector&lt;cf_dt::cf_time>&amp; vect1, std::vector&lt;cf_dt::cf_time>&amp; vect2);\">\n  <annotations xmi:id=\"_Q37o0CWtEeev0Li77iEQPw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_vu_GENBSEeeQ47z_rZ5Z9w\" key=\"cofluent.managedbuild.config.msvc2013.exe.release.1393042231\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_gf_bcCWwEeev0Li77iEQPw\" name=\"DefPacket\" definition=\"typedef struct{&#xA;&#x9;int dstServerRoom;&#xA;&#x9;int dstRack;&#xA;&#x9;int dstServer;&#xA;&#x9;int srcServerRoom;&#xA;&#x9;int srcRack;&#xA;&#x9;int srcServer;&#xA;&#x9;cf_dt::cf_time time_stamp;&#xA;}DefPacket;\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_Qy1GYCWtEeev0Li77iEQPw\" name=\"datacenterSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_otdkUJ7fEee9xrF0SYRbXA\" name=\"ServerRoom\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <max xmi:id=\"_yrBBASlNEem2ibKpCX7t4Q\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n      <min xmi:id=\"_yrBBAClNEem2ibKpCX7t4Q\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_oEV7IJ9pEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_YK3hAJ9pEeeTKepLG9_cVg\" ports=\"_4_9YoJ9yEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <ports xmi:id=\"_otRjYJ9pEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_YoPZgJ9pEeeTKepLG9_cVg\" ports=\"_4JgRwJ9yEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_tR7OAJ7fEee9xrF0SYRbXA\" name=\"ServerRoomSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSAtkJ7fEee9xrF0SYRbXA\" name=\"AGGSwitch\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_tSAtkp7fEee9xrF0SYRbXA\" name=\"MsgQToAggSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tR-RXJ7fEee9xrF0SYRbXA\" ports=\"_YeLHKJ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_tSAtlZ7fEee9xrF0SYRbXA\" name=\"MsgQToRack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tSJQeZ7fEee9xrF0SYRbXA\" ports=\"_YeLHxJ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_4JgRwJ9yEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_otRjYJ9pEeeTKepLG9_cVg\" ports=\"_YeLGN59uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_4_9YoJ9yEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_oEV7IJ9pEeeTKepLG9_cVg\" ports=\"_YeLFrp9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_tSAtmJ7fEee9xrF0SYRbXA\" name=\"AGGSwitchSt\">\n            <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_YeLFQJ9uEeeTKepLG9_cVg\" name=\"RoutingFunction\" constructor=\"\" destructor=\"\" declarations=\"int server_room_id;\" definitions=\"\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_cp_index();&#xD;&#xA;//cf_trace_report(&quot;AGG switch router : server room %d&quot;,server_room_id);\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" destination=\"    // Update agg switch running time&#xA;   &#x9;agg_switch_running_time += cf_time(dpAGGSwitchRoutingTime,CF_NS) + cf_time(2,CF_NS);&#xA;    &#xA;    // Increment nb of trans &#xA;    nb_trans_routed_by_AGG_Switch++;&#xA;    &#xA;    // Get rack destination&#xA;    int dest_server_room = (((cft_defpacket*) _trans)->get_data_ptr())->dstServerRoom;&#xA;    if( dest_server_room == server_room_id ) // inside server room&#xA;    {&#xA;    &#x9;// Get server destination&#xA;    &#x9;int dest_rack = (((cft_defpacket*) _trans)->get_data_ptr())->dstRack;&#xA;&#x9;&#x9;string dest_string = &quot;MsgQOutboundRack[&quot; + std::to_string(dest_rack) + &quot;]&quot;;&#xA;&#x9;&#x9;return dest_string;&#xA;    }&#xA;    else // outside server ro&#xA;    {&#xA;    &#x9;string dest_string = &quot;MsgQOutboundDataCenterSwitch&quot;;&#xA;    &#x9;return dest_string;&#xA;    }    \" concurrency=\"dpAGGSwitchRoutingConcurrency\" routingTime=\"dpAGGSwitchRoutingTime ns\">\n              <ports xmi:id=\"_YeLFQ59uEeeTKepLG9_cVg\" name=\"MsgQInboundRack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_YeLGy59uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLFRp9uEeeTKepLG9_cVg\" name=\"MsgQOutboundRack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_YeLGoZ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLFSZ9uEeeTKepLG9_cVg\" name=\"MsgQInboundDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_YeLGt59uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLFTJ9uEeeTKepLG9_cVg\" name=\"MsgQOutboundDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_YeLGjZ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_YeLFqp9uEeeTKepLG9_cVg\" name=\"OutboundDataCenterSwitch\" declarations=\"int server_room_id;\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_cp_index();\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <ports xmi:id=\"_YeLFq59uEeeTKepLG9_cVg\" name=\"MsgQOutboundDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_YeLFyJ9uEeeTKepLG9_cVg\" relations=\"_YeLGjZ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLFrp9uEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_YeLFs59uEeeTKepLG9_cVg\" port=\"_4_9YoJ9yEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_YeLFsZ9uEeeTKepLG9_cVg\" name=\"OutboundDataCenterSwitchBh\" firstStatement=\"_YeLFtZ9uEeeTKepLG9_cVg\">\n                <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_YeLFsp9uEeeTKepLG9_cVg\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_YeLF1J9uEeeTKepLG9_cVg\">\n                  <output xmi:id=\"_YeLFs59uEeeTKepLG9_cVg\" name=\"OutputSelectorOutput\" port=\"_YeLFrp9uEeeTKepLG9_cVg\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLFtZ9uEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_YeLFsZ9uEeeTKepLG9_cVg\" next=\"_YeLFvZ9uEeeTKepLG9_cVg\" algorithm=\"&#x9;//cf_trace_report(&quot;AGG switch outbound : server room %d&quot;,server_room_id);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_YeLFvZ9uEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_YeLFyJ9uEeeTKepLG9_cVg\" lastStatement=\"_YeLF1J9uEeeTKepLG9_cVg\" previous=\"_YeLFtZ9uEeeTKepLG9_cVg\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLFv59uEeeTKepLG9_cVg\" name=\"process\" previous=\"_YeLFyJ9uEeeTKepLG9_cVg\" next=\"_YeLF1J9uEeeTKepLG9_cVg\" algorithm=\"&#x9;MsgQToDataCenterSwitch = MsgQOutboundDataCenterSwitch; \" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_YeLFyJ9uEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_YeLFvZ9uEeeTKepLG9_cVg\" next=\"_YeLFv59uEeeTKepLG9_cVg\" port=\"_YeLFq59uEeeTKepLG9_cVg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_YeLF1J9uEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_YeLFvZ9uEeeTKepLG9_cVg\" previous=\"_YeLFv59uEeeTKepLG9_cVg\" outputSelector=\"_YeLFsp9uEeeTKepLG9_cVg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_YeLGNp9uEeeTKepLG9_cVg\" name=\"InboundDataCenterSwitch\" constructor=\"\" destructor=\"\" declarations=\"int server_room_id;\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_cp_index();\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <ports xmi:id=\"_YeLGN59uEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_FCY1YBMGEeiA8eK-4UEaNw\" port=\"_4JgRwJ9yEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLGOp9uEeeTKepLG9_cVg\" name=\"MsgQInboundDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_YeLGZ59uEeeTKepLG9_cVg\" relations=\"_YeLGt59uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_YeLGPZ9uEeeTKepLG9_cVg\" name=\"InboundDataCenterSwitchBh\" firstStatement=\"_YeLGSJ9uEeeTKepLG9_cVg\">\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_EdgmsBMGEeiA8eK-4UEaNw\" name=\"InstanceInSelector\" inputAction=\"_YeLGW59uEeeTKepLG9_cVg\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_FCY1YBMGEeiA8eK-4UEaNw\" name=\"InputSelectorInput\" port=\"_YeLGN59uEeeTKepLG9_cVg\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLGSJ9uEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_YeLGPZ9uEeeTKepLG9_cVg\" next=\"_YeLGUJ9uEeeTKepLG9_cVg\" algorithm=\"&#x9;//cf_trace_report(&quot;AGG switch inbound : server room %d&quot;,server_room_id);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_YeLGUJ9uEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_YeLGW59uEeeTKepLG9_cVg\" lastStatement=\"_YeLGZ59uEeeTKepLG9_cVg\" previous=\"_YeLGSJ9uEeeTKepLG9_cVg\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLGUp9uEeeTKepLG9_cVg\" name=\"process\" previous=\"_YeLGW59uEeeTKepLG9_cVg\" next=\"_YeLGZ59uEeeTKepLG9_cVg\" algorithm=\"&#x9;assert( server_room_id == MsgQToServerRoom.dstServerRoom);&#xD;&#xA;&#x9;MsgQInboundDataCenterSwitch = MsgQToServerRoom; \" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_YeLGW59uEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_YeLGUJ9uEeeTKepLG9_cVg\" next=\"_YeLGUp9uEeeTKepLG9_cVg\" inputSelector=\"_EdgmsBMGEeiA8eK-4UEaNw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_YeLGZ59uEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_YeLGUJ9uEeeTKepLG9_cVg\" previous=\"_YeLGUp9uEeeTKepLG9_cVg\" port=\"_YeLGOp9uEeeTKepLG9_cVg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_YeLHIp9uEeeTKepLG9_cVg\" name=\"InboundRack\" includes=\"\" declarations=\"int server_room_id;&#xD;&#xA;int rack_id;\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_cp_index();&#xD;&#xA;rack_id = get_cp_index();\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <max xmi:id=\"_Udx8gZ9vEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_Udx8gJ9vEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <ports xmi:id=\"_YeLHJZ9uEeeTKepLG9_cVg\" name=\"MsgQInboundRack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_YeLHN59uEeeTKepLG9_cVg\" relations=\"_YeLGy59uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLHKJ9uEeeTKepLG9_cVg\" name=\"MsgQToAggSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_YeLHLZ9uEeeTKepLG9_cVg\" port=\"_tSAtkp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_YeLHK59uEeeTKepLG9_cVg\" name=\"InboundRackBh\" firstStatement=\"_YeLHOZ9uEeeTKepLG9_cVg\">\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_YeLHLJ9uEeeTKepLG9_cVg\" name=\"InstanceInSelector\" inputAction=\"_YeLHTJ9uEeeTKepLG9_cVg\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_YeLHLZ9uEeeTKepLG9_cVg\" name=\"InputSelectorInput\" port=\"_YeLHKJ9uEeeTKepLG9_cVg\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_YeLHNp9uEeeTKepLG9_cVg\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_YeLHWJ9uEeeTKepLG9_cVg\">\n                  <output xmi:id=\"_YeLHN59uEeeTKepLG9_cVg\" name=\"OutputSelectorOutput\" port=\"_YeLHJZ9uEeeTKepLG9_cVg\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLHOZ9uEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_YeLHK59uEeeTKepLG9_cVg\" next=\"_YeLHQZ9uEeeTKepLG9_cVg\" algorithm=\"&#x9;//cf_trace_report(&quot;AGG switch inbound : server room %d rack %d&quot;,server_room_id,rack_id);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_YeLHQZ9uEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_YeLHTJ9uEeeTKepLG9_cVg\" lastStatement=\"_YeLHWJ9uEeeTKepLG9_cVg\" previous=\"_YeLHOZ9uEeeTKepLG9_cVg\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLHQ59uEeeTKepLG9_cVg\" name=\"process\" previous=\"_YeLHTJ9uEeeTKepLG9_cVg\" next=\"_YeLHWJ9uEeeTKepLG9_cVg\" algorithm=\"&#x9;MsgQInboundRack_trans = MsgQToAggSwitch_trans;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_YeLHTJ9uEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_YeLHQZ9uEeeTKepLG9_cVg\" next=\"_YeLHQ59uEeeTKepLG9_cVg\" inputSelector=\"_YeLHLJ9uEeeTKepLG9_cVg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_YeLHWJ9uEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_YeLHQZ9uEeeTKepLG9_cVg\" previous=\"_YeLHQ59uEeeTKepLG9_cVg\" outputSelector=\"_YeLHNp9uEeeTKepLG9_cVg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_YeLHv59uEeeTKepLG9_cVg\" name=\"OutboundRack\" constructor=\"\" declarations=\"int server_room_id;&#xD;&#xA;int rack_id;\" definitions=\"\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_cp_index();&#xD;&#xA;rack_id = get_cp_index();\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <max xmi:id=\"_YeU2XJ9uEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_YeU2W59uEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <ports xmi:id=\"_YeLHxJ9uEeeTKepLG9_cVg\" name=\"MsgQToRack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_YeLHzJ9uEeeTKepLG9_cVg\" port=\"_tSAtlZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_YeLHx59uEeeTKepLG9_cVg\" name=\"MsgQOutboundRack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_YeLHz59uEeeTKepLG9_cVg\" relations=\"_YeLGoZ9uEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_YeLHyp9uEeeTKepLG9_cVg\" name=\"OutboundRackBh\" firstStatement=\"_YeLH2J9uEeeTKepLG9_cVg\">\n                <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_YeLHy59uEeeTKepLG9_cVg\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_YeLH959uEeeTKepLG9_cVg\">\n                  <output xmi:id=\"_YeLHzJ9uEeeTKepLG9_cVg\" name=\"OutputSelectorOutput\" port=\"_YeLHxJ9uEeeTKepLG9_cVg\"/>\n                </selectors>\n                <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_YeLHzp9uEeeTKepLG9_cVg\" name=\"InstanceInSelector\" inputAction=\"_YeLH659uEeeTKepLG9_cVg\" instanceNumber=\"SELF\">\n                  <inputs xmi:id=\"_YeLHz59uEeeTKepLG9_cVg\" name=\"InputSelectorInput\" port=\"_YeLHx59uEeeTKepLG9_cVg\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                </selectors>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLH2J9uEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_YeLHyp9uEeeTKepLG9_cVg\" next=\"_YeLH4J9uEeeTKepLG9_cVg\" algorithm=\"&#x9;//cf_trace_report(&quot;AGG switch outbound : server room %d rack %d&quot;,server_room_id,rack_id);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_YeLH4J9uEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_YeLH659uEeeTKepLG9_cVg\" lastStatement=\"_YeLH959uEeeTKepLG9_cVg\" previous=\"_YeLH2J9uEeeTKepLG9_cVg\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_YeLH4p9uEeeTKepLG9_cVg\" name=\"process\" previous=\"_YeLH659uEeeTKepLG9_cVg\" next=\"_YeLH959uEeeTKepLG9_cVg\" algorithm=\"&#x9;MsgQToRack_trans = MsgQOutboundRack_trans;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_YeLH659uEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_YeLH4J9uEeeTKepLG9_cVg\" next=\"_YeLH4p9uEeeTKepLG9_cVg\" inputSelector=\"_YeLHzp9uEeeTKepLG9_cVg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_YeLH959uEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_YeLH4J9uEeeTKepLG9_cVg\" previous=\"_YeLH4p9uEeeTKepLG9_cVg\" outputSelector=\"_YeLHy59uEeeTKepLG9_cVg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YeLGjZ9uEeeTKepLG9_cVg\" name=\"MsgQOutboundDataCenterSwitch\" ports=\"_YeLFq59uEeeTKepLG9_cVg _YeLFTJ9uEeeTKepLG9_cVg\" capacity=\"dpAggSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yxTdYMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YeLGoZ9uEeeTKepLG9_cVg\" name=\"MsgQOutboundRack\" ports=\"_YeLFRp9uEeeTKepLG9_cVg _YeLHx59uEeeTKepLG9_cVg\" capacity=\"dpAggSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <max xmi:id=\"_QjmwgZ9wEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_QjmwgJ9wEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywu1oMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YeLGt59uEeeTKepLG9_cVg\" name=\"MsgQInboundDataCenterSwitch\" ports=\"_YeLGOp9uEeeTKepLG9_cVg _YeLFSZ9uEeeTKepLG9_cVg\" capacity=\"dpAggSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yxGCAMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YeLGy59uEeeTKepLG9_cVg\" name=\"MsgQInboundRack\" ports=\"_YeLHJZ9uEeeTKepLG9_cVg _YeLFQ59uEeeTKepLG9_cVg\" capacity=\"dpAggSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <max xmi:id=\"_VCWMsZ9wEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_VCWMsJ9wEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywygAMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEX8J7fEee9xrF0SYRbXA\" name=\"Rack\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <max xmi:id=\"_tSdZhJ7fEee9xrF0SYRbXA\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n          <min xmi:id=\"_tSdZg57fEee9xrF0SYRbXA\" integerLimit=\"0\"/>\n          <ports xmi:id=\"_tSEX9Z7fEee9xrF0SYRbXA\" name=\"MsgQToRack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tSJQeZ7fEee9xrF0SYRbXA\" ports=\"_tSEYpp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_tSEX-J7fEee9xrF0SYRbXA\" name=\"MsgQToAggSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tR-RXJ7fEee9xrF0SYRbXA\" ports=\"_tSEYr57fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_tSEX-57fEee9xrF0SYRbXA\" name=\"RackSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEX_J7fEee9xrF0SYRbXA\" name=\"Server\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <max xmi:id=\"_tSdZhp7fEee9xrF0SYRbXA\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_tSdZhZ7fEee9xrF0SYRbXA\" integerLimit=\"0\"/>\n              <ports xmi:id=\"_tSEYAZ7fEee9xrF0SYRbXA\" name=\"MsgQServerToToRSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tSFmHZ7fEee9xrF0SYRbXA\" ports=\"_tSEYC57fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_tSEYBJ7fEee9xrF0SYRbXA\" name=\"MsgQToServer\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tSFmKp7fEee9xrF0SYRbXA\" ports=\"_tSEYUJ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_tSEYB57fEee9xrF0SYRbXA\" name=\"ServerSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEYCJ7fEee9xrF0SYRbXA\" name=\"Producer\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"// components ID&#xD;&#xA;int server_room_id; &#xD;&#xA;int rack_id;&#xD;&#xA;int server_id;&#xD;&#xA;// Server transaction count&#xD;&#xA;int local_transaction_count;&#xD;&#xA;int local_transaction_outside_rack_count;&#xD;&#xA;int local_transaction_outside_server_room_count;&#xD;&#xA;// Store waiting time for produce operation&#xD;&#xA;int waiting_time;\" definitions=\"\" preElaboration=\"\" initializations=\"// Initialize components ID&#xD;&#xA;server_room_id = get_container()->get_container()->get_container()->get_cp_index();&#xD;&#xA;rack_id = get_container()->get_container()->get_cp_index();&#xD;&#xA;server_id = get_container()->get_cp_index();&#xD;&#xA;&#xD;&#xA;// Get transaction data&#xD;&#xA;local_transaction_count = 0;&#xD;&#xA;local_transaction_outside_rack_count=0;&#xD;&#xA;local_transaction_outside_server_room_count=0;&#xD;&#xA;\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <ports xmi:id=\"_tSEYC57fEee9xrF0SYRbXA\" name=\"MsgQServerToToRSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_tSEYEJ7fEee9xrF0SYRbXA\" port=\"_tSEYAZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSEYDp7fEee9xrF0SYRbXA\" name=\"ProducerBh\" firstStatement=\"_tSEYEp7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_tSEYD57fEee9xrF0SYRbXA\" name=\"InstanceOutSelector\" instanceNumber=\"server_id\" outputAction=\"_tSEYJp7fEee9xrF0SYRbXA\">\n                      <output xmi:id=\"_tSEYEJ7fEee9xrF0SYRbXA\" name=\"OutputSelectorOutput\" port=\"_tSEYC57fEee9xrF0SYRbXA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYEp7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSEYDp7fEee9xrF0SYRbXA\" next=\"_tSEYG57fEee9xrF0SYRbXA\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSEYG57fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSEYHZ7fEee9xrF0SYRbXA\" lastStatement=\"_tSEYJp7fEee9xrF0SYRbXA\" previous=\"_tSEYEp7fEee9xrF0SYRbXA\" next=\"_tSEYMZ7fEee9xrF0SYRbXA\" condition=\"local_transaction_count &lt; dpNbTransPerServer\" type=\"CONDITIONAL\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYHZ7fEee9xrF0SYRbXA\" name=\"produce\" isFirstOf=\"_tSEYG57fEee9xrF0SYRbXA\" next=\"_tSEYJp7fEee9xrF0SYRbXA\" algorithm=\"&#x9;/*&#xA;&#x9; * Produce transaction according to :&#xA;&#x9; * -> dpIntraRackFactor&#xA;&#x9; * -> dpIntraServerRoomFactor&#xA;&#x9; * -> dpTransactionRate and dpTransactionRateInterval&#xA;&#x9; * */&#xA;&#x9; &#x9;&#xA;&#x9;transaction_struct trans ;&#xA;&#x9;// Fill transaction with random data&#xA;&#x9;trans.IntraRackDraw = cf_util_rand_float(0,1);&#xA;&#x9;trans.IntraServerRoomDraw = cf_util_rand_float(0,1);&#xA;&#x9;trans.ServerNumber = cf_util_rand_int(0,dpServerPerRackNb.get_value());&#xA;&#x9;do{ // get a server number which is not server_id&#xA;&#x9;&#x9;trans.ServerNumber = cf_util_rand_int(0,dpServerPerRackNb.get_value());&#xA;&#x9;}while(trans.ServerNumber == server_id);&#xA;&#x9;do{ // get a rack number which is not rack_id&#xA;&#x9;&#x9;trans.RackNumber = cf_util_rand_int(0,dpRackNb.get_value());&#xA;&#x9;}while(trans.RackNumber == rack_id);&#xA;&#x9;do{ // get a server room number which is not server_room_id&#xA;&#x9;&#x9;trans.ServerRoomNumber = cf_util_rand_int(0,dpServerRoomNb.get_value());&#xA;&#x9;}while( trans.ServerRoomNumber == server_room_id);&#xA;&#x9;trans.WaitingTime = cf_util_rand_int(min_waiting_time,max_waiting_time);&#xA;&#x9;&#xA;&#x9;// Update waiting time of this operation&#xA;&#x9;waiting_time = trans.WaitingTime;&#xA;&#x9;&#xA;&#x9;local_transaction_count++;&#xA;&#x9;total_requests_sent++;&#xA;&#x9;// Check if transaction is inside rack&#xA;&#x9;if ( trans.IntraRackDraw &lt;= dpIntraRackFactor.get_value() )  // inside rack&#xA;&#x9;{&#xA;&#x9;&#x9;MsgQServerToToRSwitch.dstServerRoom = server_room_id;&#xA;&#x9;&#x9;MsgQServerToToRSwitch.dstRack = rack_id;&#xA;&#x9;&#x9;MsgQServerToToRSwitch.dstServer = trans.ServerNumber;&#xA;&#x9;} &#xA;&#x9;else // outside rack&#xA;&#x9;{&#xA;&#x9;&#x9;local_transaction_outside_rack_count++;&#xA;&#x9;&#x9;MsgQServerToToRSwitch.dstRack = trans.RackNumber;&#xA;&#x9;&#x9;cf_assert(trans.RackNumber != rack_id,&quot;Producer&quot;,CF_ERROR_USER_ASSERT,&quot;Error in parameter generation for destination rack&quot;);&#xA;&#x9;&#x9;MsgQServerToToRSwitch.dstServer = trans.ServerNumber;&#xA;&#x9;&#x9;// Check if transaction is intra server room&#xA;&#x9;&#x9;if ( trans.IntraServerRoomDraw &lt;= dpIntraServerRoomFactor.get_value() ) // inside server room &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;MsgQServerToToRSwitch.dstServerRoom = server_room_id;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;else // outside server room&#xA;&#x9;&#x9;{&#xA;&#x9;   &#x9;&#x9;local_transaction_outside_server_room_count++;&#xA;&#x9;   &#x9;&#x9;MsgQServerToToRSwitch.dstServerRoom = trans.ServerRoomNumber;&#xA;&#x9;   &#x9;&#x9;cf_assert(trans.ServerRoomNumber != server_room_id,&quot;Producer&quot;,CF_ERROR_USER_ASSERT,&quot;Error in parameter generation for destination server room&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;//Set the source info in the packet&#xA;&#x9;MsgQServerToToRSwitch.srcServerRoom = server_room_id;&#xA;&#x9;MsgQServerToToRSwitch.srcRack = rack_id;&#xA;&#x9;MsgQServerToToRSwitch.srcServer = server_id;&#xA;&#x9;//Set request time stamp&#xA;&#x9;MsgQServerToToRSwitch.time_stamp = cf_time_stamp() + cf_dt::cf_time(waiting_time, CF_NS);&#xA;&#x9;&#x9;&#x9;\" executionTime=\"waiting_time ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tSEYJp7fEee9xrF0SYRbXA\" name=\"OutAction\" isLastOf=\"_tSEYG57fEee9xrF0SYRbXA\" previous=\"_tSEYHZ7fEee9xrF0SYRbXA\" outputSelector=\"_tSEYD57fEee9xrF0SYRbXA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYMZ7fEee9xrF0SYRbXA\" name=\"display_result\" previous=\"_tSEYG57fEee9xrF0SYRbXA\" algorithm=\"cf_trace_report(&quot;End of %d transactions on server room %d rack %d server %d at %s. Average transaction rate is %f trans per sec&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;local_transaction_count, server_room_id ,rack_id, server_id,&#xA;&#x9;&#x9;&#x9;&#x9;cf_time_stamp().to_c_str(),&#xA;&#x9;&#x9;&#x9;&#x9;local_transaction_count / cf_time_stamp().to_scalar(CF_SEC)  &#xA;&#x9;&#x9;&#x9;);&#xA;&#x9;&#x9;&#x9;&#xA;// Add time to the vector&#xA;producer_exec_time.push_back(cf_time_stamp());\" executionTime=\"0 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEYTp7fEee9xrF0SYRbXA\" name=\"Consumer\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"// components ID&#xD;&#xA;int server_room_id; &#xD;&#xA;int rack_id;&#xD;&#xA;int server_id;&#xD;&#xA;&#xD;&#xA;cf_dt::cf_time latency; &#xD;&#xA;&#xD;&#xA;\" preElaboration=\"\" initializations=\"// Initialize components ID&#xD;&#xA;server_room_id = get_container()->get_container()->get_container()->get_cp_index();&#xD;&#xA;rack_id = get_container()->get_container()->get_cp_index();&#xD;&#xA;server_id = get_container()->get_cp_index();&#xD;&#xA;// Init latency&#xD;&#xA;latency = cf_dt::cf_time(0, CF_SEC);\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <ports xmi:id=\"_tSEYUJ7fEee9xrF0SYRbXA\" name=\"MsgQToServer\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_tSEYVZ7fEee9xrF0SYRbXA\" port=\"_tSEYBJ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSEYU57fEee9xrF0SYRbXA\" name=\"ConsumerBh\" firstStatement=\"_tSEYXp7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_tSEYVJ7fEee9xrF0SYRbXA\" name=\"InstanceInSelector\" inputAction=\"_tSEYcp7fEee9xrF0SYRbXA\" instanceNumber=\"server_id\">\n                      <inputs xmi:id=\"_tSEYVZ7fEee9xrF0SYRbXA\" name=\"InputSelectorInput\" port=\"_tSEYUJ7fEee9xrF0SYRbXA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYXp7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSEYU57fEee9xrF0SYRbXA\" next=\"_tSEYZ57fEee9xrF0SYRbXA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSEYZ57fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSEYcp7fEee9xrF0SYRbXA\" lastStatement=\"_tSEYaZ7fEee9xrF0SYRbXA\" previous=\"_tSEYXp7fEee9xrF0SYRbXA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYaZ7fEee9xrF0SYRbXA\" name=\"consume\" isLastOf=\"_tSEYZ57fEee9xrF0SYRbXA\" previous=\"_tSEYcp7fEee9xrF0SYRbXA\" algorithm=\"&#x9;// Increment number of requests received&#xA;&#x9;total_requests_received++;&#xA;&#x9;&#xA;&#x9;// Assert that the request is received in the correct server &#xA;&#x9;cf_assert( ((MsgQToServer.dstServerRoom == server_room_id) &amp;&amp; (MsgQToServer.dstRack == rack_id) &amp;&amp;  (MsgQToServer.dstServer == server_id)) ,&#xA;&#x9;&#x9;&#x9;&#x9;&quot;Consumer&quot;, CF_ERROR_USER_ASSERT,&#xA;&#x9;&#x9;&#x9;&#x9;&quot; !!!! Server room %d Rack %d Server %d received wrong message with dest info server room %d rack %d server %d !!!!&quot;,&#xA;&#x9;&#x9;&#x9;&#x9;server_room_id,rack_id, server_id, MsgQToServer.dstServerRoom, MsgQToServer.dstRack, MsgQToServer.dstServer&#xA;&#x9;&#x9;&#x9;);&#xA;&#x9;&#xA;&#x9;// Update latencies&#xA;&#x9;latency =  cf_time_stamp() - MsgQToServer.time_stamp;&#xA;&#x9;total_latency += latency;&#xA;&#x9;&#xA;&#x9;// Update inside rack latency&#xA;&#x9;if(MsgQToServer.srcRack == rack_id &amp;&amp; MsgQToServer.srcServerRoom == server_room_id )&#xA;&#x9;{&#xA;&#x9;&#x9;intra_rack_total_requests_received++;&#xA;&#x9;&#x9;intra_rack_total_latency += latency;&#xA;&#x9;}&#xA;&#x9;else if(MsgQToServer.srcServerRoom == server_room_id ) // Update inside server room latency&#xA;&#x9;{&#xA;&#x9;&#x9;intra_server_room_total_requests_received++;&#xA;&#x9;&#x9;intra_server_room_total_latency += latency;&#xA;&#x9;}&#xA;&#x9;else // Update outside server room latency&#xA;&#x9;{&#xA;&#x9;&#x9;outside_server_room_total_requests_received++;&#xA;&#x9;&#x9;outside_server_room_total_latency += latency;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;// Update the simulation duration. &#xA;&#x9;simulation_duration = cf_time_stamp();&#xA;&#x9;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_tSEYcp7fEee9xrF0SYRbXA\" name=\"InAction\" isFirstOf=\"_tSEYZ57fEee9xrF0SYRbXA\" next=\"_tSEYaZ7fEee9xrF0SYRbXA\" inputSelector=\"_tSEYVJ7fEee9xrF0SYRbXA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEYpJ7fEee9xrF0SYRbXA\" name=\"ToRSwitch\" includes=\"\" declarations=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n              <ports xmi:id=\"_tSEYpp7fEee9xrF0SYRbXA\" name=\"MsgQToRack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_tSEX9Z7fEee9xrF0SYRbXA\" ports=\"_tSE_WZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_tSEYqZ7fEee9xrF0SYRbXA\" name=\"MsgQServerToToRSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tSFmHZ7fEee9xrF0SYRbXA\" ports=\"_tSEYuZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_tSEYrJ7fEee9xrF0SYRbXA\" name=\"MsgQToServer\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tSFmKp7fEee9xrF0SYRbXA\" ports=\"_tSE_Bp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <ports xmi:id=\"_tSEYr57fEee9xrF0SYRbXA\" name=\"MsgQToAggSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_tSEX-J7fEee9xrF0SYRbXA\" ports=\"_tSE_qp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_tSEYsp7fEee9xrF0SYRbXA\" name=\"ToRSwitchSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSEYs57fEee9xrF0SYRbXA\" name=\"InboundServer\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int rack_id;\" preElaboration=\"\" initializations=\"rack_id = get_container()->get_container()->get_cp_index();\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <max xmi:id=\"_tSeAkZ7fEee9xrF0SYRbXA\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n                  <min xmi:id=\"_tSeAkJ7fEee9xrF0SYRbXA\" integerLimit=\"0\"/>\n                  <ports xmi:id=\"_tSEYtp7fEee9xrF0SYRbXA\" name=\"MsgQInboundServer\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_tSEYyJ7fEee9xrF0SYRbXA\" relations=\"_tSE_-J7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSEYuZ7fEee9xrF0SYRbXA\" name=\"MsgQServerToToRSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_tSEYvp7fEee9xrF0SYRbXA\" port=\"_tSEYqZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSEYvJ7fEee9xrF0SYRbXA\" name=\"InboundServerBh\" firstStatement=\"_tSEYyp7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_tSEYvZ7fEee9xrF0SYRbXA\" name=\"InstanceInSelector\" inputAction=\"_tSEY3Z7fEee9xrF0SYRbXA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_tSEYvp7fEee9xrF0SYRbXA\" name=\"InputSelectorInput\" port=\"_tSEYuZ7fEee9xrF0SYRbXA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_tSEYx57fEee9xrF0SYRbXA\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_tSEY6Z7fEee9xrF0SYRbXA\">\n                      <output xmi:id=\"_tSEYyJ7fEee9xrF0SYRbXA\" name=\"OutputSelectorOutput\" port=\"_tSEYtp7fEee9xrF0SYRbXA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEYyp7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSEYvJ7fEee9xrF0SYRbXA\" next=\"_tSEY0p7fEee9xrF0SYRbXA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSEY0p7fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSEY3Z7fEee9xrF0SYRbXA\" lastStatement=\"_tSEY6Z7fEee9xrF0SYRbXA\" previous=\"_tSEYyp7fEee9xrF0SYRbXA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSEY1J7fEee9xrF0SYRbXA\" name=\"process\" previous=\"_tSEY3Z7fEee9xrF0SYRbXA\" next=\"_tSEY6Z7fEee9xrF0SYRbXA\" algorithm=\"&#x9;MsgQInboundServer = MsgQServerToToRSwitch;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_tSEY3Z7fEee9xrF0SYRbXA\" name=\"InAction\" isFirstOf=\"_tSEY0p7fEee9xrF0SYRbXA\" next=\"_tSEY1J7fEee9xrF0SYRbXA\" inputSelector=\"_tSEYvZ7fEee9xrF0SYRbXA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tSEY6Z7fEee9xrF0SYRbXA\" name=\"OutAction\" isLastOf=\"_tSEY0p7fEee9xrF0SYRbXA\" previous=\"_tSEY1J7fEee9xrF0SYRbXA\" outputSelector=\"_tSEYx57fEee9xrF0SYRbXA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_tSEZBp7fEee9xrF0SYRbXA\" name=\"RoutingFunction\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int server_room_id;&#xD;&#xA;int rack_id;\" definitions=\"\" preElaboration=\"\" initializations=\"server_room_id = get_container()->get_container()->get_container()->get_cp_index();&#xD;&#xA;rack_id = get_container()->get_container()->get_cp_index();\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" destination=\"    // Update ToR switch running time&#xA;  &#x9;tor_switch_running_time += cf_time(dpToRSwitchRoutingTime,CF_NS) + cf_time(2,CF_NS);&#xA;&#xA;    // Increment transaction number &#xA;    nb_trans_routed_by_ToR_Switch++;&#xA;    &#xA;    // Get server room destination&#xA;    int dest_server_room = (((cft_defpacket*) _trans)->get_data_ptr())->dstServerRoom;&#xA;    if(server_room_id == dest_server_room )// inside server room&#xA;    {&#xA;    &#x9;int dest_rack = (((cft_defpacket*) _trans)->get_data_ptr())->dstRack;&#xA;    &#x9;if( dest_rack == rack_id ) // inside rack&#xA;    &#x9;{&#xA;    &#x9;&#x9;// Get server destination&#xA;    &#x9;&#x9;int dest = (((cft_defpacket*) _trans)->get_data_ptr())->dstServer;&#xA;&#x9;&#x9;&#x9;string dest_string = &quot;MsgQOutboundServer[&quot; + std::to_string(dest) + &quot;]&quot;;&#xA;&#x9;&#x9;&#x9;return dest_string;&#xA;    &#x9;}&#xA;    &#x9;else // outside rack&#xA;    &#x9;{&#xA;    &#x9;&#x9;string dest_string = &quot;MsgQOutboundAGGSwitch&quot;;&#xA;    &#x9;&#x9;return dest_string;&#xA;    &#x9;}   &#xA;    }&#xA;    else // outside server room&#xA;    {&#xA;    &#x9;string dest_string = &quot;MsgQOutboundAGGSwitch&quot;;&#xA;    &#x9;return dest_string;&#x9;&#xA;    } \" concurrency=\"dpToRSwitchRoutingConcurrency\" routingTime=\"dpToRSwitchRoutingTime ns\">\n                  <ports xmi:id=\"_tSEZCZ7fEee9xrF0SYRbXA\" name=\"MsgQInboundServer\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tSE_-J7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSEZDJ7fEee9xrF0SYRbXA\" name=\"MsgQOutboundServer\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tSFABZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSEZD57fEee9xrF0SYRbXA\" name=\"MsgQInboundAGGSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_tSE_7Z7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSEZEp7fEee9xrF0SYRbXA\" name=\"MsgQOutboundAGGSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_tSFAEp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSE_AZ7fEee9xrF0SYRbXA\" name=\"OutboundServer\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int rack_id;\" definitions=\"\" preElaboration=\"\" initializations=\"rack_id = get_container()->get_container()->get_cp_index();\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <max xmi:id=\"__y2RcaHSEeejnOUlsGkfhg\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n                  <min xmi:id=\"__y2RcKHSEeejnOUlsGkfhg\" integerLimit=\"0\"/>\n                  <ports xmi:id=\"_tSE_Bp7fEee9xrF0SYRbXA\" name=\"MsgQToServer\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_tSE_Dp7fEee9xrF0SYRbXA\" port=\"_tSEYrJ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSE_CZ7fEee9xrF0SYRbXA\" name=\"MsgQOutboundServer\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_tSE_EZ7fEee9xrF0SYRbXA\" relations=\"_tSFABZ7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSE_DJ7fEee9xrF0SYRbXA\" name=\"OutboundServerBh\" firstStatement=\"_tSE_Gp7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_tSE_DZ7fEee9xrF0SYRbXA\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_tSE_OZ7fEee9xrF0SYRbXA\">\n                      <output xmi:id=\"_tSE_Dp7fEee9xrF0SYRbXA\" name=\"OutputSelectorOutput\" port=\"_tSE_Bp7fEee9xrF0SYRbXA\"/>\n                    </selectors>\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_tSE_EJ7fEee9xrF0SYRbXA\" name=\"InstanceInSelector\" inputAction=\"_tSE_LZ7fEee9xrF0SYRbXA\" instanceNumber=\"SELF\">\n                      <inputs xmi:id=\"_tSE_EZ7fEee9xrF0SYRbXA\" name=\"InputSelectorInput\" port=\"_tSE_CZ7fEee9xrF0SYRbXA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_Gp7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSE_DJ7fEee9xrF0SYRbXA\" next=\"_tSE_Ip7fEee9xrF0SYRbXA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSE_Ip7fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSE_LZ7fEee9xrF0SYRbXA\" lastStatement=\"_tSE_OZ7fEee9xrF0SYRbXA\" previous=\"_tSE_Gp7fEee9xrF0SYRbXA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_JJ7fEee9xrF0SYRbXA\" name=\"process\" previous=\"_tSE_LZ7fEee9xrF0SYRbXA\" next=\"_tSE_OZ7fEee9xrF0SYRbXA\" algorithm=\"&#x9;MsgQToServer = MsgQOutboundServer;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_tSE_LZ7fEee9xrF0SYRbXA\" name=\"InAction\" isFirstOf=\"_tSE_Ip7fEee9xrF0SYRbXA\" next=\"_tSE_JJ7fEee9xrF0SYRbXA\" inputSelector=\"_tSE_EJ7fEee9xrF0SYRbXA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tSE_OZ7fEee9xrF0SYRbXA\" name=\"OutAction\" isLastOf=\"_tSE_Ip7fEee9xrF0SYRbXA\" previous=\"_tSE_JJ7fEee9xrF0SYRbXA\" outputSelector=\"_tSE_DZ7fEee9xrF0SYRbXA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSE_WJ7fEee9xrF0SYRbXA\" name=\"InboundAGGSwitch\" declarations=\"int rack_id;\" preElaboration=\"\" initializations=\"rack_id = get_container()->get_container()->get_cp_index();\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <ports xmi:id=\"_tSE_WZ7fEee9xrF0SYRbXA\" name=\"MsgQToRack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_tSE_YZ7fEee9xrF0SYRbXA\" port=\"_tSEYpp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSE_XJ7fEee9xrF0SYRbXA\" name=\"MsgQInboundAGGSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_tSE_iZ7fEee9xrF0SYRbXA\" relations=\"_tSE_7Z7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSE_X57fEee9xrF0SYRbXA\" name=\"InboundAGGSwitchBh\" firstStatement=\"_tSE_ap7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_tSE_YJ7fEee9xrF0SYRbXA\" name=\"InstanceInSelector\" inputAction=\"_tSE_fZ7fEee9xrF0SYRbXA\" instanceNumber=\"rack_id\">\n                      <inputs xmi:id=\"_tSE_YZ7fEee9xrF0SYRbXA\" name=\"InputSelectorInput\" port=\"_tSE_WZ7fEee9xrF0SYRbXA\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_ap7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSE_X57fEee9xrF0SYRbXA\" next=\"_tSE_cp7fEee9xrF0SYRbXA\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSE_cp7fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSE_fZ7fEee9xrF0SYRbXA\" lastStatement=\"_tSE_iZ7fEee9xrF0SYRbXA\" previous=\"_tSE_ap7fEee9xrF0SYRbXA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_dJ7fEee9xrF0SYRbXA\" name=\"process\" previous=\"_tSE_fZ7fEee9xrF0SYRbXA\" next=\"_tSE_iZ7fEee9xrF0SYRbXA\" algorithm=\"&#x9;assert(rack_id == MsgQToRack.dstRack);&#xD;&#xA;&#x9;MsgQInboundAGGSwitch = MsgQToRack; \" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_tSE_fZ7fEee9xrF0SYRbXA\" name=\"InAction\" isFirstOf=\"_tSE_cp7fEee9xrF0SYRbXA\" next=\"_tSE_dJ7fEee9xrF0SYRbXA\" inputSelector=\"_tSE_YJ7fEee9xrF0SYRbXA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tSE_iZ7fEee9xrF0SYRbXA\" name=\"OutAction\" isLastOf=\"_tSE_cp7fEee9xrF0SYRbXA\" previous=\"_tSE_dJ7fEee9xrF0SYRbXA\" port=\"_tSE_XJ7fEee9xrF0SYRbXA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_tSE_pp7fEee9xrF0SYRbXA\" name=\"OutboundAGGSwitch\" declarations=\"int rack_id;\" preElaboration=\"\" initializations=\"rack_id = get_container()->get_container()->get_cp_index();\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n                  <ports xmi:id=\"_tSE_p57fEee9xrF0SYRbXA\" name=\"MsgQOutboundAGGSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_tSE_xJ7fEee9xrF0SYRbXA\" relations=\"_tSFAEp7fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <ports xmi:id=\"_tSE_qp7fEee9xrF0SYRbXA\" name=\"MsgQToAggSwitch\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_tSE_r57fEee9xrF0SYRbXA\" port=\"_tSEYr57fEee9xrF0SYRbXA\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_tSE_rZ7fEee9xrF0SYRbXA\" name=\"OutboundAGGSwitchBh\" firstStatement=\"_tSE_sZ7fEee9xrF0SYRbXA\">\n                    <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_tSE_rp7fEee9xrF0SYRbXA\" name=\"InstanceOutSelector\" instanceNumber=\"rack_id\" outputAction=\"_tSE_0J7fEee9xrF0SYRbXA\">\n                      <output xmi:id=\"_tSE_r57fEee9xrF0SYRbXA\" name=\"OutputSelectorOutput\" port=\"_tSE_qp7fEee9xrF0SYRbXA\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_sZ7fEee9xrF0SYRbXA\" name=\"init\" isFirstOf=\"_tSE_rZ7fEee9xrF0SYRbXA\" next=\"_tSE_uZ7fEee9xrF0SYRbXA\" algorithm=\"\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tSE_uZ7fEee9xrF0SYRbXA\" name=\"Loop\" firstStatement=\"_tSE_xJ7fEee9xrF0SYRbXA\" lastStatement=\"_tSE_0J7fEee9xrF0SYRbXA\" previous=\"_tSE_sZ7fEee9xrF0SYRbXA\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_tSE_u57fEee9xrF0SYRbXA\" name=\"process\" previous=\"_tSE_xJ7fEee9xrF0SYRbXA\" next=\"_tSE_0J7fEee9xrF0SYRbXA\" algorithm=\"&#x9;MsgQToAggSwitch = MsgQOutboundAGGSwitch; \" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_tSE_xJ7fEee9xrF0SYRbXA\" name=\"InAction\" isFirstOf=\"_tSE_uZ7fEee9xrF0SYRbXA\" next=\"_tSE_u57fEee9xrF0SYRbXA\" port=\"_tSE_p57fEee9xrF0SYRbXA\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tSE_0J7fEee9xrF0SYRbXA\" name=\"OutAction\" isLastOf=\"_tSE_uZ7fEee9xrF0SYRbXA\" previous=\"_tSE_u57fEee9xrF0SYRbXA\" outputSelector=\"_tSE_rp7fEee9xrF0SYRbXA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n                  </refinement>\n                </models>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSE_7Z7fEee9xrF0SYRbXA\" name=\"MsgQInboundAGGSwitch\" ports=\"_tSE_XJ7fEee9xrF0SYRbXA _tSEZD57fEee9xrF0SYRbXA\" capacity=\"dpToRSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yyZCgMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSE_-J7fEee9xrF0SYRbXA\" name=\"MsgQInboundServer\" ports=\"_tSEZCZ7fEee9xrF0SYRbXA _tSEYtp7fEee9xrF0SYRbXA\" capacity=\"dpToRSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n                  <max xmi:id=\"_jJYdMZ-OEeeTKepLG9_cVg\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n                  <min xmi:id=\"_jJYdMJ-OEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yyUxEMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSFABZ7fEee9xrF0SYRbXA\" name=\"MsgQOutboundServer\" ports=\"_tSEZDJ7fEee9xrF0SYRbXA _tSE_CZ7fEee9xrF0SYRbXA\" capacity=\"dpToRSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n                  <max xmi:id=\"_9WZdIKHSEeejnOUlsGkfhg\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n                  <min xmi:id=\"_9WY2EKHSEeejnOUlsGkfhg\" integerLimit=\"0\"/>\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yyLAEMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSFAEp7fEee9xrF0SYRbXA\" name=\"MsgQOutboundAGGSwitch\" ports=\"_tSE_p57fEee9xrF0SYRbXA _tSEZEp7fEee9xrF0SYRbXA\" capacity=\"dpToRSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yyizgMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n                </relations>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSFmHZ7fEee9xrF0SYRbXA\" name=\"MsgQServerToToRSwitch\" ports=\"_tSEYAZ7fEee9xrF0SYRbXA _tSEYqZ7fEee9xrF0SYRbXA\" capacity=\"dpServerToToRSwitchBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"dpServerToToRSwitchTime ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <max xmi:id=\"_qkT9sZ-OEeeTKepLG9_cVg\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_qkT9sJ-OEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yxtGAMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSFmKp7fEee9xrF0SYRbXA\" name=\"MsgQToServer\" ports=\"_tSEYrJ7fEee9xrF0SYRbXA _tSEYBJ7fEee9xrF0SYRbXA\" capacity=\"dpToRSwitchToServerBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"dpToRSwitchToServerTime/2 ns\" receiveTime=\"dpToRSwitchToServerTime/2 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n              <max xmi:id=\"_E0OcoZ-OEeeTKepLG9_cVg\" designParameter=\"_deDmYCWuEeev0Li77iEQPw\"/>\n              <min xmi:id=\"_E0OcoJ-OEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yx_Z4MlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n            </relations>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tR-RXJ7fEee9xrF0SYRbXA\" name=\"MsgQToAggSwitch\" ports=\"_tSEX-J7fEee9xrF0SYRbXA _tSAtkp7fEee9xrF0SYRbXA\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"dpRackToSwitchTime/2 ns\" receiveTime=\"dpRackToSwitchTime/2 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n          <max xmi:id=\"_5gMHIZ-OEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n          <min xmi:id=\"_5gMHIJ-OEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywVNAMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tSJQeZ7fEee9xrF0SYRbXA\" name=\"MsgQToRack\" ports=\"_tSAtlZ7fEee9xrF0SYRbXA _tSEX9Z7fEee9xrF0SYRbXA\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"dpSwitchToRackTime/2 ns\" receiveTime=\"dpSwitchToRackTime/2 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n          <max xmi:id=\"_6OAPYZ-OEeeTKepLG9_cVg\" designParameter=\"_ZJsOMCWuEeev0Li77iEQPw\"/>\n          <min xmi:id=\"_6OAPYJ-OEeeTKepLG9_cVg\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywYQUMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_HV-c8Z9oEeeTKepLG9_cVg\" name=\"DataCenterSwitch\" includes=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_mKsR4J9pEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_YK3hAJ9pEeeTKepLG9_cVg\" ports=\"_XdNmQ59oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <ports xmi:id=\"_oi77oJ9pEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_YoPZgJ9pEeeTKepLG9_cVg\" ports=\"_XdPbdZ9oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_P7ycMJ9oEeeTKepLG9_cVg\" name=\"DataCenterSwitchSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_XdM_MJ9oEeeTKepLG9_cVg\" name=\"Inbound\" preElaboration=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <max xmi:id=\"_B5kO0SlOEem2ibKpCX7t4Q\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n          <min xmi:id=\"_B5kO0ClOEem2ibKpCX7t4Q\" integerLimit=\"0\"/>\n          <ports xmi:id=\"_XdNmQJ9oEeeTKepLG9_cVg\" name=\"MsgQRouting_in\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_g4mOwFhIEeiz1OT_r9Kgnw\" relations=\"_XdR3uZ9oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_XdNmQ59oEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_XdNmSJ9oEeeTKepLG9_cVg\" port=\"_mKsR4J9pEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_XdNmRp9oEeeTKepLG9_cVg\" name=\"InboundBh\" firstStatement=\"_XdNmVJ9oEeeTKepLG9_cVg\">\n            <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_XdNmR59oEeeTKepLG9_cVg\" name=\"InstanceInSelector\" inputAction=\"_XdNmZ59oEeeTKepLG9_cVg\" instanceNumber=\"SELF\">\n              <inputs xmi:id=\"_XdNmSJ9oEeeTKepLG9_cVg\" name=\"InputSelectorInput\" port=\"_XdNmQ59oEeeTKepLG9_cVg\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n            </selectors>\n            <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_eqc8MFhIEeiz1OT_r9Kgnw\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_XdNmc59oEeeTKepLG9_cVg\">\n              <output xmi:id=\"_g4mOwFhIEeiz1OT_r9Kgnw\" name=\"OutputSelectorOutput\" port=\"_XdNmQJ9oEeeTKepLG9_cVg\"/>\n            </selectors>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_XdNmVJ9oEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_XdNmRp9oEeeTKepLG9_cVg\" next=\"_XdNmXJ9oEeeTKepLG9_cVg\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_XdNmXJ9oEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_XdNmZ59oEeeTKepLG9_cVg\" lastStatement=\"_XdNmc59oEeeTKepLG9_cVg\" previous=\"_XdNmVJ9oEeeTKepLG9_cVg\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_XdNmXp9oEeeTKepLG9_cVg\" name=\"process\" previous=\"_XdNmZ59oEeeTKepLG9_cVg\" next=\"_XdNmc59oEeeTKepLG9_cVg\" algorithm=\"&#x9;MsgQRouting_in = MsgQToDataCenterSwitch;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_XdNmZ59oEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_XdNmXJ9oEeeTKepLG9_cVg\" next=\"_XdNmXp9oEeeTKepLG9_cVg\" inputSelector=\"_XdNmR59oEeeTKepLG9_cVg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_XdNmc59oEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_XdNmXJ9oEeeTKepLG9_cVg\" previous=\"_XdNmXp9oEeeTKepLG9_cVg\" outputSelector=\"_eqc8MFhIEeiz1OT_r9Kgnw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_XdPbcJ9oEeeTKepLG9_cVg\" name=\"Outbound\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"/*int outIndex;*/\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <max xmi:id=\"_DEz58SlOEem2ibKpCX7t4Q\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n          <min xmi:id=\"_DEz58ClOEem2ibKpCX7t4Q\" integerLimit=\"0\"/>\n          <ports xmi:id=\"_XdPbdZ9oEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputSelectorOutputs=\"_XdPbfZ9oEeeTKepLG9_cVg\" port=\"_oi77oJ9pEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_XdPbeJ9oEeeTKepLG9_cVg\" name=\"MsgQRouting_out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputSelectorInputs=\"_XdPbgJ9oEeeTKepLG9_cVg\" relations=\"_XdRQqZ9oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_XdPbe59oEeeTKepLG9_cVg\" name=\"OutboundBh\" firstStatement=\"_XdPbiZ9oEeeTKepLG9_cVg\">\n            <selectors xsi:type=\"cofluent:MultiInstancesOutputSelector\" xmi:id=\"_XdPbfJ9oEeeTKepLG9_cVg\" name=\"InstanceOutSelector\" instanceNumber=\"SELF\" outputAction=\"_XdQCi59oEeeTKepLG9_cVg\">\n              <output xmi:id=\"_XdPbfZ9oEeeTKepLG9_cVg\" name=\"OutputSelectorOutput\" port=\"_XdPbdZ9oEeeTKepLG9_cVg\"/>\n            </selectors>\n            <selectors xsi:type=\"cofluent:MultiInstancesInputSelector\" xmi:id=\"_XdPbf59oEeeTKepLG9_cVg\" name=\"InstanceInSelector\" inputAction=\"_XdPbnJ9oEeeTKepLG9_cVg\" instanceNumber=\"SELF\">\n              <inputs xmi:id=\"_XdPbgJ9oEeeTKepLG9_cVg\" name=\"InputSelectorInput\" port=\"_XdPbeJ9oEeeTKepLG9_cVg\" priority=\"\" timeout=\" ns\" duration=\" ns\" condition=\"\" vectorSize=\"\"/>\n            </selectors>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_XdPbiZ9oEeeTKepLG9_cVg\" name=\"init\" isFirstOf=\"_XdPbe59oEeeTKepLG9_cVg\" next=\"_XdPbkZ9oEeeTKepLG9_cVg\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_XdPbkZ9oEeeTKepLG9_cVg\" name=\"Loop\" firstStatement=\"_XdPbnJ9oEeeTKepLG9_cVg\" lastStatement=\"_XdQCi59oEeeTKepLG9_cVg\" previous=\"_XdPbiZ9oEeeTKepLG9_cVg\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_XdPbk59oEeeTKepLG9_cVg\" name=\"process\" previous=\"_XdPbnJ9oEeeTKepLG9_cVg\" next=\"_XdQCi59oEeeTKepLG9_cVg\" algorithm=\"&#x9;MsgQToServerRoom = MsgQRouting_out;\" executionTime=\"1 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_XdPbnJ9oEeeTKepLG9_cVg\" name=\"InAction\" isFirstOf=\"_XdPbkZ9oEeeTKepLG9_cVg\" next=\"_XdPbk59oEeeTKepLG9_cVg\" inputSelector=\"_XdPbf59oEeeTKepLG9_cVg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_XdQCi59oEeeTKepLG9_cVg\" name=\"OutAction\" isLastOf=\"_XdPbkZ9oEeeTKepLG9_cVg\" previous=\"_XdPbk59oEeeTKepLG9_cVg\" outputSelector=\"_XdPbfJ9oEeeTKepLG9_cVg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:RoutingFunction\" xmi:id=\"_XdQpoZ9oEeeTKepLG9_cVg\" name=\"RoutingFunction\" constructor=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" affinity=\"0\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" destination=\"    &#xA;    // Update data center switch running time &#xA;   &#x9;data_center_switch_running_time += cf_time(dpDataCenterSwitchRoutingTime,CF_NS) + cf_time(2,CF_NS);&#xA;   &#x9;&#xA;   &#x9;// Update trans routed number&#x9;&#xA;    nb_trans_routed_by_Data_Center_Switch++;&#xA;    &#xA;    // Update destination&#xA;    int dest = (((cft_defpacket*) _trans)->get_data_ptr())->dstServerRoom;&#xA;&#x9;string dest_string = &quot;MsgQRouting_out[&quot; + std::to_string(dest) + &quot;]&quot;;&#xA;&#x9;return dest_string;&#xA;&#x9;\" concurrency=\"dpDataCenterSwitchRoutingConcurrency\" routingTime=\"dpDataCenterSwitchRoutingTime ns\">\n          <ports xmi:id=\"_XdQppJ9oEeeTKepLG9_cVg\" name=\"MsgQRouting_in\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_XdR3uZ9oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n          <ports xmi:id=\"_XdQpp59oEeeTKepLG9_cVg\" name=\"MsgQRouting_out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_XdRQqZ9oEeeTKepLG9_cVg\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_XdRQqZ9oEeeTKepLG9_cVg\" name=\"MsgQRouting_out\" ports=\"_XdQpp59oEeeTKepLG9_cVg _XdPbeJ9oEeeTKepLG9_cVg\" capacity=\"dpDataCenterSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n          <max xmi:id=\"_ESqrwaOAEeenIc5GZoRZXw\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n          <min xmi:id=\"_ESqrwKOAEeenIc5GZoRZXw\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yzfOsMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_XdR3uZ9oEeeTKepLG9_cVg\" name=\"MsgQRouting_in\" ports=\"_XdQppJ9oEeeTKepLG9_cVg _XdNmQJ9oEeeTKepLG9_cVg\" capacity=\"dpDataCenterSwitchPortBufferSize\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n          <max xmi:id=\"_jTNQAFhIEeiz1OT_r9Kgnw\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n          <min xmi:id=\"_jTMo8FhIEeiz1OT_r9Kgnw\" integerLimit=\"0\"/>\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yzqN0MlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n        </relations>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YK3hAJ9pEeeTKepLG9_cVg\" name=\"MsgQToDataCenterSwitch\" ports=\"_mKsR4J9pEeeTKepLG9_cVg _oEV7IJ9pEeeTKepLG9_cVg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"dpServerRoomToDataCenterTime / 2 ns\" receiveTime=\"dpServerRoomToDataCenterTime / 2 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <max xmi:id=\"_0MTNkSlNEem2ibKpCX7t4Q\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n      <min xmi:id=\"_0MTNkClNEem2ibKpCX7t4Q\" integerLimit=\"0\"/>\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywKN4MlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_YoPZgJ9pEeeTKepLG9_cVg\" name=\"MsgQToServerRoom\" ports=\"_oi77oJ9pEeeTKepLG9_cVg _otRjYJ9pEeeTKepLG9_cVg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"dpDataCenterToServerRoomTime / 2 ns\" receiveTime=\"dpDataCenterToServerRoomTime / 2 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <max xmi:id=\"_2KeKcSlNEem2ibKpCX7t4Q\" designParameter=\"_OMWpcJ9pEeeTKepLG9_cVg\"/>\n      <min xmi:id=\"_2KeKcClNEem2ibKpCX7t4Q\" integerLimit=\"0\"/>\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ywOfUMlIEeeAicNSjh298g\" dataType=\"_gf_bcCWwEeev0Li77iEQPw\"/>\n    </relations>\n  </refinement>\n  <parameterFolders xmi:id=\"_ahAs0MlJEeeAicNSjh298g\" name=\"Instance_number\">\n    <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_ZJsOMCWuEeev0Li77iEQPw\" name=\"dpRackNb\" documentation=\"Number of rack per server room\" default=\"3\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" rangeLimits=\"_tSdZhJ7fEee9xrF0SYRbXA _YeU2XJ9uEeeTKepLG9_cVg _Udx8gZ9vEeeTKepLG9_cVg _QjmwgZ9wEeeTKepLG9_cVg _VCWMsZ9wEeeTKepLG9_cVg _5gMHIZ-OEeeTKepLG9_cVg _6OAPYZ-OEeeTKepLG9_cVg\" value=\"5\" type=\"INTEGER\" min=\"0\" max=\"1000\" step=\"1\"/>\n    <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_OMWpcJ9pEeeTKepLG9_cVg\" name=\"dpServerRoomNb\" documentation=\"Number of server room\" default=\"3\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" rangeLimits=\"_ESqrwaOAEeenIc5GZoRZXw _jTNQAFhIEeiz1OT_r9Kgnw _yrBBASlNEem2ibKpCX7t4Q _0MTNkSlNEem2ibKpCX7t4Q _2KeKcSlNEem2ibKpCX7t4Q _B5kO0SlOEem2ibKpCX7t4Q _DEz58SlOEem2ibKpCX7t4Q\" value=\"7\" type=\"INTEGER\" min=\"1\" max=\"1000\" step=\"1\"/>\n    <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_deDmYCWuEeev0Li77iEQPw\" name=\"dpServerPerRackNb\" documentation=\"Number of server per rack\" default=\"10\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" rangeLimits=\"_tSdZhp7fEee9xrF0SYRbXA _tSeAkZ7fEee9xrF0SYRbXA _E0OcoZ-OEeeTKepLG9_cVg _jJYdMZ-OEeeTKepLG9_cVg _qkT9sZ-OEeeTKepLG9_cVg _9WZdIKHSEeejnOUlsGkfhg __y2RcaHSEeejnOUlsGkfhg\" value=\"20\" type=\"INTEGER\" min=\"1\" max=\"10000\" step=\"1\"/>\n  </parameterFolders>\n  <parameterFolders xmi:id=\"_kM3HEMlJEeeAicNSjh298g\" name=\"Factor\">\n    <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_ph65cCZ1EeeXe9Uep3mvDQ\" name=\"dpIntraRackFactor\" documentation=\"Rate of transaction with a destination inside the rack\" default=\"0.8\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"0.9\" type=\"DECIMAL\" min=\"0\" max=\"1\" step=\"0.1\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_dxAQAJ-eEee7-NLbUqipBg\" name=\"dpIntraServerRoomFactor\" documentation=\"Rate of transaction with a destination inside the server room among the transactions with a destination outside the rack\" default=\"0.9\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"0.9\" type=\"DECIMAL\"/>\n  </parameterFolders>\n  <parameterFolders xmi:id=\"_pQ0JIMlJEeeAicNSjh298g\" name=\"Buffer_size\">\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_zNGP4KHoEeejnOUlsGkfhg\" name=\"dpAggSwitchPortBufferSize\" documentation=\"AGG swith port buffer size\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_IghxQKHpEeejnOUlsGkfhg\" name=\"dpToRSwitchPortBufferSize\" documentation=\"ToR switch port buffer size\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_WuxYoKHpEeejnOUlsGkfhg\" name=\"dpDataCenterSwitchPortBufferSize\" documentation=\"Data center switch port buffer size\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_JGsR8KKwEeeihIMcGFoJZQ\" name=\"dpServerToToRSwitchBufferSize\" documentation=\"Server to ToR switch buffer size\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_pSdrUKKvEeeihIMcGFoJZQ\" name=\"dpToRSwitchToServerBufferSize\" documentation=\"ToR switch to server buffer size\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n  </parameterFolders>\n  <parameterFolders xmi:id=\"_yp70oMlJEeeAicNSjh298g\" name=\"Routing\">\n    <subFolders xmi:id=\"_-9HdgMlJEeeAicNSjh298g\" name=\"Time\">\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_jdcAgFg8Eeiz1OT_r9Kgnw\" name=\"dpAGGSwitchRoutingTime\" documentation=\"AGG Switch routing time\" default=\"200\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_rFBc8Fg8Eeiz1OT_r9Kgnw\" name=\"dpDataCenterSwitchRoutingTime\" documentation=\"Data center switch routing time\" default=\"200\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_yYtF8Fg8Eeiz1OT_r9Kgnw\" name=\"dpToRSwitchRoutingTime\" documentation=\"ToR switch routing time\" default=\"200\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n    </subFolders>\n    <subFolders xmi:id=\"_Cc9ogMlKEeeAicNSjh298g\" name=\"Concurrency\">\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_YKHygDSfEeeso6oAt6PqkA\" name=\"dpAGGSwitchRoutingConcurrency\" documentation=\"AGG Switch routing conurrency \" default=\"1\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"1\" type=\"INTEGER\"/>\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_npWQIJ-IEeeTKepLG9_cVg\" name=\"dpDataCenterSwitchRoutingConcurrency\" documentation=\"Data center switch routing concurrency\" default=\"1\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n      <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_SAWO0J7BEeepA9cS4fQqVA\" name=\"dpToRSwitchRoutingConcurrency\" documentation=\"ToR switch routing concurrency\" default=\"1\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n    </subFolders>\n  </parameterFolders>\n  <parameterFolders xmi:id=\"_5M7nkMlJEeeAicNSjh298g\" name=\"Transaction\">\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_5fiAkKKTEeeR6O_A5q0Kpw\" name=\"dpTransactionRate\" documentation=\"&lt;p>Number of transaction send in one sec by a server&lt;/p>&#xA;\" default=\"100000\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"1000000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_o3iIAKKdEeeR6O_A5q0Kpw\" name=\"dpTransactionRateInterval\" documentation=\"&lt;p>Variation of transaction rate&lt;/p>&#xA;\" default=\"1000\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"100000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_N2T9oKH-Eee3BsTCmUYK4g\" name=\"dpNbTransPerServer\" documentation=\"&lt;p>Number of transactions send by one server&lt;/p>&#xA;\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"4000\" type=\"INTEGER\"/>\n  </parameterFolders>\n  <parameterFolders xmi:id=\"_I4HuEMlKEeeAicNSjh298g\" name=\"Communication_time\">\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_9XggYFg9Eeiz1OT_r9Kgnw\" name=\"dpSwitchToRackTime\" documentation=\"Switch to Rack communication time\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"500\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_DWaHwFg-Eeiz1OT_r9Kgnw\" name=\"dpToRSwitchToServerTime\" documentation=\"ToR switch to server communication time\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_KDfDwFg-Eeiz1OT_r9Kgnw\" name=\"dpRackToSwitchTime\" documentation=\"Rack to Switch communication time\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"500\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_OL64wFg-Eeiz1OT_r9Kgnw\" name=\"dpServerRoomToDataCenterTime\" default=\"1000\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_RuSMQFg-Eeiz1OT_r9Kgnw\" name=\"dpServerToToRSwitchTime\" documentation=\"Server to ToR switch communication time\" default=\"100\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" type=\"INTEGER\"/>\n    <designParameters xsi:type=\"cofluent:PrimitiveTypeParameter\" xmi:id=\"_YTkeMFg-Eeiz1OT_r9Kgnw\" name=\"dpDataCenterToServerRoomTime\" default=\"1000\" visibility=\"PUBLIC\" accessRight=\"READ_WRITE\" value=\"10000\" type=\"INTEGER\"/>\n  </parameterFolders>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_-N6BcRhUEeaRJZtBX_vAyA\" name=\"ApplicationModel\" version=\"6.2.0_dev4_20160511-2100\" preElaboration=\"\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" globalTypeDeclarations=\"typedef cf_dt::cf_time DefStartTime;&#xD;&#xA;typedef cf_dt::cf_data_size DefDataSize;&#xD;&#xA;typedef float DefValue; &#xD;&#xA; &#xD;&#xA;typedef struct{&#xD;&#xA;&#x9;DefStartTime StartTime;&#xD;&#xA;&#x9;DefDataSize DataSize;&#xD;&#xA;&#x9;DefValue Value;&#xD;&#xA;} DefData;\">\n  <annotations xmi:id=\"_-RtjYBhUEeaRJZtBX_vAyA\" source=\"cdt.configurations\">\n    <details xmi:id=\"_U4-uEHH5EeeJVqe6rKhyIg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.457760404\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_Ni9nEB0PEeaquPXHm3CdXA\" name=\"Frequency\" documentation=\"Frequency of signal\" default=\"0.5\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"0.5\" internalUnit=\"HZ\" type=\"DECIMAL\" min=\"0.1\" max=\"1.0\" step=\"0.1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_X_-YgB0PEeaquPXHm3CdXA\" name=\"NoiseLevel\" documentation=\"Noise added to signal\" default=\"0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"1000\" step=\"100\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_eK7e4B0PEeaquPXHm3CdXA\" name=\"ErrorRate\" documentation=\"Error rate (%)\" default=\"0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"20\" step=\"5\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_jhrhIB0PEeaquPXHm3CdXA\" name=\"DataSize\" documentation=\"Size of data\" default=\"200\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"200\" max=\"500\" step=\"50\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_-N6ogBhUEeaRJZtBX_vAyA\" name=\"ApplicationModelSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_baqE4BkYEealL-5xWZDvNw\" name=\"Producer\" constructor=\"\" includes=\"\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_baqE4xkYEealL-5xWZDvNw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_bawLiRkYEealL-5xWZDvNw\" ports=\"_baqsIhkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_baqE5BkYEealL-5xWZDvNw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_bawykBkYEealL-5xWZDvNw\" ports=\"_baqsIxkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_baqE5RkYEealL-5xWZDvNw\" name=\"ProducerSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_baqE5hkYEealL-5xWZDvNw\" name=\"Generator\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_baqE6BkYEealL-5xWZDvNw\" name=\"Req\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_baqsBhkYEealL-5xWZDvNw\" relations=\"_baqsbhkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_baqr8BkYEealL-5xWZDvNw\" name=\"DataVar\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_baqscxkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_baqr8RkYEealL-5xWZDvNw\" name=\"TestProd\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_baqsehkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_baqr8hkYEealL-5xWZDvNw\" name=\"GeneratorBh\" firstStatement=\"_baqr8xkYEealL-5xWZDvNw\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_baqr8xkYEealL-5xWZDvNw\" name=\"OpInit\" isFirstOf=\"_baqr8hkYEealL-5xWZDvNw\" next=\"_baqr_BkYEealL-5xWZDvNw\" algorithm=\"&#x9;DataVar = 0.0;&#xA;&#x9;TestProd = DataVar;\" executionTime=\"10 ns\" systematicWrite=\"true\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_baqr_BkYEealL-5xWZDvNw\" name=\"Loop\" firstStatement=\"_baqr_RkYEealL-5xWZDvNw\" lastStatement=\"_baqsBhkYEealL-5xWZDvNw\" previous=\"_baqr8xkYEealL-5xWZDvNw\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_baqr_RkYEealL-5xWZDvNw\" name=\"OpGen\" isFirstOf=\"_baqr_BkYEealL-5xWZDvNw\" next=\"_baqsBhkYEealL-5xWZDvNw\" algorithm=\"&#x9;// Produces a discrete sinusoidal signal&#xA;&#x9;double f = Frequency.get_value().to_scalar(CF_HZ);&#xA;&#x9;double t = cf_time_stamp().to_scalar();&#xA;&#x9;DataVar = (DefValue)(1000.0 * sin( (2 * 3.14 * f * t)/1000.0 ) );&#xA;&#x9;TestProd = DataVar;\" executionTime=\"100 ns\" systematicWrite=\"true\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_baqsBhkYEealL-5xWZDvNw\" name=\"OutAction\" isLastOf=\"_baqr_BkYEealL-5xWZDvNw\" previous=\"_baqr_RkYEealL-5xWZDvNw\" port=\"_baqE6BkYEealL-5xWZDvNw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_baqsIBkYEealL-5xWZDvNw\" name=\"Sender\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"1\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_baqsIRkYEealL-5xWZDvNw\" name=\"Req\" type=\"EVENT\" direction=\"IN\" inputActions=\"_baqsMBkYEealL-5xWZDvNw\" relations=\"_baqsbhkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_baqsIhkYEealL-5xWZDvNw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_baqsVBkYEealL-5xWZDvNw\" port=\"_baqE4xkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_baqsIxkYEealL-5xWZDvNw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_baqsSBkYEealL-5xWZDvNw\" port=\"_baqE5BkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_baqsJBkYEealL-5xWZDvNw\" name=\"DataVar\" type=\"SHARED_VARIABLE\" direction=\"IN\" inputActions=\"_baqsPBkYEealL-5xWZDvNw\" relations=\"_baqscxkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_baqsJRkYEealL-5xWZDvNw\" name=\"SenderBh\" firstStatement=\"_baqsLxkYEealL-5xWZDvNw\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_baqsJhkYEealL-5xWZDvNw\" name=\"OpEncode\" previous=\"_baqsPBkYEealL-5xWZDvNw\" next=\"_baqsVBkYEealL-5xWZDvNw\" algorithm=\"&#x9;Msg.Value = DataVar;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_baqsLxkYEealL-5xWZDvNw\" name=\"Loop\" isFirstOf=\"_baqsJRkYEealL-5xWZDvNw\" firstStatement=\"_baqsMBkYEealL-5xWZDvNw\" lastStatement=\"_baqsSBkYEealL-5xWZDvNw\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_baqsMBkYEealL-5xWZDvNw\" name=\"InAction\" isFirstOf=\"_baqsLxkYEealL-5xWZDvNw\" next=\"_baqsPBkYEealL-5xWZDvNw\" port=\"_baqsIRkYEealL-5xWZDvNw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_baqsPBkYEealL-5xWZDvNw\" name=\"InAction2\" previous=\"_baqsMBkYEealL-5xWZDvNw\" next=\"_baqsJhkYEealL-5xWZDvNw\" port=\"_baqsJBkYEealL-5xWZDvNw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_baqsSBkYEealL-5xWZDvNw\" name=\"InAction3\" isLastOf=\"_baqsLxkYEealL-5xWZDvNw\" previous=\"_baqsVBkYEealL-5xWZDvNw\" port=\"_baqsIxkYEealL-5xWZDvNw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_baqsVBkYEealL-5xWZDvNw\" name=\"OutAction\" previous=\"_baqsJhkYEealL-5xWZDvNw\" next=\"_baqsSBkYEealL-5xWZDvNw\" port=\"_baqsIhkYEealL-5xWZDvNw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_baqsbhkYEealL-5xWZDvNw\" name=\"Req\" ports=\"_baqE6BkYEealL-5xWZDvNw _baqsIRkYEealL-5xWZDvNw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_baqscxkYEealL-5xWZDvNw\" name=\"DataVar\" ports=\"_baqr8BkYEealL-5xWZDvNw _baqsJBkYEealL-5xWZDvNw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_-n600FzFEee79ojEzVGoCg\">\n            <dataType href=\"reuse://_mGIWUiGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQiGuEeaaOsqBPt_qWw\"/>\n          </relationType>\n        </relations>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_baqsehkYEealL-5xWZDvNw\" name=\"TestProd\" ports=\"_baqr8RkYEealL-5xWZDvNw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_-oif4FzFEee79ojEzVGoCg\">\n            <dataType href=\"reuse://_mGIWUiGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFrDUCGuEeaaOsqBPt_qWw\"/>\n          </relationType>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_bau9YBkYEealL-5xWZDvNw\" name=\"Receiver\" includes=\"\" destructor=\"\" declarations=\"DefValue noise;&#xD;&#xA;DefValue TestCons;\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_bau9YhkYEealL-5xWZDvNw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_bau9fBkYEealL-5xWZDvNw\" relations=\"_bawykBkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_bau9YxkYEealL-5xWZDvNw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_bau9cBkYEealL-5xWZDvNw\" relations=\"_bawLiRkYEealL-5xWZDvNw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_bau9ZBkYEealL-5xWZDvNw\" name=\"ReceiverBh\" firstStatement=\"_bau9ZRkYEealL-5xWZDvNw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_bau9ZRkYEealL-5xWZDvNw\" name=\"OpInit\" isFirstOf=\"_bau9ZBkYEealL-5xWZDvNw\" next=\"_bau9bhkYEealL-5xWZDvNw\" algorithm=\"&#x9;noise = 0.0;&#xA;&#x9;TestCons = 0.0;&#xA;&#x9;cf_trace_gui_f_t(&quot;TestCons&quot;, TestCons);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_bau9bhkYEealL-5xWZDvNw\" name=\"Loop\" firstStatement=\"_bau9cBkYEealL-5xWZDvNw\" lastStatement=\"_bau9fBkYEealL-5xWZDvNw\" previous=\"_bau9ZRkYEealL-5xWZDvNw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_bau9cBkYEealL-5xWZDvNw\" name=\"InAction\" isFirstOf=\"_bau9bhkYEealL-5xWZDvNw\" next=\"_bau9hxkYEealL-5xWZDvNw\" port=\"_bau9YxkYEealL-5xWZDvNw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_bau9fBkYEealL-5xWZDvNw\" name=\"OutAction\" isLastOf=\"_bau9bhkYEealL-5xWZDvNw\" previous=\"_bau9hxkYEealL-5xWZDvNw\" port=\"_bau9YhkYEealL-5xWZDvNw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_bau9hxkYEealL-5xWZDvNw\" name=\"OpDecode\" previous=\"_bau9cBkYEealL-5xWZDvNw\" next=\"_bau9fBkYEealL-5xWZDvNw\" algorithm=\"&#x9;// Adds noise to signal&#xA;&#x9;double t = cf_time_stamp().to_scalar();&#xA;&#x9;noise = (DefValue)(NoiseLevel * sin(0.25 * 3.14 * NoiseLevel*t));&#xA;&#xA;&#x9;TestCons = Msg.Value + noise;&#xA;&#x9;// TestCons value is round down using floor C++ API&#xA;&#x9;cf_trace_gui_f_t(&quot;TestCons&quot;, floor(TestCons));\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_bawLiRkYEealL-5xWZDvNw\" name=\"Msg\" ports=\"_bau9YxkYEealL-5xWZDvNw _baqE4xkYEealL-5xWZDvNw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_-oI3QFzFEee79ojEzVGoCg\">\n        <dataType href=\"reuse://_mGIWUiGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcRSGuEeaaOsqBPt_qWw\"/>\n      </relationType>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_bawykBkYEealL-5xWZDvNw\" name=\"Ack\" ports=\"_baqE5BkYEealL-5xWZDvNw _bau9YhkYEealL-5xWZDvNw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_-oUdcFzFEee79ojEzVGoCg\">\n        <dataType href=\"reuse://_mGIWUiGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQCGuEeaaOsqBPt_qWw\"/>\n      </relationType>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_UsFT4B3VEeaquPXHm3CdXA\" name=\"ApplicationModelRefinement\" postSimulation=\"if(TotalNbMsg!=0)&#xD;&#xA;{&#xD;&#xA;&#x9;cf_trace_report(&quot;Total number of messages : %i&quot;, TotalNbMsg);&#xD;&#xA;&#x9;cf_trace_report(&quot;Average data size : %f bytes&quot;, (float)TotalDataSize.to_scalar(CF_BYTE)/(float)TotalNbMsg);&#xD;&#xA;&#x9;cf_trace_report(&quot;AverageLatency = %f ns&quot;, (float)AverageLatency.to_scalar(CF_NS)/(float)TotalNbMsg );&#xD;&#xA;&#x9;AverageThroughput= cf_dt::cf_throughput(TotalDataSize, AverageLatency);&#xD;&#xA;&#x9;cf_trace_report(&quot;AverageThroughput = %f MBps&quot;, (float)AverageThroughput.to_scalar(CF_MBYPS)/(float)TotalNbMsg);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;cf_trace_gui_f_param(&quot;AverageLatency&quot;, (float)AverageLatency.to_scalar(CF_NS)/(float)TotalNbMsg );&#xD;&#xA;cf_trace_gui_f_param(&quot;AverageThroughput&quot;, (float)AverageThroughput.to_scalar(CF_MBYPS)/(float)TotalNbMsg);\" version=\"6.2.0_dev4_20160518-1508\" declarations=\"\" preElaboration=\"\" cyclePeriod=\"10 ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" preSimulation=\"\" postElaboration=\"\" globalTypeDeclarations=\"#include &quot;ExternalFile.h&quot;&#xD;&#xA;&#xD;&#xA;typedef cf_dt::cf_time DefStartTime;&#xD;&#xA;typedef cf_dt::cf_data_size DefDataSize;&#xD;&#xA;typedef float DefValue; &#xD;&#xA;&#xD;&#xA;// Using a common type for all data exchanges &#xD;&#xA;typedef struct{&#xD;&#xA;&#x9;DefStartTime StartTime;&#xD;&#xA;&#x9;DefDataSize DataSize;&#xD;&#xA;&#x9;DefValue Value;&#xD;&#xA;} DefData;\" globalDeclarations=\"extern int TotalNbMsg;&#xD;&#xA;extern cf_dt::cf_data_size TotalDataSize;&#xD;&#xA;extern cf_dt::cf_time AverageLatency;&#xD;&#xA;extern cf_dt::cf_throughput AverageThroughput;\" globalDefinitions=\"int TotalNbMsg=0;&#xD;&#xA;cf_dt::cf_data_size TotalDataSize(0, CF_BYTE );&#xD;&#xA;cf_dt::cf_time AverageLatency(0.0, CF_NS);&#xD;&#xA;cf_dt::cf_throughput AverageThroughput(0.0, CF_MBYPS);\">\n  <annotations xmi:id=\"_etiQwCGxEeaaOsqBPt_qWw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_AskCoHH6EeeJVqe6rKhyIg\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1196624148\" value=\"cdt.configuration.active\"/>\n    <details xmi:id=\"_gDEfIPKAEeqmSNOakke98w\" key=\"cofluent.managedbuild.config.gnu.mingw492.exe.release.1354791674\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_-ZKcYCGuEeaaOsqBPt_qWw\" name=\"DataSize\" documentation=\"Size of data\" default=\"200\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" type=\"INTEGER\" min=\"200\" max=\"500\" step=\"50\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_-ZKcYSGuEeaaOsqBPt_qWw\" name=\"ErrorRate\" documentation=\"Error rate (%)\" default=\"0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"0\" type=\"INTEGER\" min=\"0\" max=\"20\" step=\"5\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_-ZKcYiGuEeaaOsqBPt_qWw\" name=\"NoiseLevel\" documentation=\"Noise added to signal\" default=\"0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"0\" type=\"INTEGER\" min=\"0\" max=\"1000\" step=\"100\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_dgOH4PKAEeqmSNOakke98w\" name=\"Frequency\" documentation=\"Frequency of signal\" default=\"0.5\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"0.5\" internalUnit=\"HZ\" type=\"DECIMAL\" min=\"0.1\" max=\"1.0\" step=\"0.1\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_UsFT8B3VEeaquPXHm3CdXA\" name=\"ApplicationModelRefinementSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_OgPxgCGrEeaaOsqBPt_qWw\" name=\"Producer\" includes=\"\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_W1JfkCGuEeaaOsqBPt_qWw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_HoRFuSGuEeaaOsqBPt_qWw\" ports=\"_U8HoxCGrEeaaOsqBPt_qWw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <ports xmi:id=\"_XKfdcCGuEeaaOsqBPt_qWw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_HoOpcCGuEeaaOsqBPt_qWw\" ports=\"_U8HoxSGrEeaaOsqBPt_qWw\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_U7-e0CGrEeaaOsqBPt_qWw\" name=\"ProducerSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_U8HowCGrEeaaOsqBPt_qWw\" name=\"Sender\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"int r;&#xD;&#xA;// Loop condition declaration&#xD;&#xA;bool Resend;\" definitions=\"\" preElaboration=\"\" initializations=\"r = 0;\" cyclePeriod=\" ns\" affinity=\"1\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_U8HowyGrEeaaOsqBPt_qWw\" name=\"Req\" type=\"EVENT\" direction=\"IN\" inputActions=\"_U8Ho0iGrEeaaOsqBPt_qWw\" relations=\"_U8FzkCGrEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_U8HoxCGrEeaaOsqBPt_qWw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_U8Ho9iGrEeaaOsqBPt_qWw\" port=\"_W1JfkCGuEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_U8HoxSGrEeaaOsqBPt_qWw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_U8Ho6iGrEeaaOsqBPt_qWw\" port=\"_XKfdcCGuEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_U8HoxiGrEeaaOsqBPt_qWw\" name=\"DataVar\" type=\"SHARED_VARIABLE\" direction=\"IN\" inputActions=\"_U8Ho3iGrEeaaOsqBPt_qWw\" relations=\"_U8FzniGrEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_U8HoxyGrEeaaOsqBPt_qWw\" name=\"SenderBh\" firstStatement=\"_U8Ho0SGrEeaaOsqBPt_qWw\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_U8HoyCGrEeaaOsqBPt_qWw\" name=\"OpEncode\" previous=\"_U8Ho3iGrEeaaOsqBPt_qWw\" next=\"_tnOB0CGxEeaaOsqBPt_qWw\" algorithm=\"&#x9;r = ( r * 11 + 37)%DataSize;&#xA;&#x9;cf_data_size ds((cf_dt::cf_data_size_st)r, CF_BYTE);&#xA;&#x9;Msg_trans.set_user_data_length( ds);&#xA;&#x9;Msg_trans.set_time_stamp(cf_time_stamp());&#xA;&#x9;Msg.DataSize = Msg_trans.get_user_data_length();&#xA;&#x9;Msg.StartTime = Msg_trans.get_time_stamp();&#xA;&#x9;Msg.Value = DataVar;&#xA;&#x9;Resend = true; // To enter the loop\" executionTime=\"10 ns\" dynamicDataSize=\"2 kB\" dynamicPowerConsumption=\"1 uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_U8Ho0SGrEeaaOsqBPt_qWw\" name=\"Loop\" isFirstOf=\"_U8HoxyGrEeaaOsqBPt_qWw\" firstStatement=\"_U8Ho0iGrEeaaOsqBPt_qWw\" lastStatement=\"_tnOB0CGxEeaaOsqBPt_qWw\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_U8Ho0iGrEeaaOsqBPt_qWw\" name=\"InAction\" isFirstOf=\"_U8Ho0SGrEeaaOsqBPt_qWw\" next=\"_U8Ho3iGrEeaaOsqBPt_qWw\" port=\"_U8HowyGrEeaaOsqBPt_qWw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_U8Ho3iGrEeaaOsqBPt_qWw\" name=\"InAction2\" previous=\"_U8Ho0iGrEeaaOsqBPt_qWw\" next=\"_U8HoyCGrEeaaOsqBPt_qWw\" port=\"_U8HoxiGrEeaaOsqBPt_qWw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_U8Ho6iGrEeaaOsqBPt_qWw\" name=\"InAction3\" previous=\"_U8Ho9iGrEeaaOsqBPt_qWw\" next=\"_0KYM0CGxEeaaOsqBPt_qWw\" port=\"_U8HoxSGrEeaaOsqBPt_qWw\" timeout=\"40 ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_U8Ho9iGrEeaaOsqBPt_qWw\" name=\"OutAction\" isFirstOf=\"_tnOB0CGxEeaaOsqBPt_qWw\" next=\"_U8Ho6iGrEeaaOsqBPt_qWw\" port=\"_U8HoxCGrEeaaOsqBPt_qWw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_tnOB0CGxEeaaOsqBPt_qWw\" name=\"Loop2\" isLastOf=\"_U8Ho0SGrEeaaOsqBPt_qWw\" firstStatement=\"_U8Ho9iGrEeaaOsqBPt_qWw\" lastStatement=\"_0KYM0CGxEeaaOsqBPt_qWw\" previous=\"_U8HoyCGrEeaaOsqBPt_qWw\" condition=\"Resend\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_0KYM0CGxEeaaOsqBPt_qWw\" name=\"OpTestResend\" isLastOf=\"_tnOB0CGxEeaaOsqBPt_qWw\" previous=\"_U8Ho6iGrEeaaOsqBPt_qWw\" algorithm=\"&#x9;if (InAction3_has_timed_out)&#xA;  &#x9;&#x9;cf_trace_report(&quot;Timeout!&quot;);&#xA;&#xA;&#x9;Resend = InAction3_has_timed_out || Ack;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_xh5WYSGrEeaaOsqBPt_qWw\" name=\"Generator\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <parameterReferences xmi:id=\"_gLxpACG0EeaaOsqBPt_qWw\" value=\"0.5\">\n            <designParameter xsi:type=\"cofluent:RangeParameter\" href=\"reuse://_xhZAECGrEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModel.cf_app#_Ni9nEB0PEeaquPXHm3CdXA\"/>\n          </parameterReferences>\n          <ports xmi:id=\"_xh5WYiGrEeaaOsqBPt_qWw\" name=\"Req\" type=\"EVENT\" direction=\"OUT\" relations=\"_U8FzkCGrEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\">\n            <reuse href=\"reuse://_xhZAECGrEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModel.cf_app#_baqE6BkYEealL-5xWZDvNw\"/>\n          </ports>\n          <ports xmi:id=\"_xh5WYyGrEeaaOsqBPt_qWw\" name=\"DataVar\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_U8FzniGrEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\">\n            <reuse href=\"reuse://_xhZAECGrEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModel.cf_app#_baqr8BkYEealL-5xWZDvNw\"/>\n          </ports>\n          <ports xmi:id=\"_xh59cCGrEeaaOsqBPt_qWw\" name=\"TestProd\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_U8FMiSGrEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\">\n            <reuse href=\"reuse://_xhZAECGrEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModel.cf_app#_baqr8RkYEealL-5xWZDvNw\"/>\n          </ports>\n          <reuse xsi:type=\"cofluent:Function\" href=\"reuse://_xhZAECGrEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModel.cf_app#_baqE5hkYEealL-5xWZDvNw\"/>\n        </models>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_U8FMiSGrEeaaOsqBPt_qWw\" name=\"TestProd\" ports=\"_xh59cCGrEeaaOsqBPt_qWw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"__SCv4FzFEee79ojEzVGoCg\">\n            <dataType href=\"reuse://_mFwi6CGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFrDUCGuEeaaOsqBPt_qWw\"/>\n          </relationType>\n        </relations>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_U8FzkCGrEeaaOsqBPt_qWw\" name=\"Req\" ports=\"_xh5WYiGrEeaaOsqBPt_qWw _U8HowyGrEeaaOsqBPt_qWw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_U8FzniGrEeaaOsqBPt_qWw\" name=\"DataVar\" ports=\"_xh5WYyGrEeaaOsqBPt_qWw _U8HoxiGrEeaaOsqBPt_qWw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"__Qw9gFzFEee79ojEzVGoCg\">\n            <dataType href=\"reuse://_mFwi6CGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQiGuEeaaOsqBPt_qWw\"/>\n          </relationType>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_HoP3kCGuEeaaOsqBPt_qWw\" name=\"Receiver\" includes=\"\" destructor=\"\" declarations=\"DefValue noise;&#xD;&#xA;DefValue TestCons; &#xD;&#xA;int DecodeTime; &#xD;&#xA;int errorGen;&#xD;&#xA;bool Error; // OR branch condition&#xD;&#xA;cf_dt::cf_time Latency;&#xD;&#xA;cf_dt::cf_throughput Throughput;\" definitions=\"\" preElaboration=\"\" initializations=\"DecodeTime = 0;\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"1\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_HoP3kiGuEeaaOsqBPt_qWw\" name=\"Ack\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_HoP3rCGuEeaaOsqBPt_qWw\" relations=\"_HoOpcCGuEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_HoP3kyGuEeaaOsqBPt_qWw\" name=\"Msg\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_HoP3oCGuEeaaOsqBPt_qWw\" relations=\"_HoRFuSGuEeaaOsqBPt_qWw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_HoP3lCGuEeaaOsqBPt_qWw\" name=\"ReceiverBh\" firstStatement=\"_HoP3lSGuEeaaOsqBPt_qWw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_HoP3lSGuEeaaOsqBPt_qWw\" name=\"OpInit\" isFirstOf=\"_HoP3lCGuEeaaOsqBPt_qWw\" next=\"_HoP3niGuEeaaOsqBPt_qWw\" algorithm=\"&#x9;noise = 0.0;&#xA;&#x9;Error = false;&#xA;&#x9;errorGen = 1;&#xA;&#x9;TestCons = 0.0;&#xA;&#x9;// TestCons value is round down using floor C++ API&#xA;&#x9;cf_trace_gui_f_t(&quot;TestCons&quot;, floor(TestCons));\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_HoP3niGuEeaaOsqBPt_qWw\" name=\"Loop\" firstStatement=\"_HoP3oCGuEeaaOsqBPt_qWw\" lastStatement=\"_OWPcwCGyEeaaOsqBPt_qWw\" previous=\"_HoP3lSGuEeaaOsqBPt_qWw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_HoP3oCGuEeaaOsqBPt_qWw\" name=\"InAction\" isFirstOf=\"_HoP3niGuEeaaOsqBPt_qWw\" next=\"_HoP3tyGuEeaaOsqBPt_qWw\" port=\"_HoP3kyGuEeaaOsqBPt_qWw\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_HoP3rCGuEeaaOsqBPt_qWw\" name=\"OutAction\" isFirstOf=\"_QrbygCGyEeaaOsqBPt_qWw\" isLastOf=\"_QrbygCGyEeaaOsqBPt_qWw\" port=\"_HoP3kiGuEeaaOsqBPt_qWw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_HoP3tyGuEeaaOsqBPt_qWw\" name=\"OpDecode\" previous=\"_HoP3oCGuEeaaOsqBPt_qWw\" next=\"_OWPcwCGyEeaaOsqBPt_qWw\" algorithm=\"&#x9;// Adds noise to signal&#xA;&#x9;double t = cf_time_stamp().to_scalar();&#xA;&#x9;noise = (DefValue)(NoiseLevel * sin(0.25 * 3.14 * NoiseLevel * t)) ;&#xA;&#xA;&#x9;// TestCons = Msg.Value + noise;&#xA;&#x9;TestCons = Add(Msg.Value, noise);&#xA;&#x9;// TestCons value is round down using floor C++ API&#xA;&#x9;cf_trace_gui_f_t(&quot;TestCons&quot;, floor(TestCons));&#xA;&#xA;&#x9;Latency = cf_time_stamp() - Msg.StartTime;&#xA;&#x9;AverageLatency+=Latency;&#xA;  &#x9;&#xA;&#x9;// Error generation&#xA;&#x9;errorGen = (errorGen * 37 + 11)%101;&#xA;&#x9;if (errorGen &lt; ErrorRate)&#xA;&#x9;{&#xA;&#x9;&#x9;Error = true;&#xA;  &#x9;&#x9;cf_trace_report(&quot;Error!&quot;);&#xA;&#x9;} &#xA;&#x9;else &#xA;&#x9;{&#xA;  &#x9;&#x9;Error = false;&#xA;  &#x9;&#x9;TotalNbMsg++;&#xA;  &#x9;&#x9;TotalDataSize+=Msg.DataSize;&#xA;  &#x9;&#x9;cf_trace_gui_f_t(&quot;Latency&quot;,(int)(Latency.to_scalar(CF_NS)),&quot;ns&quot;);&#xA;  &#x9;&#x9;cf_trace_gui_f_t(&quot;Throughput&quot;,(int)(Throughput.to_scalar(CF_MBYPS)),&quot;MBps&quot;);&#xA;  &#x9;&#x9;cf_trace_gui_f_x(&quot;Msg&quot;,&quot;Latency&quot;, TotalNbMsg, (int)(Latency.to_scalar(CF_NS)),&quot;&quot;, &quot;ns&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;Ack = Error;&#xA;&#x9;Throughput = cf_throughput(Msg.DataSize, Latency);&#xA;&#x9;DecodeTime = (DecodeTime * 11 + 37 )%101;\" executionTime=\"DecodeTime ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_OWPcwCGyEeaaOsqBPt_qWw\" name=\"Alternative\" isLastOf=\"_HoP3niGuEeaaOsqBPt_qWw\" previous=\"_HoP3tyGuEeaaOsqBPt_qWw\">\n          <conditionalBranches xmi:id=\"_QrbygCGyEeaaOsqBPt_qWw\" name=\"Branch\" firstStatement=\"_HoP3rCGuEeaaOsqBPt_qWw\" lastStatement=\"_HoP3rCGuEeaaOsqBPt_qWw\" condition=\"\"/>\n          <conditionalBranches xmi:id=\"_RIJjsCGyEeaaOsqBPt_qWw\" name=\"Branch2\" isFirstOf=\"_RIJjsCGyEeaaOsqBPt_qWw\" isLastOf=\"_RIJjsCGyEeaaOsqBPt_qWw\" firstStatement=\"_RIJjsCGyEeaaOsqBPt_qWw\" lastStatement=\"_RIJjsCGyEeaaOsqBPt_qWw\" condition=\"Error\"/>\n        </statements>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_HoOpcCGuEeaaOsqBPt_qWw\" name=\"Ack\" ports=\"_XKfdcCGuEeaaOsqBPt_qWw _HoP3kiGuEeaaOsqBPt_qWw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"__RWMUFzFEee79ojEzVGoCg\">\n        <dataType href=\"reuse://_mFwi6CGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcQCGuEeaaOsqBPt_qWw\"/>\n      </relationType>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_HoRFuSGuEeaaOsqBPt_qWw\" name=\"Msg\" ports=\"_HoP3kyGuEeaaOsqBPt_qWw _W1JfkCGuEeaaOsqBPt_qWw\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"__SO9IFzFEee79ojEzVGoCg\">\n        <dataType href=\"reuse://_mFwi6CGuEeaaOsqBPt_qWw/Tutorial/Tutorial/models/ApplicationModelDataTypes.cf_dt#_mFqcRSGuEeaaOsqBPt_qWw\"/>\n      </relationType>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_5HuosIxKEeuvI_s2T-suXQ\" name=\"HybridSchedulingApp\" version=\"8.0.2_r1_287\" target=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_5M740IxKEeuvI_s2T-suXQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_5M740YxKEeuvI_s2T-suXQ\" key=\"cofluent.managedbuild.config.msvc2015.exe.release.1619469672\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_5HuosYxKEeuvI_s2T-suXQ\" name=\"HybridSchedulingAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_-Utq8IxKEeuvI_s2T-suXQ\" name=\"Producer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_-Utq8YxKEeuvI_s2T-suXQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_-Utq9oxKEeuvI_s2T-suXQ\" relations=\"_-Uu5GYxKEeuvI_s2T-suXQ\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_-Utq8oxKEeuvI_s2T-suXQ\" name=\"ProducerBh\" firstStatement=\"_-Utq84xKEeuvI_s2T-suXQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-Utq84xKEeuvI_s2T-suXQ\" name=\"init\" isFirstOf=\"_-Utq8oxKEeuvI_s2T-suXQ\" next=\"_-Utq9IxKEeuvI_s2T-suXQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_-Utq9IxKEeuvI_s2T-suXQ\" name=\"Loop\" firstStatement=\"_-Utq9YxKEeuvI_s2T-suXQ\" lastStatement=\"_-Utq9oxKEeuvI_s2T-suXQ\" previous=\"_-Utq84xKEeuvI_s2T-suXQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-Utq9YxKEeuvI_s2T-suXQ\" name=\"produce\" isFirstOf=\"_-Utq9IxKEeuvI_s2T-suXQ\" next=\"_-Utq9oxKEeuvI_s2T-suXQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_-Utq9oxKEeuvI_s2T-suXQ\" name=\"OutAction\" isLastOf=\"_-Utq9IxKEeuvI_s2T-suXQ\" previous=\"_-Utq9YxKEeuvI_s2T-suXQ\" port=\"_-Utq8YxKEeuvI_s2T-suXQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_-UvgUYxKEeuvI_s2T-suXQ\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_-UvgUoxKEeuvI_s2T-suXQ\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_-UvgV4xKEeuvI_s2T-suXQ\" relations=\"_-Uu5GYxKEeuvI_s2T-suXQ\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_-UvgU4xKEeuvI_s2T-suXQ\" name=\"ConsumerBh\" firstStatement=\"_-UvgVIxKEeuvI_s2T-suXQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-UvgVIxKEeuvI_s2T-suXQ\" name=\"init\" isFirstOf=\"_-UvgU4xKEeuvI_s2T-suXQ\" next=\"_-UvgVYxKEeuvI_s2T-suXQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_-UvgVYxKEeuvI_s2T-suXQ\" name=\"Loop\" firstStatement=\"_-UvgV4xKEeuvI_s2T-suXQ\" lastStatement=\"_-UvgVoxKEeuvI_s2T-suXQ\" previous=\"_-UvgVIxKEeuvI_s2T-suXQ\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-UvgVoxKEeuvI_s2T-suXQ\" name=\"consume\" isLastOf=\"_-UvgVYxKEeuvI_s2T-suXQ\" previous=\"_-UvgV4xKEeuvI_s2T-suXQ\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_-UvgV4xKEeuvI_s2T-suXQ\" name=\"InAction\" isFirstOf=\"_-UvgVYxKEeuvI_s2T-suXQ\" next=\"_-UvgVoxKEeuvI_s2T-suXQ\" port=\"_-UvgUoxKEeuvI_s2T-suXQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_-UwHMIxKEeuvI_s2T-suXQ\" name=\"Controller\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_-UwHMYxKEeuvI_s2T-suXQ\" name=\"ControllerBh\" firstStatement=\"_-UwHMoxKEeuvI_s2T-suXQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-UwHMoxKEeuvI_s2T-suXQ\" name=\"init\" isFirstOf=\"_-UwHMYxKEeuvI_s2T-suXQ\" next=\"_-UwHM4xKEeuvI_s2T-suXQ\" executionTime=\"500 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_-UwHM4xKEeuvI_s2T-suXQ\" name=\"schedule\" previous=\"_-UwHMoxKEeuvI_s2T-suXQ\" algorithm=\"/*&#xD;&#xA; * Since both Producer and Consumer are mapped to the same processor, Processor1 is idle.&#xD;&#xA; * To get a better resource utilization, this controller function will migrate one task &#xD;&#xA; * (Consumer) to the other processor.&#xD;&#xA; */&#xD;&#xA; &#xD;&#xA;// get the reference of Consumer and the two processors/schedulers&#xD;&#xA;auto c = cf_get_component(&quot;/HybridSchedulingApp/Consumer&quot;);&#xD;&#xA;auto consumer = dynamic_cast&lt;cf_function*>(c);&#xD;&#xA;assert(consumer);&#xD;&#xA;&#xD;&#xA;auto p = cf_get_component(&quot;/HybridSchedulingPlf/Processor/Scheduler&quot;);&#xD;&#xA;auto processor = dynamic_cast&lt;cf_scheduler*>(p);&#xD;&#xA;assert(processor);&#xD;&#xA;&#xD;&#xA;auto p2 = cf_get_component(&quot;/HybridSchedulingPlf/Processor2/Scheduler&quot;);&#xD;&#xA;auto processor2 = dynamic_cast&lt;cf_scheduler*>(p2);&#xD;&#xA;assert(processor2);&#xD;&#xA;&#xD;&#xA;cf_log(CF_LOG_LEVEL_INFO, &quot;before migration:\\n%s%s&quot;, &#xD;&#xA;&#x9;   cf_dump_task_status(processor).c_str(),&#xD;&#xA;&#x9;   cf_dump_task_status(processor2).c_str());&#xD;&#xA;&#x9;   &#xD;&#xA;cf_migrate_task(consumer, processor2, 0);&#xD;&#xA;&#xD;&#xA;cf_log(CF_LOG_LEVEL_INFO, &quot;after migration:\\n%s%s&quot;, &#xD;&#xA;&#x9;   cf_dump_task_status(processor).c_str(),&#xD;&#xA;&#x9;   cf_dump_task_status(processor2).c_str());\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_-Uu5GYxKEeuvI_s2T-suXQ\" name=\"MsgQ\" ports=\"_-Utq8YxKEeuvI_s2T-suXQ _-UvgUoxKEeuvI_s2T-suXQ\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_-Uu5GoxKEeuvI_s2T-suXQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_d1V2MM3gEeuWXa1-cuLGvw\" name=\"Inheritance_example2App\" version=\"8.1.0_charles_1\" target=\"\" includeInheritedHeader=\"\" inheritanceClass=\"\" callToInheritedConstructors=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n  <annotations xmi:id=\"_d2HSQM3gEeuWXa1-cuLGvw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_d2HSQc3gEeuWXa1-cuLGvw\" key=\"cofluent.managedbuild.config.msvc2019.exe.release.16717630\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_d1V2Mc3gEeuWXa1-cuLGvw\" name=\"Inheritance_example2AppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_2KqbQM3gEeuWXa1-cuLGvw\" name=\"F1\" includeInheritedHeader=\"camera_class.h\" inheritanceClass=\"camera_class,cf_core::cf_function\" callToInheritedConstructors=\" camera_class(640,480),cf_function(name)\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_2KqbQc3gEeuWXa1-cuLGvw\" name=\"F1Bh\" firstStatement=\"_2KqbQs3gEeuWXa1-cuLGvw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_2KqbQs3gEeuWXa1-cuLGvw\" name=\"init\" isFirstOf=\"_2KqbQc3gEeuWXa1-cuLGvw\" algorithm=\"film();\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_2UtIJ83gEeuWXa1-cuLGvw\" name=\"F2\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_2UtIKM3gEeuWXa1-cuLGvw\" name=\"F2Bh\" firstStatement=\"_2UtIKc3gEeuWXa1-cuLGvw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_2UtIKc3gEeuWXa1-cuLGvw\" name=\"init\" isFirstOf=\"_2UtIKM3gEeuWXa1-cuLGvw\" algorithm=\"display();\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n      </refinement>\n    </models>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_JeuDYIrZEeum2O_XDOsY6w\" name=\"CustomizedDispatcherApp\" version=\"8.0.2_r1_287\" target=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_JeuDYYrZEeum2O_XDOsY6w\" name=\"CustomizedDispatcherAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_RPX8QIrZEeum2O_XDOsY6w\" name=\"Producer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"ROUND_ROBIN\" timeSlicePeriod=\"20 ns\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <max xmi:id=\"_Tpkt0YrZEeum2O_XDOsY6w\" integerLimit=\"1\"/>\n      <min xmi:id=\"_Tpkt0IrZEeum2O_XDOsY6w\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_StoC8IrZEeum2O_XDOsY6w\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_RPreRIrZEeum2O_XDOsY6w\" relations=\"_SKSsYIrZEeum2O_XDOsY6w\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_RPreQIrZEeum2O_XDOsY6w\" name=\"ProducerBh\" firstStatement=\"_RPreQYrZEeum2O_XDOsY6w\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_RPreQYrZEeum2O_XDOsY6w\" name=\"init\" isFirstOf=\"_RPreQIrZEeum2O_XDOsY6w\" next=\"_RPreQorZEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_RPreQorZEeum2O_XDOsY6w\" name=\"Loop\" firstStatement=\"_RPreQ4rZEeum2O_XDOsY6w\" lastStatement=\"_RPreRIrZEeum2O_XDOsY6w\" previous=\"_RPreQYrZEeum2O_XDOsY6w\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_RPreQ4rZEeum2O_XDOsY6w\" name=\"produce\" isFirstOf=\"_RPreQorZEeum2O_XDOsY6w\" next=\"_RPreRIrZEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_RPreRIrZEeum2O_XDOsY6w\" name=\"OutAction\" isLastOf=\"_RPreQorZEeum2O_XDOsY6w\" previous=\"_RPreQ4rZEeum2O_XDOsY6w\" port=\"_StoC8IrZEeum2O_XDOsY6w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_Rnm2EIrZEeum2O_XDOsY6w\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"ROUND_ROBIN\" timeSlicePeriod=\"20 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <max xmi:id=\"_UMbjQYrZEeum2O_XDOsY6w\" integerLimit=\"1\"/>\n      <min xmi:id=\"_UMbjQIrZEeum2O_XDOsY6w\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_S6rAcIrZEeum2O_XDOsY6w\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_Ro0-FIrZEeum2O_XDOsY6w\" relations=\"_SKSsYIrZEeum2O_XDOsY6w\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_Ro0-EIrZEeum2O_XDOsY6w\" name=\"ConsumerBh\" firstStatement=\"_Ro0-EYrZEeum2O_XDOsY6w\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_Ro0-EYrZEeum2O_XDOsY6w\" name=\"init\" isFirstOf=\"_Ro0-EIrZEeum2O_XDOsY6w\" next=\"_Ro0-EorZEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_Ro0-EorZEeum2O_XDOsY6w\" name=\"Loop\" firstStatement=\"_Ro0-FIrZEeum2O_XDOsY6w\" lastStatement=\"_Ro0-E4rZEeum2O_XDOsY6w\" previous=\"_Ro0-EYrZEeum2O_XDOsY6w\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_Ro0-E4rZEeum2O_XDOsY6w\" name=\"consume\" isLastOf=\"_Ro0-EorZEeum2O_XDOsY6w\" previous=\"_Ro0-FIrZEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Ro0-FIrZEeum2O_XDOsY6w\" name=\"InAction\" isFirstOf=\"_Ro0-EorZEeum2O_XDOsY6w\" next=\"_Ro0-E4rZEeum2O_XDOsY6w\" port=\"_S6rAcIrZEeum2O_XDOsY6w\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_SKSsYIrZEeum2O_XDOsY6w\" name=\"MsgQ\" ports=\"_StoC8IrZEeum2O_XDOsY6w _S6rAcIrZEeum2O_XDOsY6w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <max xmi:id=\"_U0khUYrZEeum2O_XDOsY6w\" integerLimit=\"1\"/>\n      <min xmi:id=\"_U0khUIrZEeum2O_XDOsY6w\" integerLimit=\"0\"/>\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_SKTTcIrZEeum2O_XDOsY6w\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_k_KDUIYoEeum2O_XDOsY6w\" name=\"CustomizedSchedulerApp\" version=\"8.0.2_r1_287\" target=\"\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n  <annotations xmi:id=\"_lMswEIYoEeum2O_XDOsY6w\" source=\"cdt.configurations\">\n    <details xmi:id=\"_lMswEYYoEeum2O_XDOsY6w\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1935559332\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_k_KqYIYoEeum2O_XDOsY6w\" name=\"CustomizedSchedulerAppSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oLwa0IYrEeum2O_XDOsY6w\" name=\"Producer\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <max xmi:id=\"_MJb7YYsUEeum2O_XDOsY6w\" integerLimit=\"1\"/>\n      <min xmi:id=\"_MJb7YIsUEeum2O_XDOsY6w\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_qqNaQIYrEeum2O_XDOsY6w\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_oMBglIYrEeum2O_XDOsY6w\" relations=\"_pKzdAIYrEeum2O_XDOsY6w\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oMBgkIYrEeum2O_XDOsY6w\" name=\"ProducerBh\" firstStatement=\"_oMBgkYYrEeum2O_XDOsY6w\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oMBgkYYrEeum2O_XDOsY6w\" name=\"init\" isFirstOf=\"_oMBgkIYrEeum2O_XDOsY6w\" next=\"_oMBgkoYrEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oMBgkoYrEeum2O_XDOsY6w\" name=\"Loop\" firstStatement=\"_oMBgk4YrEeum2O_XDOsY6w\" lastStatement=\"_oMBglIYrEeum2O_XDOsY6w\" previous=\"_oMBgkYYrEeum2O_XDOsY6w\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oMBgk4YrEeum2O_XDOsY6w\" name=\"produce\" isFirstOf=\"_oMBgkoYrEeum2O_XDOsY6w\" next=\"_oMBglIYrEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_oMBglIYrEeum2O_XDOsY6w\" name=\"OutAction\" isLastOf=\"_oMBgkoYrEeum2O_XDOsY6w\" previous=\"_oMBgk4YrEeum2O_XDOsY6w\" port=\"_qqNaQIYrEeum2O_XDOsY6w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_oqAdEIYrEeum2O_XDOsY6w\" name=\"Consumer\" cyclePeriod=\" ns\" affinity=\"0\" priority=\"0\" schedulingPolicy=\"FIFO\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <max xmi:id=\"_NSaVoIsUEeum2O_XDOsY6w\" integerLimit=\"1\"/>\n      <min xmi:id=\"_NSZukIsUEeum2O_XDOsY6w\" integerLimit=\"0\"/>\n      <ports xmi:id=\"_rAzVUIYrEeum2O_XDOsY6w\" name=\"MsgQ\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_oqMqVIYrEeum2O_XDOsY6w\" relations=\"_pKzdAIYrEeum2O_XDOsY6w\" size=\"\" synchronizeName=\"true\" vector=\"false\" requestPipelineDepth=\"1\">\n        <constructorArguments></constructorArguments>\n        <templateArguments></templateArguments>\n      </ports>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_oqMqUIYrEeum2O_XDOsY6w\" name=\"ConsumerBh\" firstStatement=\"_oqMqUYYrEeum2O_XDOsY6w\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oqMqUYYrEeum2O_XDOsY6w\" name=\"init\" isFirstOf=\"_oqMqUIYrEeum2O_XDOsY6w\" next=\"_oqMqUoYrEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oqMqUoYrEeum2O_XDOsY6w\" name=\"Loop\" firstStatement=\"_oqMqVIYrEeum2O_XDOsY6w\" lastStatement=\"_oqMqU4YrEeum2O_XDOsY6w\" previous=\"_oqMqUYYrEeum2O_XDOsY6w\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_oqMqU4YrEeum2O_XDOsY6w\" name=\"consume\" isLastOf=\"_oqMqUoYrEeum2O_XDOsY6w\" previous=\"_oqMqVIYrEeum2O_XDOsY6w\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_oqMqVIYrEeum2O_XDOsY6w\" name=\"InAction\" isFirstOf=\"_oqMqUoYrEeum2O_XDOsY6w\" next=\"_oqMqU4YrEeum2O_XDOsY6w\" port=\"_rAzVUIYrEeum2O_XDOsY6w\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_pKzdAIYrEeum2O_XDOsY6w\" name=\"MsgQ\" ports=\"_qqNaQIYrEeum2O_XDOsY6w _rAzVUIYrEeum2O_XDOsY6w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n      <relationType xsi:type=\"cofluent:RelationPredefinedType\" xmi:id=\"_pK0rIIYrEeum2O_XDOsY6w\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_gn6TQEOuEeKsm7KBoEiMww\" name=\"MyModel\" constructor=\"\" includes=\"\" postSimulation=\"\" version=\"4.0.0\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" preSimulation=\"\" postElaboration=\"// initialize socket server&#xD;&#xA;cf_csl::cf_csl_init_socket_server( &quot;1250&quot; );\" globalTypeDeclarations=\"#include &quot;csl/csl_api.h&quot;\" globalDeclarations=\"\" globalDefinitions=\"\">\n  <annotations xmi:id=\"_gn66UEOuEeKsm7KBoEiMww\" source=\"codegen\">\n    <details xmi:id=\"_gn66UUOuEeKsm7KBoEiMww\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"CoFluentModelExample/gen-sysc\"/>\n    <details xmi:id=\"_gn66UkOuEeKsm7KBoEiMww\" key=\"com.cofluent.studio.codegen.simics.path\" value=\"CoFluentModelExample/gen-simics\"/>\n  </annotations>\n  <annotations xmi:id=\"_gn66U0OuEeKsm7KBoEiMww\" source=\"build\">\n    <details xmi:id=\"_gn66VEOuEeKsm7KBoEiMww\" key=\"path\" value=\"CoFluentModelExample/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_ZZ0CsEkxEeKg6PbcHMEIjQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_WTu-EMyyEeSC3aHj14R39A\" key=\"cofluent.managedbuild.config.csl.msvc2010.exe.release.561718471\"/>\n    <details xmi:id=\"_4kOroNkPEeSpYMJ4mEUPaw\" key=\"cofluent.managedbuild.config.csl.msvc2010.exe.release.1011688268\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_qpyn4EOuEeKsm7KBoEiMww\" name=\"DefPacket\" definition=\"typedef int DefPacket;\" tracePayload=\"&#x9;trace &lt;&lt; get_data();\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_gn8IcEOuEeKsm7KBoEiMww\" name=\"MyModelSt\" documentation=\"\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_iQ1_8EOuEeKsm7KBoEiMww\" name=\"packet_in\" documentation=\"\" constructor=\"// set synchronization callback&#xD;&#xA;CF_CSL_SET_SYNC_CB( cfm_packet_in::my_callback )\" declarations=\"// synchronization event callback&#xD;&#xA;void my_callback();&#xD;&#xA;// synchronization event declaration&#xD;&#xA;CSL_SYNC_EV_DECL\" definitions=\"// synchronization event callback definition&#xD;&#xA;void cfm_packet_in::my_callback()&#xD;&#xA;{&#xD;&#xA;   // notify internal synchronization event&#xD;&#xA;   CF_CSL_NOTIFY_SYNC_EV&#xD;&#xA;}\" cyclePeriod=\" ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n      <ports xmi:id=\"_sZWhAEOuEeKsm7KBoEiMww\" name=\"p_in\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_I6wE8EOvEeKsm7KBoEiMww\" relations=\"_qpwysEOuEeKsm7KBoEiMww\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_I6vd4EOvEeKsm7KBoEiMww\" name=\"packet_inBh\" firstStatement=\"_J48ykEOvEeKsm7KBoEiMww\">\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_I6wE8EOvEeKsm7KBoEiMww\" name=\"OutAction\" isLastOf=\"_J48ykEOvEeKsm7KBoEiMww\" previous=\"_KfZukEOvEeKsm7KBoEiMww\" port=\"_sZWhAEOuEeKsm7KBoEiMww\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_J48ykEOvEeKsm7KBoEiMww\" name=\"Loop\" isFirstOf=\"_I6vd4EOvEeKsm7KBoEiMww\" firstStatement=\"_KfZukEOvEeKsm7KBoEiMww\" lastStatement=\"_I6wE8EOvEeKsm7KBoEiMww\" condition=\"10\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_KfZukEOvEeKsm7KBoEiMww\" name=\"send\" documentation=\"\" isFirstOf=\"_J48ykEOvEeKsm7KBoEiMww\" next=\"_I6wE8EOvEeKsm7KBoEiMww\" algorithm=\"&#x9;&#x9;// wait for syncrhonization event&#xA;        CF_CSL_WAIT_SYNC_EV&#xA;        // get first input packet&#xA;&#x9;&#x9;packet* input_packet = cf_csl_get_first_input_packet();&#xA;&#x9;&#x9;cf_trace_report(&quot;packet received at %f ns:&quot;,cf_time_stamp().to_scalar(CF_NS));&#xA;&#x9;&#x9;cf_trace_report(&quot;...source: %d&quot;, input_packet->source);&#xA;&#x9;&#x9;cf_trace_report(&quot;...destination: %d&quot;, input_packet->destination);&#xA;&#x9;&#x9;cf_trace_report(&quot;...packet_id: %d&quot;, input_packet->packet_id);&#xA;&#x9;&#x9;cf_trace_report(&quot;...packet_size: %d&quot;, input_packet->packet_size);&#xA;&#x9;&#x9;cf_trace_report(&quot;...data: %d&quot;, (int)*(input_packet->data));&#xA;&#x9;&#x9;cf_trace_report(&quot;...endianess: %d&quot;, input_packet->endianess);&#xA;&#x9;&#x9;// send packet data to message queue&#xA;&#x9;&#x9;p_in = (int)*(input_packet->data);&#xA;&#x9;&#x9;// delete packet in the buffer&#xA;&#x9;&#x9;cf_csl_delete_first_input_packet();    \" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_k5TP8EOuEeKsm7KBoEiMww\" name=\"packet_out\" documentation=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_s2a3gEOuEeKsm7KBoEiMww\" name=\"p_out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_JhEeEEOvEeKsm7KBoEiMww\" relations=\"_r5A0EEOuEeKsm7KBoEiMww\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_JhD3AEOvEeKsm7KBoEiMww\" name=\"packet_outBh\" firstStatement=\"_KHvcgEOvEeKsm7KBoEiMww\">\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_JhEeEEOvEeKsm7KBoEiMww\" name=\"InAction\" isFirstOf=\"_KHvcgEOvEeKsm7KBoEiMww\" next=\"_Lm9MgEOvEeKsm7KBoEiMww\" port=\"_s2a3gEOuEeKsm7KBoEiMww\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_KHvcgEOvEeKsm7KBoEiMww\" name=\"Loop\" isFirstOf=\"_JhD3AEOvEeKsm7KBoEiMww\" firstStatement=\"_JhEeEEOvEeKsm7KBoEiMww\" lastStatement=\"_Lm9MgEOvEeKsm7KBoEiMww\" condition=\"10\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_Lm9MgEOvEeKsm7KBoEiMww\" name=\"receive\" isLastOf=\"_KHvcgEOvEeKsm7KBoEiMww\" previous=\"_JhEeEEOvEeKsm7KBoEiMww\" algorithm=\"    cf_csl::packet* current_packet;&#xA;&#xA;    // generate a packet to send to third-party simulator&#xA;    current_packet = cf_csl::cf_csl_new_output_packet( 1 );&#xA;    current_packet->source = 1;&#xA;    current_packet->destination = 2;&#xA;    current_packet->packet_id = 100+p_out;&#xA;    current_packet->packet_size = 1;&#xA;    *(current_packet->data) = p_out;&#xA;    current_packet->endianess = true;&#xA;    cf_csl_output_packet_ready( current_packet );&#xA;&#xA;    cf_trace_report(&quot;packet ready to be sent at %f ns:&quot;,cf_time_stamp().to_scalar(CF_NS));&#xA;&#x9;cf_trace_report( &quot;...source: %d&quot;, current_packet->source );&#xA;&#x9;cf_trace_report( &quot;...destination: %d&quot;, current_packet->destination );&#xA;&#x9;cf_trace_report( &quot;...packet_id: %d&quot;, current_packet->packet_id );&#xA;&#x9;cf_trace_report( &quot;...packet_size: %d&quot;, current_packet->packet_size );&#xA;&#x9;cf_trace_report( &quot;...data: %d&quot;, *(current_packet->data) );&#xA;&#x9;cf_trace_report( &quot;...endianess: %d&quot;, current_packet->endianess );&#xA;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_lvOLUEOuEeKsm7KBoEiMww\" name=\"packet_process\" constructor=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_shDrgEOuEeKsm7KBoEiMww\" name=\"p_in\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_Jaf8AEOvEeKsm7KBoEiMww\" relations=\"_qpwysEOuEeKsm7KBoEiMww\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_su4FEEOuEeKsm7KBoEiMww\" name=\"p_out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_JDP5oEOvEeKsm7KBoEiMww\" relations=\"_r5A0EEOuEeKsm7KBoEiMww\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_JDOrgEOvEeKsm7KBoEiMww\" name=\"packet_processBh\" firstStatement=\"_J_4hAEOvEeKsm7KBoEiMww\">\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_JDP5oEOvEeKsm7KBoEiMww\" name=\"OutAction\" isLastOf=\"_J_4hAEOvEeKsm7KBoEiMww\" previous=\"_LHS1AEOvEeKsm7KBoEiMww\" port=\"_su4FEEOuEeKsm7KBoEiMww\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Jaf8AEOvEeKsm7KBoEiMww\" name=\"InAction\" isFirstOf=\"_J_4hAEOvEeKsm7KBoEiMww\" next=\"_LHS1AEOvEeKsm7KBoEiMww\" port=\"_shDrgEOuEeKsm7KBoEiMww\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_J_4hAEOvEeKsm7KBoEiMww\" name=\"Loop\" isFirstOf=\"_JDOrgEOvEeKsm7KBoEiMww\" firstStatement=\"_Jaf8AEOvEeKsm7KBoEiMww\" lastStatement=\"_JDP5oEOvEeKsm7KBoEiMww\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_LHS1AEOvEeKsm7KBoEiMww\" name=\"process\" previous=\"_Jaf8AEOvEeKsm7KBoEiMww\" next=\"_JDP5oEOvEeKsm7KBoEiMww\" algorithm=\"&#x9;p_out = p_in + 100;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_qpwysEOuEeKsm7KBoEiMww\" name=\"p_in\" documentation=\"\" ports=\"_shDrgEOuEeKsm7KBoEiMww _sZWhAEOuEeKsm7KBoEiMww\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_8-eTYD7MEee3R-XLio7ORA\" dataType=\"_qpyn4EOuEeKsm7KBoEiMww\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_r5A0EEOuEeKsm7KBoEiMww\" name=\"p_out\" ports=\"_s2a3gEOuEeKsm7KBoEiMww _su4FEEOuEeKsm7KBoEiMww\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_8-xOUD7MEee3R-XLio7ORA\" dataType=\"_qpyn4EOuEeKsm7KBoEiMww\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_6cwB8ekOEeCdNKGc-9DX1A\" name=\"TLM2AT\" constructor=\"\" postSimulation=\"\" version=\"Dev\" cyclePeriod=\"10 ns\" globalTypeDeclarations=\"#include &quot;my_ext.h&quot;\" globalDeclarations=\"//#define TARGET_ADDRESS 16824&#xD;&#xA;#define TARGET_ADDRESS 3U&lt;&lt;28&#xD;&#xA;#define TARGET_2_ADDRESS 1536&#xD;&#xA;//#define MEMORY_ADDRESS (1U&lt;&lt;28)+0x200&#xD;\">\n  <annotations xmi:id=\"_6cwB8ukOEeCdNKGc-9DX1A\" source=\"codegen\">\n    <details xmi:id=\"_6cwB8-kOEeCdNKGc-9DX1A\" key=\"path\" value=\"TLM2AT/gen-sysc\"/>\n  </annotations>\n  <annotations xmi:id=\"_6cwB9OkOEeCdNKGc-9DX1A\" source=\"build\">\n    <details xmi:id=\"_6cwB9ekOEeCdNKGc-9DX1A\" key=\"path\" value=\"TLM2AT/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_5H6qEOkbEeCdNKGc-9DX1A\" source=\"cdt.configurations\">\n    <details xmi:id=\"_cZuWEFf3EeevA5lQU0e4eQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1065188594\"/>\n    <details xmi:id=\"_m8GGEGFiEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1231300668\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_E3SHXOkPEeCdNKGc-9DX1A\" name=\"Target\" definition=\"typedef int Target;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_E3SHXekPEeCdNKGc-9DX1A\" name=\"Initiator\" definition=\"typedef int Initiator;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_E3SHXukPEeCdNKGc-9DX1A\" name=\"DefData\" definition=\"typedef int DefData;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <dataTypes xmi:id=\"_tdt5SkaQEeGc0oM91bg4Nw\" name=\"DefMsgQ\" definition=\"typedef int DefMsgQ;\" tracePayload=\"trace &lt;&lt; get_data();\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_6c5y8OkOEeCdNKGc-9DX1A\" name=\"TLM2ATStructSt\">\n    <models xsi:type=\"cofluent:SystemCIP\" xmi:id=\"_E3IWPOkPEeCdNKGc-9DX1A\" name=\"TLM2Platfom\" constructor=\"\" className=\"at_top\" generateInclude=\"true\">\n      <ports xmi:id=\"_E3IWPekPEeCdNKGc-9DX1A\" name=\"interconnect->targ_socket\" documentation=\"\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_E3IXg-kPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_E3IWP-kPEeCdNKGc-9DX1A\" name=\"interconnect->init_socket\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_E3IYOukPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_R7n8MO5qEeCuH7hu0f8HUw\" name=\"interconnect->targ_socket\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_OoU_iu5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_VpmCwO5qEeCuH7hu0f8HUw\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_OoU_ee5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_0c1qADt4EeGitMzjSkjUTA\" name=\"interconnect->init_socket\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_pZU5STt4EeGitMzjSkjUTA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_13JE0Dt4EeGitMzjSkjUTA\" name=\"interconnect->init_socket\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_pZU5XTt4EeGitMzjSkjUTA\" synchronizeName=\"true\" vector=\"false\"/>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_E3IWp-kPEeCdNKGc-9DX1A\" name=\"Writer\" declarations=\"int data;&#xD;&#xA;my_ext ext;\" definitions=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_E3IW6ukPEeCdNKGc-9DX1A\" name=\"ReferenceQueue\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_1B-KUEaPEeGc0oM91bg4Nw\" relations=\"_E3IW-ukPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_E3IW7OkPEeCdNKGc-9DX1A\" name=\"InitiatorWriter\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_E3IWq-kPEeCdNKGc-9DX1A\" relations=\"_E3IXg-kPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_71_FUO5qEeCuH7hu0f8HUw\" name=\"ReferenceQueue2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_E3IW1ekPEeCdNKGc-9DX1A\" relations=\"_tfoDye5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_ZvJGYO5rEeCuH7hu0f8HUw\" name=\"Sync\" type=\"EVENT\" direction=\"IN\" inputActions=\"_Ip_jUO5rEeCuH7hu0f8HUw\" relations=\"_F7D35-5rEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_wl1gwEaQEeGc0oM91bg4Nw\" name=\"ReferenceQueue3\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_3zTTAO5qEeCuH7hu0f8HUw\" relations=\"_tdt5QEaQEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_QOMZIEaSEeGc0oM91bg4Nw\" name=\"Sync2\" type=\"EVENT\" direction=\"IN\" inputActions=\"_SvsiAEaREeGc0oM91bg4Nw\" relations=\"__6hWUEaREeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_e0f7MEaSEeGc0oM91bg4Nw\" name=\"Sync3\" type=\"EVENT\" direction=\"IN\" inputActions=\"_S5q9YEaREeGc0oM91bg4Nw\" relations=\"_B3PhsEaSEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_E3IWqOkPEeCdNKGc-9DX1A\" name=\"WriterBehvBh\" firstStatement=\"_E3IW0ekPEeCdNKGc-9DX1A\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_E3IWqekPEeCdNKGc-9DX1A\" name=\"Loop\" firstStatement=\"_E3IWyekPEeCdNKGc-9DX1A\" lastStatement=\"_Ip_jUO5rEeCuH7hu0f8HUw\" previous=\"_E3IW0ekPEeCdNKGc-9DX1A\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_E3IWq-kPEeCdNKGc-9DX1A\" name=\"OutAction\" previous=\"_E3IWyekPEeCdNKGc-9DX1A\" next=\"_1B-KUEaPEeGc0oM91bg4Nw\" port=\"_E3IW7OkPEeCdNKGc-9DX1A\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_E3IWyekPEeCdNKGc-9DX1A\" name=\"WriteToTarget\" isFirstOf=\"_E3IWqekPEeCdNKGc-9DX1A\" next=\"_E3IWq-kPEeCdNKGc-9DX1A\" algorithm=\"&#x9;// increment&#xA;&#x9;data++;&#xA;&#x9;// initialize reference buffers&#xA;&#x9;ReferenceQueue = data;&#xA;&#x9;ReferenceQueue2 = data;&#xA;&#x9;ReferenceQueue3 = data;&#x9;&#xA;    // prepare TLM2 transaction&#xA;    InitiatorWriter_trans.set_tlm2_delay(cf_dt::cf_time(1, CF_US));&#xA;    tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorWriter_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( TARGET_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_write();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length(&#xA;        sizeof( int )&#xA;        );&#xA;&#x9;// set command extension&#xA;&#x9;ext.i = data;&#xA;&#x9;tlm2_gp_req->set_extension &lt; my_ext > (&amp;ext);&#xA;&#x9;tlm2_gp_req->set_streaming_width(1);\" executionTime=\"100 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_E3IW0ekPEeCdNKGc-9DX1A\" name=\"Initialization\" isFirstOf=\"_E3IWqOkPEeCdNKGc-9DX1A\" next=\"_E3IWqekPEeCdNKGc-9DX1A\" algorithm=\"&#x9;data = 0;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_E3IW1ekPEeCdNKGc-9DX1A\" name=\"OutAction5\" previous=\"_1B-KUEaPEeGc0oM91bg4Nw\" next=\"_3zTTAO5qEeCuH7hu0f8HUw\" port=\"_71_FUO5qEeCuH7hu0f8HUw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_3zTTAO5qEeCuH7hu0f8HUw\" name=\"OutAction2\" previous=\"_E3IW1ekPEeCdNKGc-9DX1A\" next=\"_S5q9YEaREeGc0oM91bg4Nw\" port=\"_wl1gwEaQEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_Ip_jUO5rEeCuH7hu0f8HUw\" name=\"InAction\" isLastOf=\"_E3IWqekPEeCdNKGc-9DX1A\" previous=\"_SvsiAEaREeGc0oM91bg4Nw\" port=\"_ZvJGYO5rEeCuH7hu0f8HUw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_1B-KUEaPEeGc0oM91bg4Nw\" name=\"OutAction3\" previous=\"_E3IWq-kPEeCdNKGc-9DX1A\" next=\"_E3IW1ekPEeCdNKGc-9DX1A\" port=\"_E3IW6ukPEeCdNKGc-9DX1A\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_SvsiAEaREeGc0oM91bg4Nw\" name=\"InAction2\" previous=\"_S5q9YEaREeGc0oM91bg4Nw\" next=\"_Ip_jUO5rEeCuH7hu0f8HUw\" port=\"_QOMZIEaSEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_S5q9YEaREeGc0oM91bg4Nw\" name=\"InAction3\" previous=\"_3zTTAO5qEeCuH7hu0f8HUw\" next=\"_SvsiAEaREeGc0oM91bg4Nw\" port=\"_e0f7MEaSEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_E3IXV-kPEeCdNKGc-9DX1A\" name=\"Target\" declarations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_E3IXdekPEeCdNKGc-9DX1A\" name=\"ReferenceQueue2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_E3IXX-kPEeCdNKGc-9DX1A\" relations=\"_tfoDye5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_E3IXdukPEeCdNKGc-9DX1A\" name=\"TargetWrapper\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_E3IXaukPEeCdNKGc-9DX1A\" relations=\"_E3IYOukPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_HNX44EaSEeGc0oM91bg4Nw\" name=\"Sync2\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_s8EvUEaREeGc0oM91bg4Nw\" relations=\"__6hWUEaREeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_E3IXWOkPEeCdNKGc-9DX1A\" name=\"TargetBehvBh\" firstStatement=\"_E3IXWekPEeCdNKGc-9DX1A\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_E3IXWekPEeCdNKGc-9DX1A\" name=\"Loop\" documentation=\"\" isFirstOf=\"_E3IXWOkPEeCdNKGc-9DX1A\" firstStatement=\"_E3IXX-kPEeCdNKGc-9DX1A\" lastStatement=\"_s8EvUEaREeGc0oM91bg4Nw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_E3IXW-kPEeCdNKGc-9DX1A\" name=\"Compare\" previous=\"_E3IXaukPEeCdNKGc-9DX1A\" next=\"_s8EvUEaREeGc0oM91bg4Nw\" algorithm=\"&#x9;tlm::tlm_generic_payload*   tlm2_gp_resp =&#xA;        TargetWrapper_trans.get_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_resp )&#xA;    int     rcv_data = *reinterpret_cast&lt; int* >(&#xA;                tlm2_gp_resp->get_data_ptr()&#xA;                );&#xA;&#x9;cf_trace_report(&quot;Reference data: 0x%x, received data: 0x%x&quot;,&#xA;&#x9;&#x9;&#x9;ReferenceQueue2, rcv_data&#xA;            );&#xA;&#x9;//my_ext* ext = tlm2_gp_resp->get_extension&lt;my_ext> ();&#xA;    TargetWrapper_trans.release_tlm2_gp();\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_E3IXX-kPEeCdNKGc-9DX1A\" name=\"InAction\" isFirstOf=\"_E3IXWekPEeCdNKGc-9DX1A\" next=\"_E3IXaukPEeCdNKGc-9DX1A\" port=\"_E3IXdekPEeCdNKGc-9DX1A\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_E3IXaukPEeCdNKGc-9DX1A\" name=\"InAction2\" previous=\"_E3IXX-kPEeCdNKGc-9DX1A\" next=\"_E3IXW-kPEeCdNKGc-9DX1A\" port=\"_E3IXdukPEeCdNKGc-9DX1A\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_s8EvUEaREeGc0oM91bg4Nw\" name=\"OutAction\" isLastOf=\"_E3IXWekPEeCdNKGc-9DX1A\" previous=\"_E3IXW-kPEeCdNKGc-9DX1A\" port=\"_HNX44EaSEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_2qGsFO5pEeCuH7hu0f8HUw\" name=\"Reader\" declarations=\"int data;\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_2qGsSu5pEeCuH7hu0f8HUw\" name=\"ReferenceQueue3\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_2qGsIO5pEeCuH7hu0f8HUw\" relations=\"_tdt5QEaQEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_2qGsS-5pEeCuH7hu0f8HUw\" name=\"InitiatorReader\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_2qGsNu5pEeCuH7hu0f8HUw\" relations=\"_OoU_iu5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_2qGsTO5pEeCuH7hu0f8HUw\" name=\"ReaderResponse\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_2qGsK-5pEeCuH7hu0f8HUw\" relations=\"_OoU_ee5qEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_2qGsTe5pEeCuH7hu0f8HUw\" name=\"Sync\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_2qGsQO5pEeCuH7hu0f8HUw\" relations=\"_F7D35-5rEeCuH7hu0f8HUw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_2qGsFe5pEeCuH7hu0f8HUw\" name=\"ReaderBehvBh\" firstStatement=\"_2qGsFu5pEeCuH7hu0f8HUw\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_2qGsFu5pEeCuH7hu0f8HUw\" name=\"Loop\" isFirstOf=\"_2qGsFe5pEeCuH7hu0f8HUw\" firstStatement=\"_2qGsIO5pEeCuH7hu0f8HUw\" lastStatement=\"_2qGsQO5pEeCuH7hu0f8HUw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_2qGsGO5pEeCuH7hu0f8HUw\" name=\"ReadTarget_2\" previous=\"_2qGsIO5pEeCuH7hu0f8HUw\" next=\"_2qGsNu5pEeCuH7hu0f8HUw\" algorithm=\"&#x9;InitiatorReader_trans.set_tlm2_delay(cf_dt::cf_time(3, CF_US));&#xA;&#x9;tlm::tlm_generic_payload*   tlm2_gp_req =&#xA;        InitiatorReader_trans.allocate_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_req )&#xA;&#x9;tlm2_gp_req->set_address( TARGET_2_ADDRESS );&#xA;&#x9;tlm2_gp_req->set_read();&#xA;&#x9;tlm2_gp_req->set_data_ptr(&#xA;        reinterpret_cast&lt; unsigned char* >( &amp;data )&#xA;        );&#xA;&#x9;tlm2_gp_req->set_data_length(&#xA;        sizeof( int )&#xA;        );&#xA;    tlm2_gp_req->set_streaming_width(1);\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_2qGsHO5pEeCuH7hu0f8HUw\" name=\"Compare\" documentation=\"\" previous=\"_2qGsK-5pEeCuH7hu0f8HUw\" next=\"_2qGsQO5pEeCuH7hu0f8HUw\" algorithm=\"&#x9;tlm::tlm_generic_payload*   tlm2_gp_resp =&#xA;        ReaderResponse_trans.get_tlm2_gp();&#xA;    COFS_SCL_ASSERT( tlm2_gp_resp )&#xA;    int     rcv_data = *reinterpret_cast&lt; int* >(&#xA;                tlm2_gp_resp->get_data_ptr()&#xA;                );&#xA;&#x9;cf_trace_report(&quot;Reference data: 0x%x, received data: 0x%x&quot;,&#xA;&#x9;&#x9;&#x9;ReferenceQueue3, rcv_data&#xA;            );&#xA;    ReaderResponse_trans.release_tlm2_gp();\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_2qGsIO5pEeCuH7hu0f8HUw\" name=\"InAction\" isFirstOf=\"_2qGsFu5pEeCuH7hu0f8HUw\" next=\"_2qGsGO5pEeCuH7hu0f8HUw\" port=\"_2qGsSu5pEeCuH7hu0f8HUw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_2qGsK-5pEeCuH7hu0f8HUw\" name=\"InAction2\" previous=\"_2qGsNu5pEeCuH7hu0f8HUw\" next=\"_2qGsHO5pEeCuH7hu0f8HUw\" port=\"_2qGsTO5pEeCuH7hu0f8HUw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_2qGsNu5pEeCuH7hu0f8HUw\" name=\"OutAction\" previous=\"_2qGsGO5pEeCuH7hu0f8HUw\" next=\"_2qGsK-5pEeCuH7hu0f8HUw\" port=\"_2qGsS-5pEeCuH7hu0f8HUw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_2qGsQO5pEeCuH7hu0f8HUw\" name=\"OutAction2\" isLastOf=\"_2qGsFu5pEeCuH7hu0f8HUw\" previous=\"_2qGsHO5pEeCuH7hu0f8HUw\" port=\"_2qGsTe5pEeCuH7hu0f8HUw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_pZU5oDt4EeGitMzjSkjUTA\" name=\"Target_2\" declarations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_rlZvQDt4EeGitMzjSkjUTA\" name=\"TargetRequest\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_pZU5pzt4EeGitMzjSkjUTA\" relations=\"_pZU5STt4EeGitMzjSkjUTA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_wXUmIDt4EeGitMzjSkjUTA\" name=\"TargetResponse\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_pZU5sjt4EeGitMzjSkjUTA\" relations=\"_pZU5XTt4EeGitMzjSkjUTA\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_659b8EaQEeGc0oM91bg4Nw\" name=\"ReferenceQueue\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_1Fb4kEaQEeGc0oM91bg4Nw\" relations=\"_E3IW-ukPEeCdNKGc-9DX1A\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_HqIGUEaSEeGc0oM91bg4Nw\" name=\"Sync3\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_tgIeoEaREeGc0oM91bg4Nw\" relations=\"_B3PhsEaSEeGc0oM91bg4Nw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_pZU5oTt4EeGitMzjSkjUTA\" name=\"TargetBehvBh\" firstStatement=\"_pZU5ojt4EeGitMzjSkjUTA\">\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_pZU5ojt4EeGitMzjSkjUTA\" name=\"Loop\" isFirstOf=\"_pZU5oTt4EeGitMzjSkjUTA\" firstStatement=\"_1Fb4kEaQEeGc0oM91bg4Nw\" lastStatement=\"_tgIeoEaREeGc0oM91bg4Nw\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_pZU5pDt4EeGitMzjSkjUTA\" name=\"SendResponse\" previous=\"_pZU5pzt4EeGitMzjSkjUTA\" next=\"_pZU5sjt4EeGitMzjSkjUTA\" algorithm=\"&#x9;TargetResponse_trans = TargetRequest_trans;&#xA;&#x9;tlm::tlm_generic_payload* tlm2_gp_resp = TargetResponse_trans.get_tlm2_gp();&#xA;&#x9;COFS_SCL_ASSERT(tlm2_gp_resp)&#xA;    *reinterpret_cast&lt;int*>(tlm2_gp_resp->get_data_ptr()) = ReferenceQueue;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_pZU5pzt4EeGitMzjSkjUTA\" name=\"InAction2\" previous=\"_1Fb4kEaQEeGc0oM91bg4Nw\" next=\"_pZU5pDt4EeGitMzjSkjUTA\" port=\"_rlZvQDt4EeGitMzjSkjUTA\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_pZU5sjt4EeGitMzjSkjUTA\" name=\"OutAction\" previous=\"_pZU5pDt4EeGitMzjSkjUTA\" next=\"_tgIeoEaREeGc0oM91bg4Nw\" port=\"_wXUmIDt4EeGitMzjSkjUTA\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_1Fb4kEaQEeGc0oM91bg4Nw\" name=\"InAction\" isFirstOf=\"_pZU5ojt4EeGitMzjSkjUTA\" next=\"_pZU5pzt4EeGitMzjSkjUTA\" port=\"_659b8EaQEeGc0oM91bg4Nw\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_tgIeoEaREeGc0oM91bg4Nw\" name=\"OutAction2\" isLastOf=\"_pZU5ojt4EeGitMzjSkjUTA\" previous=\"_pZU5sjt4EeGitMzjSkjUTA\" port=\"_HqIGUEaSEeGc0oM91bg4Nw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_E3IW-ukPEeCdNKGc-9DX1A\" name=\"ReferenceQueue\" ports=\"_659b8EaQEeGc0oM91bg4Nw _E3IW6ukPEeCdNKGc-9DX1A\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ytH18FWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXukPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_E3IXg-kPEeCdNKGc-9DX1A\" name=\"InitiatorWriter\" ports=\"_E3IW7OkPEeCdNKGc-9DX1A _E3IWPekPEeCdNKGc-9DX1A\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yn6l0FWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXekPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_E3IYOukPEeCdNKGc-9DX1A\" name=\"TargetWrapper\" ports=\"_E3IWP-kPEeCdNKGc-9DX1A _E3IXdukPEeCdNKGc-9DX1A\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"16824\" mask=\"15\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ypQCkVWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXOkPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_OoU_ee5qEeCuH7hu0f8HUw\" name=\"ReaderResponse\" ports=\"_VpmCwO5qEeCuH7hu0f8HUw _2qGsTO5pEeCuH7hu0f8HUw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yqcVYFWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXOkPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_OoU_iu5qEeCuH7hu0f8HUw\" name=\"InitiatorReader\" ports=\"_R7n8MO5qEeCuH7hu0f8HUw _2qGsS-5pEeCuH7hu0f8HUw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"\" mask=\"\" response=\"_OoU_ee5qEeCuH7hu0f8HUw\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yrfeQFWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXekPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tfoDye5qEeCuH7hu0f8HUw\" name=\"ReferenceQueue2\" ports=\"_E3IXdekPEeCdNKGc-9DX1A _71_FUO5qEeCuH7hu0f8HUw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yoNgwFWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXukPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_F7D35-5rEeCuH7hu0f8HUw\" name=\"Sync\" ports=\"_ZvJGYO5rEeCuH7hu0f8HUw _2qGsTe5pEeCuH7hu0f8HUw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_pZU5STt4EeGitMzjSkjUTA\" name=\"TargetRequest\" ports=\"_0c1qADt4EeGitMzjSkjUTA _rlZvQDt4EeGitMzjSkjUTA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"16824\" mask=\"15\" response=\"_pZU5XTt4EeGitMzjSkjUTA\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ytbX8VWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXOkPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_pZU5XTt4EeGitMzjSkjUTA\" name=\"TargetResponse\" ports=\"_13JE0Dt4EeGitMzjSkjUTA _wXUmIDt4EeGitMzjSkjUTA\" capacity=\"1\" concurrency=\"1\" sendTime=\"0 ns\" receiveTime=\"1 ns\" sendThreshold=\"\" receiveThreshold=\"\" protocol=\"TLM2_AT\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ysrxEFWiEeeRvfyx0QXVfQ\" dataType=\"_E3SHXOkPEeCdNKGc-9DX1A\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_tdt5QEaQEeGc0oM91bg4Nw\" name=\"ReferenceQueue3\" ports=\"_2qGsSu5pEeCuH7hu0f8HUw _wl1gwEaQEeGc0oM91bg4Nw\" capacity=\"1\" concurrency=\"1\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_yp_pcFWiEeeRvfyx0QXVfQ\" dataType=\"_tdt5SkaQEeGc0oM91bg4Nw\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"__6hWUEaREeGc0oM91bg4Nw\" name=\"Sync2\" ports=\"_QOMZIEaSEeGc0oM91bg4Nw _HNX44EaSEeGc0oM91bg4Nw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_B3PhsEaSEeGc0oM91bg4Nw\" name=\"Sync3\" ports=\"_HqIGUEaSEeGc0oM91bg4Nw _e0f7MEaSEeGc0oM91bg4Nw\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_x88YYGfVEeO_jbF3OgH8Vg\" name=\"HwDeviceModel\" constructor=\"\" includes=\"\" postSimulation=\"\" version=\"Tahiti_s9_20131209-0438\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" priority=\"1\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" postElaboration=\"\" coSimulationType=\"NONE_COSIM\" preSimulation=\"\" globalTypeDeclarations=\"typedef unsigned char byte;&#xD;&#xA;&#xD;&#xA;#define NbLinesMax 144&#xD;&#xA;#define NbPixelsPerLineMax 176&#xD;&#xA;\" globalDeclarations=\"#define COPY_MODE 0&#xD;&#xA;#define REVERT_MODE 1&#xD;&#xA;\" globalDefinitions=\"\">\n  <annotations xmi:id=\"_x88YYWfVEeO_jbF3OgH8Vg\" source=\"codegen\">\n    <details xmi:id=\"_x88YYmfVEeO_jbF3OgH8Vg\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"HwDevice/gen-sysc\"/>\n    <details xmi:id=\"_x88YY2fVEeO_jbF3OgH8Vg\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"HwDevice/gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_x88YZGfVEeO_jbF3OgH8Vg\" source=\"build\">\n    <details xmi:id=\"_x88YZWfVEeO_jbF3OgH8Vg\" key=\"path\" value=\"HwDevice/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_w1JTEHoOEeOrLpQN0HIwbQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_1IpoIFELEeegztV1Np81AQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.800321969\"/>\n    <details xmi:id=\"_ra5l8GFdEeeNIbO8FAWqhA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1959213\"/>\n    <details xmi:id=\"_gJtI0HmzEey-YpMLKTME1Q\" key=\"cofluent.managedbuild.config.msvc2019.exe.release.250990546\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_zaZ04GfVEeO_jbF3OgH8Vg\" name=\"DefFrame\" definition=\"typedef unsigned char DefVideo422[NbPixelsPerLineMax * NbLinesMax * 2];&#xA;&#xA;typedef struct DefFrame_s { &#xD;&#xA;&#x9;&#x9;DefVideo422 payload;&#xD;&#xA;} DefFrame;&#xA;\" copyPayload=\"&#x9;&#x9;memcpy(_address, _value, sizeof(DefFrame));\" tracePayload=\"    cf_color_rgb_t* rgbImage = new cf_color_rgb_t[60000];&#xA;&#xA;&#x9;DefVideo422* tmp = &amp;(get_data_ptr()->payload);&#xA;&#xA;&#x9;unsigned char* Frame = (unsigned char*)&amp;(tmp[0]);&#xA;&#x9;cf_color_rgb_t *OutputFrame = rgbImage;&#xA;&#x9;int sizeX = NbPixelsPerLineMax;&#xA;&#x9;int sizeY = NbLinesMax;&#xA;&#x9;&#xA;&#x9;const int YUV_CORRECTION_FACTOR_Y = 16;&#xA;&#x9;const int YUV_CORRECTION_FACTOR_UV = 128;&#xA;&#xA;&#x9;const double YUV_COEF_V_EQUA_R = 1.140;&#xA;&#x9;const double YUV_COEF_U_EQUA_G = -0.395;&#xA;&#x9;const double YUV_COEF_V_EQUA_G = -0.581;&#xA;&#x9;const double YUV_COEF_U_EQUA_B = 2.032;&#xA;&#xA;&#x9;// YUV blocks&#xA;&#x9;int y1c, y1n;&#xA;&#x9;int y2c, y2n;&#xA;&#xA;&#x9;// RGB blocks&#xA;&#x9;int u1, u2, v1, v2;&#xA;&#x9;int r1, g1, b1;&#xA;&#x9;int r2, g2, b2;&#xA;&#xA;&#xA;&#x9;// 4-Pixel block index&#xA;&#x9;int current_block_idx = 0;&#xA;&#xA;&#xA;&#x9;int pixelX, pixelY;&#xA;&#xA;&#x9;// 'U' table Offset&#xA;&#x9;int offsetU = (int) (sizeX * sizeY);&#xA;&#x9;// 'V' table offset&#xA;&#x9;int offsetV = (int) (sizeX * sizeY * 1.5);&#xA;&#xA;    int pixel_block_idx, line_idx;&#xA;&#xA;    // For each frame line&#xA;&#x9;for (line_idx = 0; line_idx &lt; sizeY; line_idx++) {&#xA;&#xA;&#x9;&#x9;// For each pixel block&#xA;&#x9;&#x9;for (pixel_block_idx = 0; pixel_block_idx &lt; sizeX / 4; pixel_block_idx++) {&#xA;&#x9;&#x9;&#x9;y1c = (int) Frame[current_block_idx + 0];&#xA;&#x9;&#x9;&#x9;y2c = (int) Frame[current_block_idx + 1];&#xA;&#x9;&#x9;&#x9;y1n = (int) Frame[current_block_idx + 2];&#xA;&#x9;&#x9;&#x9;y2n = (int) Frame[current_block_idx + 3];&#xA;&#xA;&#x9;&#x9;&#x9;y1c = y1c - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y2c = y2c - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y1n = y1n - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y2n = y2n - YUV_CORRECTION_FACTOR_Y;&#xA;&#xA;&#x9;&#x9;&#x9;u1 = (int) Frame[(current_block_idx / 2) + offsetU];&#xA;&#x9;&#x9;&#x9;u2 = (int) Frame[(current_block_idx / 2) + offsetU + 1];&#xA;&#x9;&#x9;&#x9;v1 = (int) Frame[(current_block_idx / 2) + offsetV];&#xA;&#x9;&#x9;&#x9;v2 = (int) Frame[(current_block_idx / 2) + offsetV + 1];&#xA;&#xA;&#x9;&#x9;&#x9;u1 = u1 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;u2 = u2 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;v1 = v1 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;v2 = v2 - YUV_CORRECTION_FACTOR_UV;&#xA;&#xA;&#x9;&#x9;&#x9;r1 = (int) (y1c + YUV_COEF_V_EQUA_R * v1);&#xA;&#x9;&#x9;&#x9;g1 = (int) (y1c + YUV_COEF_U_EQUA_G * u1 + YUV_COEF_V_EQUA_G * v1);&#xA;&#x9;&#x9;&#x9;b1 = (int) (y1c + YUV_COEF_U_EQUA_B * u1);&#xA;&#xA;&#x9;&#x9;&#x9;r2 = (int) (y2c + YUV_COEF_V_EQUA_R * v2);&#xA;&#x9;&#x9;&#x9;g2 = (int) (y2c + YUV_COEF_U_EQUA_G * u2 + YUV_COEF_V_EQUA_G * v2);&#xA;&#x9;&#x9;&#x9;b2 = (int) (y2c + YUV_COEF_U_EQUA_B * u2);&#xA;&#xA;&#x9;&#x9;&#x9;// range clipping ensures that all computed values stay inside 0..255&#xA;&#x9;&#x9;&#x9;if (r1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 0;&#xA;&#x9;&#x9;&#x9;else if (r1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 0;&#xA;&#x9;&#x9;&#x9;else if (g1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 0;&#xA;&#x9;&#x9;&#x9;else if (b1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (r2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 0;&#xA;&#x9;&#x9;&#x9;else if (r2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 0;&#xA;&#x9;&#x9;&#x9;else if (g2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 0;&#xA;&#x9;&#x9;&#x9;else if (b2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX = (pixel_block_idx * 4);&#xA;&#x9;&#x9;&#x9;pixelY = (line_idx);&#xA;&#xA;&#x9;&#x9;&#x9;// Compute new pixel index for RGB format&#xA;&#x9;&#x9;&#x9;int noPixel = (int) (pixelX + pixelY * sizeX);&#xA;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb = { (unsigned char)r1, (unsigned char)g1, (unsigned char)b1 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel] = rgb;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb2 = { (unsigned char)r2, (unsigned char)g2, (unsigned char)b2 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 1] = rgb2;&#xA;&#xA;&#x9;&#x9;&#x9;r1 = (int) (y1n + YUV_COEF_V_EQUA_R * v1);&#xA;&#x9;&#x9;&#x9;g1 = (int) (y1n + YUV_COEF_U_EQUA_G * u1 + YUV_COEF_V_EQUA_G * v1);&#xA;&#x9;&#x9;&#x9;b1 = (int) (y1n + YUV_COEF_U_EQUA_B * u1);&#xA;&#xA;&#x9;&#x9;&#x9;r2 = (int) (y2n + YUV_COEF_V_EQUA_R * v2);&#xA;&#x9;&#x9;&#x9;g2 = (int) (y2n + YUV_COEF_U_EQUA_G * u2 + YUV_COEF_V_EQUA_G * v2);&#xA;&#x9;&#x9;&#x9;b2 = (int) (y2n + YUV_COEF_U_EQUA_B * u2);&#xA;&#xA;&#x9;&#x9;&#x9;if (r1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 0;&#xA;&#x9;&#x9;&#x9;else if (r1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 0;&#xA;&#x9;&#x9;&#x9;else if (g1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 0;&#xA;&#x9;&#x9;&#x9;else if (b1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (r2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 0;&#xA;&#x9;&#x9;&#x9;else if (r2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 0;&#xA;&#x9;&#x9;&#x9;else if (g2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 0;&#xA;&#x9;&#x9;&#x9;else if (b2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb3 = { (unsigned char)r1, (unsigned char)g1, (unsigned char)b1 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 2] = rgb3;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb4 = { (unsigned char)r2, (unsigned char)g2, (unsigned char)b2 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 3] = rgb4;&#xA;&#xA;&#x9;&#x9;&#x9;current_block_idx += 4;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;cf_trace_payload_chart_image(0, 0, NbPixelsPerLineMax, NbLinesMax,&#xA;&#x9;&#x9;&#x9;(const cf_dt::cf_color_rgb_t*) rgbImage);\" readTime=\"\" writeTime=\"\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <dataTypes xmi:id=\"_zaZ05GfVEeO_jbF3OgH8Vg\" name=\"DefProcessingMode\" definition=\"typedef cf_dt::cf_dpv_data_t DefProcessingMode;\" copyPayload=\"cf_payload::cb_copy_payload(_address, _value, _atom_count);\" tracePayload=\"&#x9;trace = &quot;&quot;;\" writeTime=\"\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_x88YdGfVEeO_jbF3OgH8Vg\" name=\"HwDeviceModelSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_zaRSAGfVEeO_jbF3OgH8Vg\" name=\"hwDeviceTest\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_O-eN4GfWEeO_jbF3OgH8Vg\" name=\"inputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_LlsUMGfWEeO_jbF3OgH8Vg\" ports=\"_O-fcAGfWEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_PROx0GfWEeO_jbF3OgH8Vg\" name=\"outputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_MYqpQGfWEeO_jbF3OgH8Vg\" ports=\"_PRPY4GfWEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_zaRSBGfVEeO_jbF3OgH8Vg\" name=\"hwDeviceTestSt\" documentation=\"\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_zaRSBWfVEeO_jbF3OgH8Vg\" name=\"hwModel\" constructor=\"\" includes=\"\" destructor=\"\" declarations=\"void revert_frame();\" definitions=\"void cfm_hwmodel::revert_frame() {&#xD;&#xA;&#xD;&#xA;&#x9;/* Reverting the image means that Pixel 0 becomes Pixel N-1, where N is the frame size (in Pixels)&#xD;&#xA;&#x9; * In YUV 422 format, it implies to:&#xD;&#xA;&#x9; *   - Revert the Y table, located at offset 0&#xD;&#xA;&#x9; *   - Revert the U table, located at offset N&#xD;&#xA;&#x9; *   - Revert the V table, located at offset N*1.5&#xD;&#xA;&#x9; */&#xD;&#xA;&#x9;unsigned char* outpayload = outputFrame.payload;&#xD;&#xA;&#x9;unsigned char* inpayload = inputFrame.payload;&#xD;&#xA;&#xD;&#xA;&#x9;// 'U' table Offset&#xD;&#xA;&#x9;int offsetU = (int) (NbPixelsPerLineMax * NbLinesMax);&#xD;&#xA;&#x9;// 'V' table offset&#xD;&#xA;&#x9;int offsetV = (int) (NbPixelsPerLineMax * NbLinesMax * 1.5);&#xD;&#xA;&#xD;&#xA;&#x9;// 4-Pixel block index in a line&#xD;&#xA;&#x9;int pixel_block_idx = 0;&#xD;&#xA;&#xD;&#xA;&#x9;// Line index&#xD;&#xA;&#x9;int line_idx;&#xD;&#xA;&#xD;&#xA;&#x9;// 4-Pixel block offset, from the beginning of the frame&#xD;&#xA;&#x9;int current_block_ofs = 0;&#xD;&#xA;&#xD;&#xA;&#x9;// For each frame line&#xD;&#xA;&#x9;for (line_idx = 0; line_idx &lt; NbLinesMax; line_idx++) {&#xD;&#xA;&#x9;&#x9;// For each pixel block&#xD;&#xA;&#x9;&#x9;for (pixel_block_idx = 0; pixel_block_idx &lt; NbPixelsPerLineMax / 4;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pixel_block_idx++) {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the Y table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 1] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 1];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 2] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 2];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 3] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 3];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the U table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetV - 1 - current_block_ofs / 2 - 0] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[offsetU + current_block_ofs / 2 + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetV - 1 - current_block_ofs / 2 - 1] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[offsetU + current_block_ofs / 2 + 1];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the V table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[NbPixelsPerLineMax*NbLinesMax*2-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- current_block_ofs / 2 - 0] = inpayload[offsetV + current_block_ofs / 2 + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[NbPixelsPerLineMax*NbLinesMax*2-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- current_block_ofs / 2 - 1] = inpayload[offsetV + current_block_ofs / 2 + 1];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;current_block_ofs += 4;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}\" preElaboration=\"\" initializations=\"\" cyclePeriod=\" ns\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\">\n          <ports xmi:id=\"_zaRSB2fVEeO_jbF3OgH8Vg\" name=\"startProcess\" type=\"EVENT\" direction=\"IN\" inputActions=\"_zaRSGWfVEeO_jbF3OgH8Vg\" relations=\"_zaR5NmfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_zaRSCGfVEeO_jbF3OgH8Vg\" name=\"inputFrame\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_zaRSJWfVEeO_jbF3OgH8Vg\" relations=\"_zaR5O2fVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_zaRSCWfVEeO_jbF3OgH8Vg\" name=\"outputFrame\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_zaRSMWfVEeO_jbF3OgH8Vg\" relations=\"_zaR5RmfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_zaRSCmfVEeO_jbF3OgH8Vg\" name=\"processingMode\" type=\"SHARED_VARIABLE\" direction=\"IN\" relations=\"_zaR5UWfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_zaRSC2fVEeO_jbF3OgH8Vg\" name=\"hwModelBh\" firstStatement=\"_zaRSDGfVEeO_jbF3OgH8Vg\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_zaRSDGfVEeO_jbF3OgH8Vg\" name=\"init\" isFirstOf=\"_zaRSC2fVEeO_jbF3OgH8Vg\" next=\"_zaRSGWfVEeO_jbF3OgH8Vg\" algorithm=\"\" executionTime=\"10 ns\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_zaRSD2fVEeO_jbF3OgH8Vg\" name=\"processLoop\" previous=\"_zaRSJWfVEeO_jbF3OgH8Vg\" next=\"_zaRSMWfVEeO_jbF3OgH8Vg\" algorithm=\"&#xA;    if(processingMode == COPY_MODE)&#xA;      outputFrame = inputFrame;&#xA;    else&#xD;&#xA;      revert_frame();&#xA;   &#xD;\" executionTime=\"10 ns\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_zaRSF2fVEeO_jbF3OgH8Vg\" name=\"Loop\" firstStatement=\"_zaRSJWfVEeO_jbF3OgH8Vg\" lastStatement=\"_zaRSMWfVEeO_jbF3OgH8Vg\" previous=\"_zaRSGWfVEeO_jbF3OgH8Vg\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_zaRSGWfVEeO_jbF3OgH8Vg\" name=\"InAction\" documentation=\"\" previous=\"_zaRSDGfVEeO_jbF3OgH8Vg\" next=\"_zaRSF2fVEeO_jbF3OgH8Vg\" port=\"_zaRSB2fVEeO_jbF3OgH8Vg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_zaRSJWfVEeO_jbF3OgH8Vg\" name=\"InAction2\" isFirstOf=\"_zaRSF2fVEeO_jbF3OgH8Vg\" next=\"_zaRSD2fVEeO_jbF3OgH8Vg\" port=\"_zaRSCGfVEeO_jbF3OgH8Vg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_zaRSMWfVEeO_jbF3OgH8Vg\" name=\"OutAction\" isLastOf=\"_zaRSF2fVEeO_jbF3OgH8Vg\" previous=\"_zaRSD2fVEeO_jbF3OgH8Vg\" port=\"_zaRSCWfVEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_6A3LgGfVEeO_jbF3OgH8Vg\" name=\"hwTestBench\" constructor=\"\" destructor=\"\" declarations=\"std::string movieInputFile;&#xD;&#xA;int ProducerNbPicture;&#xD;&#xA;int ConsumerNbPicture;&#xD;&#xA;FILE* movieInputFile_f;&#xD;&#xA;int VideoFrameNumber;&#xD;&#xA;int numread;\" definitions=\"\" preElaboration=\"\" initializations=\"movieInputFile = &quot;../../../video_file/susie422.40.qcif&quot;;&#xD;&#xA;cf_trace_report(&quot;TEST file name = %s&quot;, movieInputFile.c_str());&#xD;&#xA;ProducerNbPicture = 0;&#xD;&#xA;ConsumerNbPicture = 0;&#xD;&#xA;numread = 0;\" priority=\"1\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\" coSimulationType=\"NONE_COSIM\">\n          <ports xmi:id=\"_7SxfUGfVEeO_jbF3OgH8Vg\" name=\"startProcess\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_Z96W8GfWEeO_jbF3OgH8Vg\" relations=\"_zaR5NmfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_7jc_oGfVEeO_jbF3OgH8Vg\" name=\"inputFrame\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_WE9vcGfWEeO_jbF3OgH8Vg\" relations=\"_zaR5O2fVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_7xKrgGfVEeO_jbF3OgH8Vg\" name=\"processingMode\" type=\"SHARED_VARIABLE\" direction=\"OUT\" outputActions=\"_QfD24GfWEeO_jbF3OgH8Vg _7C2M8H3OEeOUAOZdeD_H_w\" relations=\"_zaR5UWfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_8CvjsGfVEeO_jbF3OgH8Vg\" name=\"outputFrame\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_arnxgGfWEeO_jbF3OgH8Vg\" relations=\"_zaR5RmfVEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_O-fcAGfWEeO_jbF3OgH8Vg\" name=\"inputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" outputActions=\"_QNMDwGfWEeO_jbF3OgH8Vg\" port=\"_O-eN4GfWEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_PRPY4GfWEeO_jbF3OgH8Vg\" name=\"outputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" outputActions=\"_QWz50GfWEeO_jbF3OgH8Vg\" port=\"_PROx0GfWEeO_jbF3OgH8Vg\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"__om3IGfVEeO_jbF3OgH8Vg\" name=\"hwTestBenchBh\" firstStatement=\"_Bp4LUGfWEeO_jbF3OgH8Vg\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"__otk0GfVEeO_jbF3OgH8Vg\" name=\"Loop\" firstStatement=\"_CMP4kGfWEeO_jbF3OgH8Vg\" lastStatement=\"_QWz50GfWEeO_jbF3OgH8Vg\" previous=\"_Z96W8GfWEeO_jbF3OgH8Vg\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_Bp4LUGfWEeO_jbF3OgH8Vg\" name=\"init\" isFirstOf=\"__om3IGfVEeO_jbF3OgH8Vg\" next=\"_QfD24GfWEeO_jbF3OgH8Vg\" algorithm=\"&#x9;ProducerNbPicture = 0;&#xA;&#x9;// Open movie file&#xA;&#x9;movieInputFile_f = fopen(movieInputFile.c_str(), &quot;r&quot;);&#xA;&#x9;COFS_SCL_API_VERIFY(movieInputFile_f,&#xA;&#x9;&#x9;&#x9;&quot;[TB] Unable to read the source image file ... exiting\\n&quot;)&#xA;&#x9;// Compute available frame number&#xA;&#x9;fseek(movieInputFile_f, 0L, SEEK_END);&#xA;&#x9;int sz = ftell(movieInputFile_f);&#xA;&#x9;fseek(movieInputFile_f, 0L, SEEK_SET);&#xA;&#x9;VideoFrameNumber = sz / sizeof(DefFrame);&#xA;&#x9;cf_trace_report(&quot;[TB] Available frame number = %d&quot;, VideoFrameNumber);&#xA;&#x9;processingMode = REVERT_MODE;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_CMP4kGfWEeO_jbF3OgH8Vg\" name=\"prepareFrame\" isFirstOf=\"__otk0GfVEeO_jbF3OgH8Vg\" next=\"_7C2M8H3OEeOUAOZdeD_H_w\" algorithm=\"&#x9;&#xA;&#x9;int imax = NbPixelsPerLineMax*NbLinesMax*2;&#xA;  &#x9;int PositionInFile;&#xA;  &#x9;int j;&#xA;&#xA;  &#x9;// Init frame buffer&#xA;  &#x9;for ( j=0; j&lt;imax; j++ )  (inputFrame.payload)[j]=0;&#xA;&#xA; &#x9;PositionInFile = imax*ProducerNbPicture;&#xA;  &#x9;fseek(movieInputFile_f,PositionInFile, SEEK_SET);&#xA;  &#x9;numread = fread( inputFrame.payload, 1, imax, movieInputFile_f );&#xA;&#xA;&#x9;cf_trace_report(&quot;[TB] -- sending input frame  #%d...&quot;,ProducerNbPicture);&#xA;&#x9;&#xA;&#x9;inputStream = inputFrame;&#xA;&#x9;&#xA;&#x9;if(ProducerNbPicture%15 == 0) {&#xA;       cf_trace_report(&quot;[TB] -- switching processing mode...&quot;);&#xA;       processingMode = (processingMode == 0) ? 1 : 0;&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;ProducerNbPicture = (ProducerNbPicture >= VideoFrameNumber -1) ? 0 : (ProducerNbPicture+1);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_DBKuYGfWEeO_jbF3OgH8Vg\" name=\"displayFrame\" previous=\"_arnxgGfWEeO_jbF3OgH8Vg\" next=\"_QWz50GfWEeO_jbF3OgH8Vg\" algorithm=\"&#x9;cf_trace_report(&quot;[TB] -- getting output frame #%d&quot;, ConsumerNbPicture);&#xA;&#x9;outputStream = outputFrame;&#xA;&#x9;ConsumerNbPicture++;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_QNMDwGfWEeO_jbF3OgH8Vg\" name=\"OutAction\" previous=\"_7C2M8H3OEeOUAOZdeD_H_w\" next=\"_WE9vcGfWEeO_jbF3OgH8Vg\" port=\"_O-fcAGfWEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_QWz50GfWEeO_jbF3OgH8Vg\" name=\"OutAction2\" isLastOf=\"__otk0GfVEeO_jbF3OgH8Vg\" previous=\"_DBKuYGfWEeO_jbF3OgH8Vg\" port=\"_PRPY4GfWEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_QfD24GfWEeO_jbF3OgH8Vg\" name=\"OutAction3\" previous=\"_Bp4LUGfWEeO_jbF3OgH8Vg\" next=\"_Z96W8GfWEeO_jbF3OgH8Vg\" port=\"_7xKrgGfVEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_WE9vcGfWEeO_jbF3OgH8Vg\" name=\"OutAction4\" previous=\"_QNMDwGfWEeO_jbF3OgH8Vg\" next=\"_arnxgGfWEeO_jbF3OgH8Vg\" port=\"_7jc_oGfVEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_Z96W8GfWEeO_jbF3OgH8Vg\" name=\"OutAction5\" previous=\"_QfD24GfWEeO_jbF3OgH8Vg\" next=\"__otk0GfVEeO_jbF3OgH8Vg\" port=\"_7SxfUGfVEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_arnxgGfWEeO_jbF3OgH8Vg\" name=\"InAction2\" previous=\"_WE9vcGfWEeO_jbF3OgH8Vg\" next=\"_DBKuYGfWEeO_jbF3OgH8Vg\" port=\"_8CvjsGfVEeO_jbF3OgH8Vg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_7C2M8H3OEeOUAOZdeD_H_w\" name=\"OutAction6\" previous=\"_CMP4kGfWEeO_jbF3OgH8Vg\" next=\"_QNMDwGfWEeO_jbF3OgH8Vg\" port=\"_7xKrgGfVEeO_jbF3OgH8Vg\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_zaR5NmfVEeO_jbF3OgH8Vg\" name=\"startProcess\" ports=\"_zaRSB2fVEeO_jbF3OgH8Vg _7SxfUGfVEeO_jbF3OgH8Vg\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_zaR5O2fVEeO_jbF3OgH8Vg\" name=\"inputFrame\" ports=\"_7jc_oGfVEeO_jbF3OgH8Vg _zaRSCGfVEeO_jbF3OgH8Vg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_X7YesFD1EeegztV1Np81AQ\" dataType=\"_zaZ04GfVEeO_jbF3OgH8Vg\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_zaR5RmfVEeO_jbF3OgH8Vg\" name=\"outputFrame\" ports=\"_zaRSCWfVEeO_jbF3OgH8Vg _8CvjsGfVEeO_jbF3OgH8Vg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_X67ywFD1EeegztV1Np81AQ\" dataType=\"_zaZ04GfVEeO_jbF3OgH8Vg\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_zaR5UWfVEeO_jbF3OgH8Vg\" name=\"processingMode\" ports=\"_7xKrgGfVEeO_jbF3OgH8Vg _zaRSCmfVEeO_jbF3OgH8Vg\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_X7-UkFD1EeegztV1Np81AQ\" dataType=\"_zaZ05GfVEeO_jbF3OgH8Vg\"/>\n        </relations>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_LlsUMGfWEeO_jbF3OgH8Vg\" name=\"inputStream\" ports=\"_O-eN4GfWEeO_jbF3OgH8Vg\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_X6Ca4FD1EeegztV1Np81AQ\" dataType=\"_zaZ04GfVEeO_jbF3OgH8Vg\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_MYqpQGfWEeO_jbF3OgH8Vg\" name=\"outputStream\" ports=\"_PROx0GfWEeO_jbF3OgH8Vg\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_X6o30FD1EeegztV1Np81AQ\" dataType=\"_zaZ04GfVEeO_jbF3OgH8Vg\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_KcWeceO8EeKPNOjnm0bOZw\" name=\"CompleteDevice\" constructor=\"\" includes=\"\" version=\"BoraBora\" destructor=\"\" declarations=\"\" definitions=\"\" initializations=\"\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\" globalTypeDeclarations=\"typedef unsigned char byte;&#xD;&#xA;&#xD;&#xA;#define NbLinesMax 144&#xD;&#xA;#define NbPixelsPerLineMax 176&#xD;&#xA;\" globalDeclarations=\"#define COPY_MODE 0&#xD;&#xA;#define REVERT_MODE 1\" globalDefinitions=\"\">\n  <annotations xmi:id=\"_KcXFgOO8EeKPNOjnm0bOZw\" source=\"codegen\">\n    <details xmi:id=\"_KcXFgeO8EeKPNOjnm0bOZw\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"CompleteDevice/gen-sysc\"/>\n    <details xmi:id=\"_KcXFguO8EeKPNOjnm0bOZw\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"CompleteDevice/gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_KcXFg-O8EeKPNOjnm0bOZw\" source=\"build\">\n    <details xmi:id=\"_KcXFhOO8EeKPNOjnm0bOZw\" key=\"path\" value=\"CompleteDevice/release\"/>\n  </annotations>\n  <annotations xmi:id=\"_Yl6foOS4EeKC5Nk3pqX6DQ\" source=\"cdt.configurations\">\n    <details xmi:id=\"_yunVACc5EeaoHfOsYBSwbA\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.713269989\"/>\n    <details xmi:id=\"_6t6AcFELEeegztV1Np81AQ\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1840850430\"/>\n    <details xmi:id=\"_8k76sHmwEey-YpMLKTME1Q\" key=\"cofluent.managedbuild.config.msvc2019.exe.release.1660089701\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_OmXmcBukEeO1d7f6pGM6pQ\" name=\"DefFrame\" definition=\"typedef unsigned char DefVideo422[NbPixelsPerLineMax * NbLinesMax * 2];&#xA;&#xA;typedef struct DefFrame_s { &#xA;&#x9;&#x9;DefVideo422 payload;&#xA;} DefFrame;&#xA;\" copyPayload=\"&#x9;memcpy(_address, _value, sizeof(DefFrame));\" tracePayload=\"&#x9;cf_color_rgb_t* rgbImage = new cf_color_rgb_t[60000];&#xA;&#xA;&#x9;DefVideo422* tmp = &amp;(get_data_ptr()->payload);&#xA;&#xA;&#x9;unsigned char* Frame = (unsigned char*)&amp;(tmp[0]);&#xA;&#x9;cf_color_rgb_t *OutputFrame = rgbImage;&#xA;&#x9;int sizeX = NbPixelsPerLineMax;&#xA;&#x9;int sizeY = NbLinesMax;&#xA;&#x9;&#xA;&#x9;const int YUV_CORRECTION_FACTOR_Y = 16;&#xA;&#x9;const int YUV_CORRECTION_FACTOR_UV = 128;&#xA;&#xA;&#x9;const double YUV_COEF_V_EQUA_R = 1.140;&#xA;&#x9;const double YUV_COEF_U_EQUA_G = -0.395;&#xA;&#x9;const double YUV_COEF_V_EQUA_G = -0.581;&#xA;&#x9;const double YUV_COEF_U_EQUA_B = 2.032;&#xA;&#xA;&#x9;// YUV blocks&#xA;&#x9;int y1c, y1n;&#xA;&#x9;int y2c, y2n;&#xA;&#xA;&#x9;// RGB blocks&#xA;&#x9;int u1, u2, v1, v2;&#xA;&#x9;int r1, g1, b1;&#xA;&#x9;int r2, g2, b2;&#xA;&#xA;&#xA;&#x9;// 4-Pixel block index&#xA;&#x9;int current_block_idx = 0;&#xA;&#xA;&#xA;&#x9;int pixelX, pixelY;&#xA;&#xA;&#x9;// 'U' table Offset&#xA;&#x9;int offsetU = (int) (sizeX * sizeY);&#xA;&#x9;// 'V' table offset&#xA;&#x9;int offsetV = (int) (sizeX * sizeY * 1.5);&#xA;&#xA;    int pixel_block_idx, line_idx;&#xA;&#xA;    // For each frame line&#xA;&#x9;for (line_idx = 0; line_idx &lt; sizeY; line_idx++) {&#xA;&#xA;&#x9;&#x9;// For each pixel block&#xA;&#x9;&#x9;for (pixel_block_idx = 0; pixel_block_idx &lt; sizeX / 4; pixel_block_idx++) {&#xA;&#x9;&#x9;&#x9;y1c = (int) Frame[current_block_idx + 0];&#xA;&#x9;&#x9;&#x9;y2c = (int) Frame[current_block_idx + 1];&#xA;&#x9;&#x9;&#x9;y1n = (int) Frame[current_block_idx + 2];&#xA;&#x9;&#x9;&#x9;y2n = (int) Frame[current_block_idx + 3];&#xA;&#xA;&#x9;&#x9;&#x9;y1c = y1c - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y2c = y2c - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y1n = y1n - YUV_CORRECTION_FACTOR_Y;&#xA;&#x9;&#x9;&#x9;y2n = y2n - YUV_CORRECTION_FACTOR_Y;&#xA;&#xA;&#x9;&#x9;&#x9;u1 = (int) Frame[(current_block_idx / 2) + offsetU];&#xA;&#x9;&#x9;&#x9;u2 = (int) Frame[(current_block_idx / 2) + offsetU + 1];&#xA;&#x9;&#x9;&#x9;v1 = (int) Frame[(current_block_idx / 2) + offsetV];&#xA;&#x9;&#x9;&#x9;v2 = (int) Frame[(current_block_idx / 2) + offsetV + 1];&#xA;&#xA;&#x9;&#x9;&#x9;u1 = u1 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;u2 = u2 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;v1 = v1 - YUV_CORRECTION_FACTOR_UV;&#xA;&#x9;&#x9;&#x9;v2 = v2 - YUV_CORRECTION_FACTOR_UV;&#xA;&#xA;&#x9;&#x9;&#x9;r1 = (int) (y1c + YUV_COEF_V_EQUA_R * v1);&#xA;&#x9;&#x9;&#x9;g1 = (int) (y1c + YUV_COEF_U_EQUA_G * u1 + YUV_COEF_V_EQUA_G * v1);&#xA;&#x9;&#x9;&#x9;b1 = (int) (y1c + YUV_COEF_U_EQUA_B * u1);&#xA;&#xA;&#x9;&#x9;&#x9;r2 = (int) (y2c + YUV_COEF_V_EQUA_R * v2);&#xA;&#x9;&#x9;&#x9;g2 = (int) (y2c + YUV_COEF_U_EQUA_G * u2 + YUV_COEF_V_EQUA_G * v2);&#xA;&#x9;&#x9;&#x9;b2 = (int) (y2c + YUV_COEF_U_EQUA_B * u2);&#xA;&#xA;&#x9;&#x9;&#x9;// range clipping ensures that all computed values stay inside 0..255&#xA;&#x9;&#x9;&#x9;if (r1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 0;&#xA;&#x9;&#x9;&#x9;else if (r1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 0;&#xA;&#x9;&#x9;&#x9;else if (g1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 0;&#xA;&#x9;&#x9;&#x9;else if (b1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (r2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 0;&#xA;&#x9;&#x9;&#x9;else if (r2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 0;&#xA;&#x9;&#x9;&#x9;else if (g2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 0;&#xA;&#x9;&#x9;&#x9;else if (b2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX = (pixel_block_idx * 4);&#xA;&#x9;&#x9;&#x9;pixelY = (line_idx);&#xA;&#xA;&#x9;&#x9;&#x9;// Compute new pixel index for RGB format&#xA;&#x9;&#x9;&#x9;int noPixel = (int) (pixelX + pixelY * sizeX);&#xA;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb = { (unsigned char)r1, (unsigned char)g1, (unsigned char)b1 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel] = rgb;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb2 = { (unsigned char)r2, (unsigned char)g2, (unsigned char)b2 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 1] = rgb2;&#xA;&#xA;&#x9;&#x9;&#x9;r1 = (int) (y1n + YUV_COEF_V_EQUA_R * v1);&#xA;&#x9;&#x9;&#x9;g1 = (int) (y1n + YUV_COEF_U_EQUA_G * u1 + YUV_COEF_V_EQUA_G * v1);&#xA;&#x9;&#x9;&#x9;b1 = (int) (y1n + YUV_COEF_U_EQUA_B * u1);&#xA;&#xA;&#x9;&#x9;&#x9;r2 = (int) (y2n + YUV_COEF_V_EQUA_R * v2);&#xA;&#x9;&#x9;&#x9;g2 = (int) (y2n + YUV_COEF_U_EQUA_G * u2 + YUV_COEF_V_EQUA_G * v2);&#xA;&#x9;&#x9;&#x9;b2 = (int) (y2n + YUV_COEF_U_EQUA_B * u2);&#xA;&#xA;&#x9;&#x9;&#x9;if (r1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 0;&#xA;&#x9;&#x9;&#x9;else if (r1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 0;&#xA;&#x9;&#x9;&#x9;else if (g1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b1 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 0;&#xA;&#x9;&#x9;&#x9;else if (b1 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b1 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (r2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 0;&#xA;&#x9;&#x9;&#x9;else if (r2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;r2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (g2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 0;&#xA;&#x9;&#x9;&#x9;else if (g2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;g2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;if (b2 &lt; 0)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 0;&#xA;&#x9;&#x9;&#x9;else if (b2 > 255)&#xA;&#x9;&#x9;&#x9;&#x9;b2 = 255;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb3 = { (unsigned char)r1, (unsigned char)g1, (unsigned char)b1 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 2] = rgb3;&#xA;&#xA;&#x9;&#x9;&#x9;pixelX++;&#xA;&#x9;&#x9;&#x9;cf_color_rgb_t rgb4 = { (unsigned char)r2, (unsigned char)g2,(unsigned char) b2 };&#xA;&#x9;&#x9;&#x9;OutputFrame[noPixel + 3] = rgb4;&#xA;&#xA;&#x9;&#x9;&#x9;current_block_idx += 4;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;cf_trace_payload_chart_image(0, 0, NbPixelsPerLineMax, NbLinesMax,&#xA;&#x9;&#x9;&#x9;(const cf_dt::cf_color_rgb_t*) rgbImage);\" readTime=\"\" writeTime=\"\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <dataTypes xmi:id=\"_fQy3NBu2EeO1d7f6pGM6pQ\" name=\"DefProcessingMode\" definition=\"typedef cf_dt::cf_dpv_data_t DefProcessingMode;\" copyPayload=\"cf_payload::cb_copy_payload(_address, _value, _atom_count);\" tracePayload=\"&#x9;trace = &quot;&quot;;\" readTime=\"\" writeTime=\"\" allocatePayload=\"r = cf_payload::cb_alloc_payload(_atom_count);\" deallocatePayload=\"cf_payload::cb_delete_payload(_address);\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_KcXskOO8EeKPNOjnm0bOZw\" name=\"CompleteDeviceSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_fp0z4OPfEeKPNOjnm0bOZw\" name=\"device\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\" ns\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_OROB4OSmEeKC5Nk3pqX6DQ\" name=\"dpv\" type=\"METHOD_CALL_INTERFACE\" direction=\"IN\" relations=\"_UevJYOO8EeKPNOjnm0bOZw\" ports=\"_ORPQAOSmEeKC5Nk3pqX6DQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_eMBMABusEeO1d7f6pGM6pQ\" name=\"newFrame\" type=\"EVENT\" direction=\"OUT\" relations=\"_ZLhtoBusEeO1d7f6pGM6pQ\" ports=\"_eMCaIBusEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_sonlkOPfEeKPNOjnm0bOZw\" name=\"deviceSt\" documentation=\"\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_soozsOPfEeKPNOjnm0bOZw\" name=\"hwModel\" constructor=\"\" declarations=\"void revert_frame();\" definitions=\"void cfm_hwmodel::revert_frame() {&#xD;&#xA;&#xD;&#xA;&#x9;/* Reverting the image means that Pixel 0 becomes Pixel N-1, where N is the frame size (in Pixels)&#xD;&#xA;&#x9; * In YUV 422 format, it implies to:&#xD;&#xA;&#x9; *   - Revert the Y table, located at offset 0&#xD;&#xA;&#x9; *   - Revert the U table, located at offset N&#xD;&#xA;&#x9; *   - Revert the V table, located at offset N*1.5&#xD;&#xA;&#x9; */&#xD;&#xA;&#x9;unsigned char* outpayload = outputFrame.payload;&#xD;&#xA;&#x9;unsigned char* inpayload = inputFrame.payload;&#xD;&#xA;&#xD;&#xA;&#x9;// 'U' table Offset&#xD;&#xA;&#x9;int offsetU = (int) (NbPixelsPerLineMax * NbLinesMax);&#xD;&#xA;&#x9;// 'V' table offset&#xD;&#xA;&#x9;int offsetV = (int) (NbPixelsPerLineMax * NbLinesMax * 1.5);&#xD;&#xA;&#xD;&#xA;&#x9;// 4-Pixel block index in a line&#xD;&#xA;&#x9;int pixel_block_idx = 0;&#xD;&#xA;&#xD;&#xA;&#x9;// Line index&#xD;&#xA;&#x9;int line_idx;&#xD;&#xA;&#xD;&#xA;&#x9;// 4-Pixel block offset, from the beginning of the frame&#xD;&#xA;&#x9;int current_block_ofs = 0;&#xD;&#xA;&#xD;&#xA;&#x9;// For each frame line&#xD;&#xA;&#x9;for (line_idx = 0; line_idx &lt; NbLinesMax; line_idx++) {&#xD;&#xA;&#x9;&#x9;// For each pixel block&#xD;&#xA;&#x9;&#x9;for (pixel_block_idx = 0; pixel_block_idx &lt; NbPixelsPerLineMax / 4;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;pixel_block_idx++) {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the Y table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 1] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 1];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 2] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 2];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetU - 1 - current_block_ofs - 3] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[current_block_ofs + 3];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the U table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetV - 1 - current_block_ofs / 2 - 0] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[offsetU + current_block_ofs / 2 + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[offsetV - 1 - current_block_ofs / 2 - 1] =&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;inpayload[offsetU + current_block_ofs / 2 + 1];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;// Revert the V table&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[NbPixelsPerLineMax*NbLinesMax*2-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- current_block_ofs / 2 - 0] = inpayload[offsetV + current_block_ofs / 2 + 0];&#xD;&#xA;&#x9;&#x9;&#x9;outpayload[NbPixelsPerLineMax*NbLinesMax*2-1&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;- current_block_ofs / 2 - 1] = inpayload[offsetV + current_block_ofs / 2 + 1];&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;current_block_ofs += 4;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}\" initializations=\"\" cyclePeriod=\" ns\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\">\n          <ports xmi:id=\"_L3ua8OSmEeKC5Nk3pqX6DQ\" name=\"startProcess\" type=\"EVENT\" direction=\"IN\" inputActions=\"_oqwhcOSmEeKC5Nk3pqX6DQ\" relations=\"_D43G8eSmEeKC5Nk3pqX6DQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_UeZw0BukEeO1d7f6pGM6pQ\" name=\"inputFrame\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_TAu48BukEeO1d7f6pGM6pQ\" relations=\"_OmSG4BukEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_5kXW0BukEeO1d7f6pGM6pQ\" name=\"outputFrame\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_TbNOcBukEeO1d7f6pGM6pQ\" relations=\"_4d76QBukEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_mDpEABu2EeO1d7f6pGM6pQ\" name=\"processingMode\" type=\"SHARED_VARIABLE\" direction=\"IN\" relations=\"_fQt-sBu2EeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_jaQ4MOSmEeKC5Nk3pqX6DQ\" name=\"hwModelBh\" firstStatement=\"_lDuJUOSmEeKC5Nk3pqX6DQ\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_lDuJUOSmEeKC5Nk3pqX6DQ\" name=\"init\" isFirstOf=\"_jaQ4MOSmEeKC5Nk3pqX6DQ\" next=\"_oqwhcOSmEeKC5Nk3pqX6DQ\" algorithm=\"\" executionTime=\"10 ns\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_mF4J4OSmEeKC5Nk3pqX6DQ\" name=\"processLoop\" previous=\"_TAu48BukEeO1d7f6pGM6pQ\" next=\"_TbNOcBukEeO1d7f6pGM6pQ\" algorithm=\"    if ( processingMode == COPY_MODE )&#xA;      outputFrame = inputFrame;&#xA;    else&#xD;&#xA;      revert_frame();&#xD;\" executionTime=\"10 ns\" systematicRead=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_oKVU8OSmEeKC5Nk3pqX6DQ\" name=\"Loop\" firstStatement=\"_TAu48BukEeO1d7f6pGM6pQ\" lastStatement=\"_TbNOcBukEeO1d7f6pGM6pQ\" previous=\"_oqwhcOSmEeKC5Nk3pqX6DQ\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_oqwhcOSmEeKC5Nk3pqX6DQ\" name=\"InAction\" documentation=\"\" previous=\"_lDuJUOSmEeKC5Nk3pqX6DQ\" next=\"_oKVU8OSmEeKC5Nk3pqX6DQ\" port=\"_L3ua8OSmEeKC5Nk3pqX6DQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_TAu48BukEeO1d7f6pGM6pQ\" name=\"InAction2\" isFirstOf=\"_oKVU8OSmEeKC5Nk3pqX6DQ\" next=\"_mF4J4OSmEeKC5Nk3pqX6DQ\" port=\"_UeZw0BukEeO1d7f6pGM6pQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_TbNOcBukEeO1d7f6pGM6pQ\" name=\"OutAction\" isLastOf=\"_oKVU8OSmEeKC5Nk3pqX6DQ\" previous=\"_mF4J4OSmEeKC5Nk3pqX6DQ\" port=\"_5kXW0BukEeO1d7f6pGM6pQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:DeviceProgrammersView\" xmi:id=\"_KUaOEOSmEeKC5Nk3pqX6DQ\" name=\"swInterface\" documentation=\"\" constructor=\"\" includes=\"#include &lt;list>\" destructor=\"\" declarations=\"std::list&lt;DefFrame> frame_memory;&#xD;&#xA;void storeOutputFrame(DefFrame* frame);\" definitions=\"void cfm_swinterface::storeOutputFrame(DefFrame* frame) {&#xD;&#xA;    frame_memory.push_back(*frame);&#xD;&#xA;&#x9;processedFrameCount.write(processedFrameCount.read() + 1);&#xD;&#xA;&#x9;raise_interrupt_int( &quot;newFrameInt&quot; );&#xD;&#xA;}\" preElaboration=\"\" initializations=\"\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" address=\"\">\n          <ports xmi:id=\"_LGJNAOSmEeKC5Nk3pqX6DQ\" name=\"startProcess\" type=\"EVENT\" direction=\"OUT\" relations=\"_D43G8eSmEeKC5Nk3pqX6DQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_ORPQAOSmEeKC5Nk3pqX6DQ\" name=\"dpv\" type=\"METHOD_CALL_INTERFACE\" direction=\"IN\" port=\"_OROB4OSmEeKC5Nk3pqX6DQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_R_sSsBukEeO1d7f6pGM6pQ\" name=\"inputFrame\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_OmSG4BukEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_eMCaIBusEeO1d7f6pGM6pQ\" name=\"newFrame\" type=\"EVENT\" direction=\"OUT\" port=\"_eMBMABusEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_ljlq8Bu2EeO1d7f6pGM6pQ\" name=\"processingMode\" documentation=\"\" type=\"SHARED_VARIABLE\" direction=\"OUT\" relations=\"_fQt-sBu2EeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_Gy3IYHnfEeOg-L2B0KaV6Q\" name=\"storeFrame\" type=\"METHOD_CALL_INTERFACE\" direction=\"IN\" relations=\"_FO0iwHnfEeOg-L2B0KaV6Q\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"__uct8Hh_EeOiB_ETycTCig\" name=\"swInterfaceSt\"/>\n          <registers xmi:id=\"_y7yHABupEeO1d7f6pGM6pQ\" name=\"processingModeReg\" access=\"READ_WRITE\" address=\"0x100\" defaultValue=\"1\" description=\"\" size=\"4\" wordSize=\"EIGHT\" linkedWithPort=\"false\">\n            <internalRead xmi:id=\"_U1I8EHeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <internalWrite xmi:id=\"_VD6-8HeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <read xmi:id=\"_Uhu34HeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <write xmi:id=\"_mX-A4B65EeO0GNV1k4V7BQ\" before=\"\" after=\"&#x9;processingMode = (DefProcessingMode) processingModeReg.read();&#xA;&#x9;p_sv_processingMode.write( &amp;processingMode_trans );\"/>\n          </registers>\n          <registers xmi:id=\"_2y9y8Bu0EeO1d7f6pGM6pQ\" name=\"processedFrameCount\" access=\"READ_WRITE\" address=\"0x200\" defaultValue=\"-1\" description=\"\" size=\"4\" wordSize=\"EIGHT\" linkedWithPort=\"false\">\n            <internalRead xmi:id=\"_PptZAHeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <internalWrite xmi:id=\"_P0rS4HeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <read xmi:id=\"_PipuwHeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n            <write xmi:id=\"_PvJSoHeJEeOSBYfgqH0EQQ\" before=\"\" after=\"\"/>\n          </registers>\n          <interrupts xmi:id=\"_CujRcHhKEeOiB_ETycTCig\" name=\"newFrameInt\" defaultValue=\"\">\n            <enable xmi:id=\"_EO30sHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <disable xmi:id=\"_EHuD0HhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <internalEnable xmi:id=\"_ELoTcHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <internalDisable xmi:id=\"_EEGIEHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <internalRaise xmi:id=\"_D88XMHhKEeOiB_ETycTCig\" before=\"\" after=\"&#x9;p_ev_newFrame.set();\"/>\n            <clear xmi:id=\"_D5CHkHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <internalClear xmi:id=\"_D1gScHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n            <raise xmi:id=\"_EAwgMHhKEeOiB_ETycTCig\" before=\"\" after=\"\"/>\n          </interrupts>\n          <commands xmi:id=\"_BImwIOVGEeKHOJfdQNhTWA\" name=\"startCmd\" description=\"\" source=\"\" lengthBias=\"\" send=\"&#x9;p_ev_startProcess.set();\"/>\n          <commands xmi:id=\"_G5r4gButEeO1d7f6pGM6pQ\" name=\"pushFrame\" description=\"\" source=\"\" lengthBias=\"\" send=\"&#x9;memcpy( &amp;inputFrame, _payload, _size);&#xA;&#x9;p_mq_inputFrame.send( &amp;inputFrame_trans );\"/>\n          <commands xmi:id=\"_90FFQBu0EeO1d7f6pGM6pQ\" name=\"getFrame\" description=\"\" source=\"\" lengthBias=\"\" send=\"&#x9;DefFrame tmpFrame = frame_memory.front();&#xA;&#x9;frame_memory.pop_front();&#xA;&#x9;memcpy(_payload, tmpFrame.payload, _size);\"/>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_Ox_LIBulEeO1d7f6pGM6pQ\" name=\"mqToCommand\" includes=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\" ns\" priority=\"1\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" coSimulationType=\"NONE_COSIM\">\n          <ports xmi:id=\"_k5EXABulEeO1d7f6pGM6pQ\" name=\"outputFrame\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_UMYXQBulEeO1d7f6pGM6pQ\" relations=\"_4d76QBukEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n          <ports xmi:id=\"_GdsJoHnfEeOg-L2B0KaV6Q\" name=\"storeFrame\" type=\"METHOD_CALL_INTERFACE\" direction=\"OUT\" outputActions=\"_Xh9L8BulEeO1d7f6pGM6pQ\" relations=\"_FO0iwHnfEeOg-L2B0KaV6Q\" synchronizeName=\"true\" vector=\"false\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_SpyjIBulEeO1d7f6pGM6pQ\" name=\"mqToCommandBh\" firstStatement=\"_TU1rQBulEeO1d7f6pGM6pQ\">\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_TU1rQBulEeO1d7f6pGM6pQ\" name=\"Loop\" isFirstOf=\"_SpyjIBulEeO1d7f6pGM6pQ\" firstStatement=\"_UMYXQBulEeO1d7f6pGM6pQ\" lastStatement=\"_Xh9L8BulEeO1d7f6pGM6pQ\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_UMYXQBulEeO1d7f6pGM6pQ\" name=\"InAction\" isFirstOf=\"_TU1rQBulEeO1d7f6pGM6pQ\" next=\"_Xh9L8BulEeO1d7f6pGM6pQ\" port=\"_k5EXABulEeO1d7f6pGM6pQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_Xh9L8BulEeO1d7f6pGM6pQ\" name=\"OutAction\" documentation=\"\" isLastOf=\"_TU1rQBulEeO1d7f6pGM6pQ\" previous=\"_UMYXQBulEeO1d7f6pGM6pQ\" port=\"_GdsJoHnfEeOg-L2B0KaV6Q\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"storeFrame->storeOutputFrame( &amp;outputFrame );\"/>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_D43G8eSmEeKC5Nk3pqX6DQ\" name=\"startProcess\" ports=\"_L3ua8OSmEeKC5Nk3pqX6DQ _LGJNAOSmEeKC5Nk3pqX6DQ\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_OmSG4BukEeO1d7f6pGM6pQ\" name=\"inputFrame\" ports=\"_R_sSsBukEeO1d7f6pGM6pQ _UeZw0BukEeO1d7f6pGM6pQ\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_aghU8FD1EeegztV1Np81AQ\" dataType=\"_OmXmcBukEeO1d7f6pGM6pQ\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_4d76QBukEeO1d7f6pGM6pQ\" name=\"outputFrame\" ports=\"_k5EXABulEeO1d7f6pGM6pQ _5kXW0BukEeO1d7f6pGM6pQ\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"1 ns\" receiveTime=\"1 ns\" sendThreshold=\"1\" receiveThreshold=\"1\" address=\"\" mask=\"\" messageQueueType=\"STANDARD\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_afVCIFD1EeegztV1Np81AQ\" dataType=\"_OmXmcBukEeO1d7f6pGM6pQ\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_fQt-sBu2EeO1d7f6pGM6pQ\" name=\"processingMode\" ports=\"_ljlq8Bu2EeO1d7f6pGM6pQ _mDpEABu2EeO1d7f6pGM6pQ\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ahHK0FD1EeegztV1Np81AQ\" dataType=\"_fQy3NBu2EeO1d7f6pGM6pQ\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MethodCallInterface\" xmi:id=\"_FO0iwHnfEeOg-L2B0KaV6Q\" name=\"storeFrame\" ports=\"_Gy3IYHnfEeOg-L2B0KaV6Q _GdsJoHnfEeOg-L2B0KaV6Q\" declarations=\"virtual void storeOutputFrame(DefFrame* frame) = 0;\" includes=\"\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_P40R0OSmEeKC5Nk3pqX6DQ\" name=\"testBench\" documentation=\"\" constructor=\"\" includes=\"\" declarations=\"/* Register address definition */&#xD;&#xA;#define PROCESSED_FRAME_COUNT_REGISTER_ADDR 0x200&#xD;&#xA;#define PROCESSING_MODE_REGISTER_ADDR 0x100&#xD;&#xA;&#xD;&#xA;DefFrame inputFrame, outputFrame;&#xD;&#xA;std::string movieInputFile;&#xD;&#xA;int ProducerNbPicture;&#xD;&#xA;int ConsumerNbPicture;&#xD;&#xA;FILE* movieInputFile_f;&#xD;&#xA;int VideoFrameNumber;&#xD;&#xA;int new_mode;&#xD;&#xA;int numread;\" definitions=\"\" preElaboration=\"\" initializations=\"movieInputFile = &quot;../../../video_file/susie422.40.qcif&quot;;&#xD;&#xA;cf_trace_report(&quot;TEST file name = %s&quot;, movieInputFile.c_str());&#xD;&#xA;ProducerNbPicture = 0;&#xD;&#xA;ConsumerNbPicture = 0;&#xD;&#xA;new_mode = REVERT_MODE;\" cyclePeriod=\" ns\" affinity=\"\" priority=\"\" schedulingPolicy=\"FIFO\" InterfaceBlockingBehavior=\"RELEASE_CORE\" timeSlicePeriod=\"10 ms\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\" resetPolarity=\"LOW\" coSimulationType=\"NONE_COSIM\">\n      <ports xmi:id=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" name=\"dpv\" type=\"METHOD_CALL_INTERFACE\" direction=\"OUT\" outputActions=\"_hQHroBurEeO1d7f6pGM6pQ _djN_QBuvEeO1d7f6pGM6pQ _Hnt4oBusEeO1d7f6pGM6pQ _-7RMMHk9EeOBsfDrFknH7g _cNwXACcUEeaD26eU7QNRHw\" relations=\"_UevJYOO8EeKPNOjnm0bOZw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_e1mUgBusEeO1d7f6pGM6pQ\" name=\"newFrame\" type=\"EVENT\" direction=\"IN\" inputActions=\"_PxTO4BusEeO1d7f6pGM6pQ\" relations=\"_ZLhtoBusEeO1d7f6pGM6pQ\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_5i-2cB94EeOUirSnH8kWlw\" name=\"inputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" outputActions=\"_H9UZEB95EeOUirSnH8kWlw\" relations=\"_zLSUkB94EeOUirSnH8kWlw\" synchronizeName=\"true\" vector=\"false\"/>\n      <ports xmi:id=\"_6C6TsB94EeOUirSnH8kWlw\" name=\"outputStream\" type=\"SHARED_VARIABLE\" direction=\"OUT\" outputActions=\"_V_ViUB95EeOUirSnH8kWlw\" relations=\"_4rP9MB94EeOUirSnH8kWlw\" synchronizeName=\"true\" vector=\"false\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_fa7EkBurEeO1d7f6pGM6pQ\" name=\"testBenchBh\" documentation=\"\" firstStatement=\"_gZ9fsBurEeO1d7f6pGM6pQ\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_gZ9fsBurEeO1d7f6pGM6pQ\" name=\"init\" isFirstOf=\"_fa7EkBurEeO1d7f6pGM6pQ\" next=\"_hQHroBurEeO1d7f6pGM6pQ\" algorithm=\"&#x9;ProducerNbPicture = 0;&#xD;&#xA;&#x9;// Open movie file&#xD;&#xA;&#x9;movieInputFile_f = fopen(movieInputFile.c_str(), &quot;r&quot;);&#xD;&#xA;&#x9;COFS_SCL_API_VERIFY(movieInputFile_f,&#xD;&#xA;&#x9;&#x9;&#x9;&quot;[TB] Unable to read the source image file ... exiting\\n&quot;)&#xD;&#xA;&#x9;// Compute available frame number&#xD;&#xA;&#x9;fseek(movieInputFile_f, 0L, SEEK_END);&#xD;&#xA;&#x9;int sz = ftell(movieInputFile_f);&#xD;&#xA;&#x9;fseek(movieInputFile_f, 0L, SEEK_SET);&#xD;&#xA;&#x9;VideoFrameNumber = sz / sizeof(DefFrame);&#xD;&#xA;&#x9;cf_trace_report(&quot;[TB] Available frame number = %d&quot;, VideoFrameNumber);&#xD;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\"0 uW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hQHroBurEeO1d7f6pGM6pQ\" name=\"OutAction\" documentation=\"\" previous=\"_gZ9fsBurEeO1d7f6pGM6pQ\" next=\"_-7RMMHk9EeOBsfDrFknH7g\" port=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"dpv->write_register( 0x100 , REVERT_MODE );\"/>\n        <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_ABhjUBusEeO1d7f6pGM6pQ\" name=\"Loop\" firstStatement=\"_EABZMBusEeO1d7f6pGM6pQ\" lastStatement=\"_V_ViUB95EeOUirSnH8kWlw\" previous=\"_-7RMMHk9EeOBsfDrFknH7g\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_EABZMBusEeO1d7f6pGM6pQ\" name=\"prepareFrame\" isFirstOf=\"_ABhjUBusEeO1d7f6pGM6pQ\" next=\"_cNwXACcUEeaD26eU7QNRHw\" algorithm=\"&#x9;int imax = NbPixelsPerLineMax*NbLinesMax*2;&#xA;  &#x9;int PositionInFile;&#xA;  &#x9;int j;&#xA;&#xA;  &#x9;// Init frame buffer&#xA;  &#x9;for ( j=0; j&lt;imax; j++ )  (inputFrame.payload)[j]=0;&#xA;&#xA; &#x9;PositionInFile = imax*ProducerNbPicture;&#xA;  &#x9;fseek(movieInputFile_f,PositionInFile, SEEK_SET);&#xA;  &#x9;numread = fread( inputFrame.payload, 1, imax, movieInputFile_f );&#xA;&#xA;&#x9;cf_trace_report(&quot;[TB] -- sending input frame  #%d...&quot;,ProducerNbPicture);&#xA;&#x9;&#xA;&#x9;inputStream = inputFrame;&#xA;&#x9;&#xA;&#x9;if(ProducerNbPicture%15 == 0) {&#xA;       cf_trace_report(&quot;[TB] -- switching processing mode...&quot;);&#xA;       int current_mode = (int)(dpv->read_register(PROCESSING_MODE_REGISTER_ADDR));&#xA;       new_mode = (current_mode == 0) ? 1 : 0;&#xA;       &#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;ProducerNbPicture = (ProducerNbPicture >= VideoFrameNumber -1) ? 0 : (ProducerNbPicture+1);\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\"0 uW\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_Hnt4oBusEeO1d7f6pGM6pQ\" name=\"OutAction2\" previous=\"_H9UZEB95EeOUirSnH8kWlw\" next=\"_PxTO4BusEeO1d7f6pGM6pQ\" port=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"dpv->send_command(&quot;pushFrame&quot;, sizeof(DefFrame), (unsigned char*) &amp;inputFrame);\"/>\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_MiIkMBusEeO1d7f6pGM6pQ\" name=\"displayFrame\" documentation=\"\" previous=\"_djN_QBuvEeO1d7f6pGM6pQ\" next=\"_V_ViUB95EeOUirSnH8kWlw\" algorithm=\"&#x9;cf_trace_report(&quot;[TB] -- getting output frame #%d&quot;, ConsumerNbPicture);&#xD;&#xA;&#x9;outputStream = outputFrame;\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\"0 uW\"/>\n        <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_PxTO4BusEeO1d7f6pGM6pQ\" name=\"InAction\" previous=\"_Hnt4oBusEeO1d7f6pGM6pQ\" next=\"_djN_QBuvEeO1d7f6pGM6pQ\" port=\"_e1mUgBusEeO1d7f6pGM6pQ\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_djN_QBuvEeO1d7f6pGM6pQ\" name=\"OutAction3\" previous=\"_PxTO4BusEeO1d7f6pGM6pQ\" next=\"_MiIkMBusEeO1d7f6pGM6pQ\" port=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"dpv->send_command(&quot;getFrame&quot;, sizeof(DefFrame), (unsigned char*) &amp;outputFrame);&#xD;&#xA;ConsumerNbPicture = (int)(dpv->read_register(PROCESSED_FRAME_COUNT_REGISTER_ADDR));\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_H9UZEB95EeOUirSnH8kWlw\" name=\"OutAction4\" previous=\"_cNwXACcUEeaD26eU7QNRHw\" next=\"_Hnt4oBusEeO1d7f6pGM6pQ\" port=\"_5i-2cB94EeOUirSnH8kWlw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_V_ViUB95EeOUirSnH8kWlw\" name=\"OutAction5\" isLastOf=\"_ABhjUBusEeO1d7f6pGM6pQ\" previous=\"_MiIkMBusEeO1d7f6pGM6pQ\" port=\"_6C6TsB94EeOUirSnH8kWlw\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_-7RMMHk9EeOBsfDrFknH7g\" name=\"OutAction6\" previous=\"_hQHroBurEeO1d7f6pGM6pQ\" next=\"_ABhjUBusEeO1d7f6pGM6pQ\" port=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"dpv->send_command(&quot;startCmd&quot;, 0, NULL);\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_cNwXACcUEeaD26eU7QNRHw\" name=\"OutAction7\" previous=\"_EABZMBusEeO1d7f6pGM6pQ\" next=\"_H9UZEB95EeOUirSnH8kWlw\" port=\"_RQRM8OSmEeKC5Nk3pqX6DQ\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"dpv->write_register( (int) PROCESSING_MODE_REGISTER_ADDR, new_mode);\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MethodCallInterface\" xmi:id=\"_UevJYOO8EeKPNOjnm0bOZw\" name=\"dpv\" documentation=\"\" ports=\"_RQRM8OSmEeKC5Nk3pqX6DQ _OROB4OSmEeKC5Nk3pqX6DQ\" declarations=\"\" dpvInterface=\"EXTERNAL\" includes=\"\"/>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_ZLhtoBusEeO1d7f6pGM6pQ\" name=\"newFrame\" ports=\"_eMBMABusEeO1d7f6pGM6pQ _e1mUgBusEeO1d7f6pGM6pQ\" setTime=\"0 ns\" getTime=\"0 ns\"/>\n    <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_zLSUkB94EeOUirSnH8kWlw\" name=\"inputStream\" ports=\"_5i-2cB94EeOUirSnH8kWlw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_aeR5QFD1EeegztV1Np81AQ\" dataType=\"_OmXmcBukEeO1d7f6pGM6pQ\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_4rP9MB94EeOUirSnH8kWlw\" name=\"outputStream\" ports=\"_6C6TsB94EeOUirSnH8kWlw\" concurrency=\"1\" counter=\"1\" writeTime=\"1 ns\" readTime=\"1 ns\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_adiSYFD1EeegztV1Np81AQ\" dataType=\"_OmXmcBukEeO1d7f6pGM6pQ\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_60q6oKxxEeCTXoYQNfqU0w\" name=\"Bluetooth_IPs\" constructor=\"\" includes=\"\" postSimulation=\"\" version=\"4.0.0\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" postElaboration=\"nb_file_parts = 0;&#xD;&#xA;nb_OBEX_df = 0;&#xD;&#xA;nb_RFCOMM_df = 0;&#xD;&#xA;total_delay_FILE = 0;&#xD;&#xA;total_delay_OBEX = 0;&#xD;&#xA;total_delay_RFCOMM = 0;&#xD;&#xA;nb_cdts_req = 0;&#xD;&#xA;total_L2CAP_data = 0;\" globalTypeDeclarations=\"//Packet level&#xD;&#xA;#define FILE_PART 0x00&#xD;&#xA;#define OBEX 0x01&#xD;&#xA;#define RFCOMM 0x02&#xD;&#xA;#define L2CAP 0x03&#xD;&#xA;#define BASEBAND 0x04&#xD;&#xA;//Header sizes&#xD;&#xA;#define OBEX_HDR_S 3&#xD;&#xA;#define RFCOMM_HDR_S 5&#xD;&#xA;#define L2CAP_HDR_S 4&#xD;&#xA;//OBEX packet type&#xD;&#xA;#define PUT 0x01&#xD;&#xA;#define FINAL 0x02&#xD;&#xA;//RFCOMM packet type&#xD;&#xA;#define DATA 0x01&#xD;&#xA;#define DATA_END 0x02&#xD;&#xA;#define CREDITS 0x03&#xD;&#xA;&#xD;&#xA;/*** TYPE DEFINITIONS ***/&#xD;&#xA;//DefOrder&#xD;&#xA;enum DefOrderType{read_order,write_order};&#xD;&#xA;struct DefOrder{&#xD;&#xA;&#x9;DefOrderType order_type;&#xD;&#xA;&#x9;int size;&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;//DefFile&#xD;&#xA;struct DefFile{&#xD;&#xA;&#x9;int file_size;&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;//DefFrame is an abstract structure to describe Bluetooth frame&#xD;&#xA;//at any protocol layer&#xD;&#xA;struct DefFrame{&#xD;&#xA;&#x9;int total_frame_size; //USERDATASIZE&#xD;&#xA;&#x9;int header_size;&#xD;&#xA;&#x9;int payload_size;&#xD;&#xA;&#x9;int FILE_timestamp; //in us&#xD;&#xA;&#x9;int OBEX_timestamp; //in us&#xD;&#xA;&#x9;int RFCOMM_timestamp; //in us&#xD;&#xA;&#x9;unsigned char packet_type;&#xD;&#xA;&#x9;unsigned char OBEX_type; //put or final/continue packet&#xD;&#xA;&#x9;unsigned char RFCOMM_type; //data, data final, or credits&#xD;&#xA;};&#xD;&#xA;\" globalDeclarations=\"/*** Variables for perf monitoring ***/&#xD;&#xA;extern int first_read_time; //in us&#xD;&#xA;extern int last_write_time; //in us&#xD;&#xA;extern int nb_file_parts;&#xD;&#xA;extern int nb_OBEX_df;&#xD;&#xA;extern int nb_RFCOMM_df;&#xD;&#xA;extern int total_delay_FILE;//in us&#xD;&#xA;extern int total_delay_OBEX;//in us&#xD;&#xA;extern int total_delay_RFCOMM;//in us&#xD;&#xA;extern int nb_cdts_req;&#xD;&#xA;extern int total_L2CAP_data;&#xD;&#xA;&#xD;&#xA;/*** Variables for perf results ***/&#xD;&#xA;extern int total_time; //in us&#xD;&#xA;extern double average_throughput; //in kpbs&#xD;&#xA;\" globalDefinitions=\"/*** Variables for perf monitoring ***/&#xD;&#xA;int first_read_time; //in us&#xD;&#xA;int last_write_time; //in us&#xD;&#xA;int nb_file_parts;&#xD;&#xA;int nb_OBEX_df;&#xD;&#xA;int nb_RFCOMM_df;&#xD;&#xA;int total_delay_FILE;//in us&#xD;&#xA;int total_delay_OBEX;//in us&#xD;&#xA;int total_delay_RFCOMM;//in us&#xD;&#xA;int nb_cdts_req;&#xD;&#xA;int total_L2CAP_data;&#xD;&#xA;&#xD;&#xA;/*** Variables for perf results ***/&#xD;&#xA;int total_time; //in us&#xD;&#xA;double average_throughput; //in kpbs&#xD;&#xA;\">\n  <annotations xmi:id=\"_60q6oaxxEeCTXoYQNfqU0w\" source=\"codegen\">\n    <details xmi:id=\"_60q6oqxxEeCTXoYQNfqU0w\" key=\"path\" value=\"Bluetooth_IPs/gen-sysc\"/>\n    <details xmi:id=\"_dWv94NHfEeKfVr7lPYx6WA\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"gen-sysc\"/>\n    <details xmi:id=\"_dWv94dHfEeKfVr7lPYx6WA\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_60q6o6xxEeCTXoYQNfqU0w\" source=\"build\">\n    <details xmi:id=\"_60q6pKxxEeCTXoYQNfqU0w\" key=\"path\" value=\"release\"/>\n  </annotations>\n  <annotations xmi:id=\"_Qp4wYLdoEeCzJbK5zrkuJw\" source=\"cdt.configurations\">\n    <details xmi:id=\"_in-zMAjjEeOXFcb8QFzrgg\" key=\"cofluent.managedbuild.config.msvc2010.exe.release.143298366\" value=\"cdt.configuration.active\"/>\n  </annotations>\n  <dataTypes xmi:id=\"_F6iU36x1EeCTXoYQNfqU0w\" name=\"DefBaseBand\" definition=\"typedef DefFrame DefBaseBand;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU4ax1EeCTXoYQNfqU0w\" name=\"DefRFCOMM_In\" definition=\"typedef DefFrame DefRFCOMM_In;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU46x1EeCTXoYQNfqU0w\" name=\"DefReadWrite\" definition=\"typedef DefOrder DefReadWrite;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().size;\"/>\n  <dataTypes xmi:id=\"_F6iU5ax1EeCTXoYQNfqU0w\" name=\"DefL2CAP_Out\" definition=\"typedef DefFrame DefL2CAP_Out;\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU56x1EeCTXoYQNfqU0w\" name=\"DefData\" definition=\"typedef DefFile DefData;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().file_size;\"/>\n  <dataTypes xmi:id=\"_F6iU6ax1EeCTXoYQNfqU0w\" name=\"DefOBEX_In\" definition=\"typedef DefFrame DefOBEX_In;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU66x1EeCTXoYQNfqU0w\" name=\"DefDataOut\" definition=\"typedef DefFrame DefDataOut;\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\" readTime=\"\"/>\n  <dataTypes xmi:id=\"_F6iU7ax1EeCTXoYQNfqU0w\" name=\"DefOBEX_Out\" definition=\"typedef DefFrame DefOBEX_Out;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU76x1EeCTXoYQNfqU0w\" name=\"DefL2CAP_In\" definition=\"typedef DefFrame DefL2CAP_In;\" copyPayload=\"\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU8ax1EeCTXoYQNfqU0w\" name=\"DefDataIn\" definition=\"typedef DefFrame DefDataIn;\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <dataTypes xmi:id=\"_F6iU86x1EeCTXoYQNfqU0w\" name=\"DefRFCOMM_Out\" definition=\"typedef DefFrame DefRFCOMM_Out;\" tracePayload=\"&#x9;trace &lt;&lt; get_data().total_frame_size;\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_6hFegLdtEeCzJbK5zrkuJw\" name=\"FS_read_throughput\" documentation=\"File system read throughput\" default=\"5000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_pRaRALduEeCzJbK5zrkuJw\" name=\"FS_write_throughput\" default=\"5000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_3IGUALduEeCzJbK5zrkuJw\" name=\"File_Size\" documentation=\"\" default=\"500\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"10\"/>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_tdlroLdwEeCzJbK5zrkuJw\" name=\"Verbose_Level\" documentation=\"\" default=\"LEVEL_RESULTS\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"LEVEL_RFCOMM\">\n    <values>LEVEL_SILENT</values>\n    <values>LEVEL_RESULTS</values>\n    <values>LEVEL_FS</values>\n    <values>LEVEL_OBEX</values>\n    <values>LEVEL_RFCOMM</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_1RK8sLdwEeCzJbK5zrkuJw\" name=\"OBEX_pl_size\" documentation=\"OBEX payload size\" default=\"65532\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"1\" max=\"65532\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_AJ4LoLdxEeCzJbK5zrkuJw\" name=\"RFCOMM_credits\" default=\"5\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_KufZ4LdxEeCzJbK5zrkuJw\" name=\"RFCOMM_recredits_delay\" default=\"1000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"50000\" step=\"100\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_XrwhkLdxEeCzJbK5zrkuJw\" name=\"RFCOMM_pl_size\" documentation=\"\" default=\"65530\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"1\" max=\"65530\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_gNwX0LdxEeCzJbK5zrkuJw\" name=\"Throughput_BaseBand\" default=\"2178\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" type=\"INTEGER\" min=\"0\" max=\"2178\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_FkVuYMcQEeOa99aOWsurSA\" name=\"OBEX_SendFrameTime\" documentation=\"Send frame execution time at OBEX level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_RXdXIMcQEeOa99aOWsurSA\" name=\"OBEX_ReceiveFrameTime\" documentation=\"Receive frame execution time at OBEX level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_XmByMMcQEeOa99aOWsurSA\" name=\"RFCOMM_SendFrameTime\" documentation=\"Send frame execution time at RFCOMM level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_hVDcQMcQEeOa99aOWsurSA\" name=\"RFCOMM_ReceiveFrameTime\" documentation=\"Receive frame execution time at RFCOMM level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_qscpcMcQEeOa99aOWsurSA\" name=\"L2CAP_SendFrameTime\" documentation=\"Send frame execution time at L2CAP level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_w051cMcQEeOa99aOWsurSA\" name=\"L2CAP_ReceiveFrameTime\" documentation=\"Receive frame execution time at L2CAP level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_60q6p6xxEeCTXoYQNfqU0w\" name=\"Bluetooth_IPsStructSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FojKx1EeCTXoYQNfqU0w\" name=\"Slave_Stub\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_F6Fojax1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6YnUKx1EeCTXoYQNfqU0w\" ports=\"_bkRKwAjhEeOXFcb8QFzrgg\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_F6Fojqx1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6YnJax1EeCTXoYQNfqU0w\" ports=\"_b0KA4AjhEeOXFcb8QFzrgg\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_YCpeIAjhEeOXFcb8QFzrgg\" name=\"Slave_StubSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_YDOs8AjhEeOXFcb8QFzrgg\" name=\"In_Stub\" cyclePeriod=\" ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_bkRKwAjhEeOXFcb8QFzrgg\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_hnaY8AjhEeOXFcb8QFzrgg\" port=\"_F6Fojax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_c512kAjhEeOXFcb8QFzrgg\" name=\"In_StubBh\" firstStatement=\"_c52doAjhEeOXFcb8QFzrgg\">\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_c52doAjhEeOXFcb8QFzrgg\" name=\"stub_send\" isFirstOf=\"_c512kAjhEeOXFcb8QFzrgg\" next=\"_hnaY8AjhEeOXFcb8QFzrgg\" executionTime=\"10 ns\" dynamicDataSize=\"0 kB\" dynamicPowerConsumption=\" uW\" dynamicResourceLoad=\"0\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_hnaY8AjhEeOXFcb8QFzrgg\" name=\"OutAction\" previous=\"_c52doAjhEeOXFcb8QFzrgg\" port=\"_bkRKwAjhEeOXFcb8QFzrgg\" duration=\" ns\" condition=\"false\" priority=\"\" vectorSize=\"\" blocking=\"true\" call=\"\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_aUe94AjhEeOXFcb8QFzrgg\" name=\"Out_Stub\" cyclePeriod=\" ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n          <ports xmi:id=\"_b0KA4AjhEeOXFcb8QFzrgg\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_jrg-sAjhEeOXFcb8QFzrgg\" port=\"_F6Fojqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_jrctQAjhEeOXFcb8QFzrgg\" name=\"Out_StubBh\" firstStatement=\"_kticYAjhEeOXFcb8QFzrgg\">\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_jrg-sAjhEeOXFcb8QFzrgg\" name=\"InAction\" isFirstOf=\"_kticYAjhEeOXFcb8QFzrgg\" isLastOf=\"_kticYAjhEeOXFcb8QFzrgg\" port=\"_b0KA4AjhEeOXFcb8QFzrgg\" timeout=\" ns\" priority=\"\" duration=\" ns\" vectorSize=\"\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_kticYAjhEeOXFcb8QFzrgg\" name=\"Loop\" isFirstOf=\"_jrctQAjhEeOXFcb8QFzrgg\" firstStatement=\"_jrg-sAjhEeOXFcb8QFzrgg\" lastStatement=\"_jrg-sAjhEeOXFcb8QFzrgg\" condition=\"\"/>\n          </refinement>\n        </models>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FrA6x1EeCTXoYQNfqU0w\" name=\"BT_System\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_LUusQKx1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6YnJax1EeCTXoYQNfqU0w\" ports=\"_LUusQax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_W9L9IKx1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6YnUKx1EeCTXoYQNfqU0w\" ports=\"_W9L9Iax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <ports xmi:id=\"_Nyc80Kx-EeCTXoYQNfqU0w\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" relations=\"_F6YnQqx1EeCTXoYQNfqU0w\" ports=\"_Nyc80ax-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6FrBKx1EeCTXoYQNfqU0w\" name=\"MasterStructSt\">\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FrBax1EeCTXoYQNfqU0w\" name=\"FileSystem\" constructor=\"\" includes=\"\" declarations=\"//stop flag is activated when file has been read entirely&#xA;bool stop;&#xA;//read/write flag&#xA;int wr;&#xA;//file size&#xA;int f_size;&#xA;//size of a part&#xA;int p_size;&#xA;//read operation duration in ms&#xA;double op_read_duration;&#xA;//write operation duration in ms&#xA;double op_write_duration;&#xA;//first read flag&#xA;bool first_read;\" definitions=\"\" initializations=\"//stop flag is activated when file has been read entirely&#xD;&#xA;stop = false;&#xD;&#xA;//read/write flag&#xD;&#xA;wr = 0;&#xD;&#xA;//file size&#xD;&#xA;f_size = File_Size*1000;&#xD;&#xA;//first read flag&#xD;&#xA;first_read = true;\" cyclePeriod=\"10 ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\">\n          <ports xmi:id=\"_F6FrPKx1EeCTXoYQNfqU0w\" name=\"Data\" type=\"SHARED_VARIABLE\" direction=\"IN_OUT\" relations=\"_F6PZ_ax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_F6FrPax1EeCTXoYQNfqU0w\" name=\"WrOK\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_F6FrLqx1EeCTXoYQNfqU0w\" relations=\"_F6PZ-Kx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_F6FrPqx1EeCTXoYQNfqU0w\" name=\"DataOut\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6FrKKx1EeCTXoYQNfqU0w\" relations=\"_F6PZ8Kx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_F6FrP6x1EeCTXoYQNfqU0w\" name=\"DataIn\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6FrIax1EeCTXoYQNfqU0w\" relations=\"_F6PaA6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_F6FrQKx1EeCTXoYQNfqU0w\" name=\"ReadWrite\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6FrB6x1EeCTXoYQNfqU0w _F6FrMax1EeCTXoYQNfqU0w\" relations=\"_F6PaC6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FrBqx1EeCTXoYQNfqU0w\" name=\"FileSystemBehvBh\" firstStatement=\"_F6FrF6x1EeCTXoYQNfqU0w\" lastStatement=\"_F6FrOKx1EeCTXoYQNfqU0w\">\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6FrB6x1EeCTXoYQNfqU0w\" name=\"InAction20\" isFirstOf=\"_F6FrF6x1EeCTXoYQNfqU0w\" next=\"_F6FrDqx1EeCTXoYQNfqU0w\" port=\"_F6FrQKx1EeCTXoYQNfqU0w\" timeout=\" ms\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrDqx1EeCTXoYQNfqU0w\" name=\"DecodeOrder\" documentation=\"\" previous=\"_F6FrB6x1EeCTXoYQNfqU0w\" next=\"_F6FrEqx1EeCTXoYQNfqU0w\" algorithm=\"switch (ReadWrite.order_type) {&#xD;&#xA;&#x9;case read_order:&#xD;&#xA;&#x9;&#x9;wr = 0;&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;case write_order:&#xD;&#xA;&#x9;&#x9;wr = 1;&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;p_size = ReadWrite.size;\" executionTime=\"0 ns\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n            <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_F6FrEqx1EeCTXoYQNfqU0w\" isLastOf=\"_F6FrF6x1EeCTXoYQNfqU0w\" previous=\"_F6FrDqx1EeCTXoYQNfqU0w\">\n              <conditionalBranches xmi:id=\"_F6FrE6x1EeCTXoYQNfqU0w\" firstStatement=\"_F6FrIax1EeCTXoYQNfqU0w\" lastStatement=\"_F6FrLqx1EeCTXoYQNfqU0w\" condition=\"wr==1\"/>\n              <conditionalBranches xmi:id=\"_F6FrFax1EeCTXoYQNfqU0w\" firstStatement=\"_F6FrHax1EeCTXoYQNfqU0w\" lastStatement=\"_F6FrKKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n            </statements>\n            <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FrF6x1EeCTXoYQNfqU0w\" name=\"Loop15\" isFirstOf=\"_F6FrBqx1EeCTXoYQNfqU0w\" firstStatement=\"_F6FrB6x1EeCTXoYQNfqU0w\" lastStatement=\"_F6FrEqx1EeCTXoYQNfqU0w\" next=\"_F6FrMax1EeCTXoYQNfqU0w\" condition=\"stop==false\" type=\"CONDITIONAL\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrGax1EeCTXoYQNfqU0w\" name=\"Write\" previous=\"_F6FrIax1EeCTXoYQNfqU0w\" next=\"_F6FrLqx1EeCTXoYQNfqU0w\" algorithm=\"op_write_duration = (double) (DataIn.payload_size) * 8.0&#xD;&#xA;&#x9;&#x9;&#x9;/ (double) FS_write_throughput;&#xD;&#xA;&#x9;//file system verbose&#xD;&#xA;&#x9;if (Verbose_Level != LEVEL_SILENT &amp;&amp; Verbose_Level != LEVEL_RESULTS) {&#xD;&#xA;&#x9;&#x9;cf_trace_report(&quot;FS: Write:%d bytes&quot;, DataIn.payload_size);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;last_write_time = (int) cf_time_stamp().to_scalar(CF_US);\" executionTime=\"op_write_duration ms\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrHax1EeCTXoYQNfqU0w\" name=\"Read\" documentation=\"\" isFirstOf=\"_F6FrFax1EeCTXoYQNfqU0w\" next=\"_F6FrKKx1EeCTXoYQNfqU0w\" algorithm=\"&#x9;if (first_read) {&#xD;&#xA;&#x9;&#x9;first_read_time = (int) cf_time_stamp().to_scalar(CF_US);&#xD;&#xA;&#x9;&#x9;first_read = false;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if (f_size >= p_size) {&#xD;&#xA;&#x9;&#x9;f_size -= p_size;&#xD;&#xA;&#x9;&#x9;op_read_duration = (double) p_size * 8.0 / (double) FS_read_throughput;&#xD;&#xA;&#x9;&#x9;DataOut.payload_size = p_size;&#xD;&#xA;&#x9;&#x9;if (f_size == 0)&#xD;&#xA;&#x9;&#x9;&#x9;stop = true;&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;op_read_duration = (double) f_size * 8.0 / (double) FS_read_throughput;&#xD;&#xA;&#x9;&#x9;DataOut.payload_size = f_size;&#xD;&#xA;&#x9;&#x9;f_size = 0;&#xD;&#xA;&#x9;&#x9;stop = true;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;//file system verbose&#xD;&#xA;&#x9;if (Verbose_Level != LEVEL_SILENT &amp;&amp; Verbose_Level != LEVEL_RESULTS) {&#xD;&#xA;&#x9;&#x9;cf_trace_report(&quot;FS: Read:%d bytes&quot;, DataOut.payload_size);&#xD;&#xA;&#x9;&#x9;if (stop)&#xD;&#xA;&#x9;&#x9;&#x9;cf_trace_report(&quot;FS: File reading finished&quot;);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;//monitoring&#xD;&#xA;&#x9;nb_file_parts++;&#xD;&#xA;&#x9;DataOut.total_frame_size = DataOut.payload_size;&#xA;&#x9;DataOut.FILE_timestamp = (int) cf_time_stamp().to_scalar(CF_US);&#xA;&#x9;DataOut_trans.set_user_data_length( cf_dt::cf_data_size( DataOut.total_frame_size, CF_BYTE ) );\" executionTime=\"op_read_duration ms\" systematicRead=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6FrIax1EeCTXoYQNfqU0w\" name=\"InAction19\" isFirstOf=\"_F6FrE6x1EeCTXoYQNfqU0w\" next=\"_F6FrGax1EeCTXoYQNfqU0w\" port=\"_F6FrP6x1EeCTXoYQNfqU0w\" timeout=\" ms\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6FrKKx1EeCTXoYQNfqU0w\" name=\"OutAction24\" isLastOf=\"_F6FrFax1EeCTXoYQNfqU0w\" previous=\"_F6FrHax1EeCTXoYQNfqU0w\" port=\"_F6FrPqx1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6FrLqx1EeCTXoYQNfqU0w\" name=\"OutAction23\" isLastOf=\"_F6FrE6x1EeCTXoYQNfqU0w\" previous=\"_F6FrGax1EeCTXoYQNfqU0w\" port=\"_F6FrPax1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"\" blocking=\"true\"/>\n            <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6FrMax1EeCTXoYQNfqU0w\" name=\"InAction43\" previous=\"_F6FrF6x1EeCTXoYQNfqU0w\" next=\"_F6FrOKx1EeCTXoYQNfqU0w\" port=\"_F6FrQKx1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n            <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrOKx1EeCTXoYQNfqU0w\" name=\"EndSim\" documentation=\"\" isLastOf=\"_F6FrBqx1EeCTXoYQNfqU0w\" previous=\"_F6FrMax1EeCTXoYQNfqU0w\" algorithm=\"&#x9;cf_stop();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n          </refinement>\n        </models>\n        <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FrRax1EeCTXoYQNfqU0w\" name=\"BT_Stack\" cyclePeriod=\"10 ns\">\n          <ports xmi:id=\"_LUusQax1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_LUusQKx1EeCTXoYQNfqU0w\" ports=\"_LUusQqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_W9L9Iax1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_W9L9IKx1EeCTXoYQNfqU0w\" ports=\"_W9L9Iqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_afeegKx9EeCTXoYQNfqU0w\" name=\"ReadWrite\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PaC6x1EeCTXoYQNfqU0w\" ports=\"_afeegax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_dPLmAKx9EeCTXoYQNfqU0w\" name=\"DataIn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PaA6x1EeCTXoYQNfqU0w\" ports=\"_dPLmAax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_fKNvUKx9EeCTXoYQNfqU0w\" name=\"WrOK\" type=\"EVENT\" direction=\"IN\" relations=\"_F6PZ-Kx1EeCTXoYQNfqU0w\" ports=\"_fKNvUax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_g6FxgKx9EeCTXoYQNfqU0w\" name=\"DataOut\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZ8Kx1EeCTXoYQNfqU0w\" ports=\"_g6Fxgax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <ports xmi:id=\"_Nyc80ax-EeCTXoYQNfqU0w\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" port=\"_Nyc80Kx-EeCTXoYQNfqU0w\" ports=\"_Nyc80qx-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n          <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6FrRqx1EeCTXoYQNfqU0w\" name=\"BT_StackStructSt\">\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FrR6x1EeCTXoYQNfqU0w\" name=\"OBEX_Layer\" includes=\"\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_afeegax9EeCTXoYQNfqU0w\" name=\"ReadWrite\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_afeegKx9EeCTXoYQNfqU0w\" ports=\"_afeegqx9EeCTXoYQNfqU0w _bvhKEKx9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_dPLmAax9EeCTXoYQNfqU0w\" name=\"DataIn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_dPLmAKx9EeCTXoYQNfqU0w\" ports=\"_dPLmAqx9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_fKNvUax9EeCTXoYQNfqU0w\" name=\"WrOK\" type=\"EVENT\" direction=\"IN\" port=\"_fKNvUKx9EeCTXoYQNfqU0w\" ports=\"_fKNvUqx9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_g6Fxgax9EeCTXoYQNfqU0w\" name=\"DataOut\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_g6FxgKx9EeCTXoYQNfqU0w\" ports=\"_g6Fxgqx9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_iuIiAKx9EeCTXoYQNfqU0w\" name=\"OBEX_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZwax1EeCTXoYQNfqU0w\" ports=\"_iuIiAax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_Nyc80qx-EeCTXoYQNfqU0w\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" port=\"_Nyc80ax-EeCTXoYQNfqU0w\" ports=\"_Nyc806x-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_T_-2EKx-EeCTXoYQNfqU0w\" name=\"OBEX_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZuqx1EeCTXoYQNfqU0w\" ports=\"_T_-2Eax-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6FrSKx1EeCTXoYQNfqU0w\" name=\"OBEX_LayerStructSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FrSax1EeCTXoYQNfqU0w\" name=\"OBEX_Send\" constructor=\"\" includes=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\">\n                  <ports xmi:id=\"_F6Frf6x1EeCTXoYQNfqU0w\" name=\"continueEv\" type=\"EVENT\" direction=\"IN\" inputSelectorInputs=\"_S2jIoL4iEeKtP_t0bBPLww\" relations=\"_F6Fr-qx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Frgax1EeCTXoYQNfqU0w\" name=\"OB_Out2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6FrS6x1EeCTXoYQNfqU0w\" relations=\"_F6FsBqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_bvhKEKx9EeCTXoYQNfqU0w\" name=\"ReadWrite\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_EKrxUKx-EeCTXoYQNfqU0w\" port=\"_afeegax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_g6Fxgqx9EeCTXoYQNfqU0w\" name=\"DataOut\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_He-zoKx-EeCTXoYQNfqU0w\" port=\"_g6Fxgax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_Nyc806x-EeCTXoYQNfqU0w\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" inputSelectorInputs=\"_SkJKAL4iEeKtP_t0bBPLww\" port=\"_Nyc80qx-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FrSqx1EeCTXoYQNfqU0w\" name=\"OBEX_SendBehvBh\" firstStatement=\"_F6Fra6x1EeCTXoYQNfqU0w\">\n                    <selectors xsi:type=\"cofluent:OrInputSelector\" xmi:id=\"_Quyx8L4iEeKtP_t0bBPLww\" name=\"InSelector\" inputAction=\"_QXlzEKx-EeCTXoYQNfqU0w\">\n                      <inputs xmi:id=\"_SkJKAL4iEeKtP_t0bBPLww\" name=\"InputSelectorInput\" port=\"_Nyc806x-EeCTXoYQNfqU0w\" priority=\"\" timeout=\" ns\" duration=\" ns\"/>\n                      <inputs xmi:id=\"_S2jIoL4iEeKtP_t0bBPLww\" name=\"InputSelectorInput2\" port=\"_F6Frf6x1EeCTXoYQNfqU0w\" priority=\"\" timeout=\" ns\" duration=\" ns\"/>\n                    </selectors>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6FrS6x1EeCTXoYQNfqU0w\" name=\"OutAction28\" isLastOf=\"_F6Fra6x1EeCTXoYQNfqU0w\" previous=\"_F6FrYqx1EeCTXoYQNfqU0w\" port=\"_F6Frgax1EeCTXoYQNfqU0w\" duration=\"1 ns\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrXqx1EeCTXoYQNfqU0w\" name=\"AskForFragment\" previous=\"_QXlzEKx-EeCTXoYQNfqU0w\" next=\"_EKrxUKx-EeCTXoYQNfqU0w\" algorithm=\"//ask to read file system&#xA;ReadWrite.order_type = read_order;&#xA;//specify the size to read (in bytes)&#xA;ReadWrite.size = OBEX_pl_size;&#xA;\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FrYqx1EeCTXoYQNfqU0w\" name=\"SendFrame\" previous=\"_He-zoKx-EeCTXoYQNfqU0w\" next=\"_F6FrS6x1EeCTXoYQNfqU0w\" algorithm=\"OB_Out2.header_size = OBEX_HDR_S;&#xA;OB_Out2.payload_size = DataOut.payload_size;&#xA;OB_Out2.total_frame_size = OB_Out2.header_size + OB_Out2.payload_size;&#xA;OB_Out2.packet_type = OBEX;&#xA;OB_Out2.OBEX_type = PUT;&#xA;OB_Out2.FILE_timestamp = DataOut.FILE_timestamp;&#xA;OB_Out2.OBEX_timestamp = (int) cf_time_stamp().to_scalar(CF_US);&#xA;//OBEX verbose&#xA;if(Verbose_Level != LEVEL_SILENT &amp;&amp; Verbose_Level != LEVEL_RESULTS &amp;&amp; Verbose_Level != LEVEL_FS){&#xA;&#x9;cf_trace_report(&quot;OBEX: Send frame:%d bytes&quot;,OB_Out2.total_frame_size);&#xA;}&#xA;//monitoring&#xA;nb_OBEX_df++;&#xA;OB_Out2_trans.set_user_data_length( cf_dt::cf_data_size( OB_Out2.total_frame_size, CF_BYTE ) );\" executionTime=\"OBEX_SendFrameTime us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6Fra6x1EeCTXoYQNfqU0w\" name=\"Loop17\" isFirstOf=\"_F6FrSqx1EeCTXoYQNfqU0w\" firstStatement=\"_QXlzEKx-EeCTXoYQNfqU0w\" lastStatement=\"_F6FrS6x1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_EKrxUKx-EeCTXoYQNfqU0w\" name=\"OutAction\" previous=\"_F6FrXqx1EeCTXoYQNfqU0w\" next=\"_He-zoKx-EeCTXoYQNfqU0w\" port=\"_bvhKEKx9EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_He-zoKx-EeCTXoYQNfqU0w\" name=\"InAction\" previous=\"_EKrxUKx-EeCTXoYQNfqU0w\" next=\"_F6FrYqx1EeCTXoYQNfqU0w\" port=\"_g6Fxgqx9EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_QXlzEKx-EeCTXoYQNfqU0w\" name=\"InAction2\" isFirstOf=\"_F6Fra6x1EeCTXoYQNfqU0w\" next=\"_F6FrXqx1EeCTXoYQNfqU0w\" inputSelector=\"_Quyx8L4iEeKtP_t0bBPLww\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Frhqx1EeCTXoYQNfqU0w\" name=\"OBEX_Receive\" constructor=\"\" includes=\"\" declarations=\"int ack;\" initializations=\"ack = 0;\" cyclePeriod=\"10 ns\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\">\n                  <ports xmi:id=\"_F6FrxKx1EeCTXoYQNfqU0w\" name=\"continueEv\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_zpf28Kx9EeCTXoYQNfqU0w\" relations=\"_F6Fr-qx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Frxax1EeCTXoYQNfqU0w\" name=\"OB_Out1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_8xIw4Kx9EeCTXoYQNfqU0w\" relations=\"_F6Fr_6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_afeegqx9EeCTXoYQNfqU0w\" name=\"ReadWrite\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_v6RzMKx9EeCTXoYQNfqU0w\" port=\"_afeegax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_dPLmAqx9EeCTXoYQNfqU0w\" name=\"DataIn\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_wXlaQKx9EeCTXoYQNfqU0w\" port=\"_dPLmAax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_fKNvUqx9EeCTXoYQNfqU0w\" name=\"WrOK\" type=\"EVENT\" direction=\"IN\" inputActions=\"_7iJOMKx9EeCTXoYQNfqU0w\" port=\"_fKNvUax9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_iuIiAax9EeCTXoYQNfqU0w\" name=\"OBEX_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_pC8vAKx9EeCTXoYQNfqU0w\" port=\"_iuIiAKx9EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6Frh6x1EeCTXoYQNfqU0w\" name=\"OBEXReceiveBehvBh\" firstStatement=\"_F6FriKx1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FriKx1EeCTXoYQNfqU0w\" name=\"Loop16\" isFirstOf=\"_F6Frh6x1EeCTXoYQNfqU0w\" firstStatement=\"_pC8vAKx9EeCTXoYQNfqU0w\" lastStatement=\"_F6Frlax1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Friqx1EeCTXoYQNfqU0w\" name=\"Decode\" previous=\"_pC8vAKx9EeCTXoYQNfqU0w\" next=\"_F6Frlax1EeCTXoYQNfqU0w\" algorithm=\"switch(OBEX_In.OBEX_type){&#xA;&#x9;case PUT: {&#xA;&#x9;&#x9;ack = 0;&#xA;&#x9;&#x9;total_delay_OBEX += (int) cf_time_stamp().to_scalar(CF_US) - OBEX_In.OBEX_timestamp;&#xA;&#x9;}&#xA;&#x9;&#x9;break;&#xA;&#x9;case FINAL: {&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ack = 1;&#xA;&#x9;&#x9;&#x9;//monitoring&#xA;&#x9;&#x9;&#x9;total_delay_FILE += (int) cf_time_stamp().to_scalar(CF_US) - OBEX_In.FILE_timestamp;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;break;&#xA;}\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_F6Frlax1EeCTXoYQNfqU0w\" isLastOf=\"_F6FriKx1EeCTXoYQNfqU0w\" previous=\"_F6Friqx1EeCTXoYQNfqU0w\">\n                      <conditionalBranches xmi:id=\"_F6Frlqx1EeCTXoYQNfqU0w\" firstStatement=\"_F6Frnqx1EeCTXoYQNfqU0w\" lastStatement=\"_8xIw4Kx9EeCTXoYQNfqU0w\" condition=\"\"/>\n                      <conditionalBranches xmi:id=\"_F6FrmKx1EeCTXoYQNfqU0w\" firstStatement=\"_F6Frmqx1EeCTXoYQNfqU0w\" lastStatement=\"_zpf28Kx9EeCTXoYQNfqU0w\" condition=\"ack==1\"/>\n                    </statements>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Frmqx1EeCTXoYQNfqU0w\" name=\"Ack\" isFirstOf=\"_F6FrmKx1EeCTXoYQNfqU0w\" next=\"_zpf28Kx9EeCTXoYQNfqU0w\" algorithm=\"\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Frnqx1EeCTXoYQNfqU0w\" name=\"DataRcv\" isFirstOf=\"_F6Frlqx1EeCTXoYQNfqU0w\" next=\"_v6RzMKx9EeCTXoYQNfqU0w\" algorithm=\"//ask to write in file system&#xA;ReadWrite.order_type = write_order;&#xA;//specify the size to write (in bytes)&#xA;ReadWrite.size = OBEX_In.payload_size;&#xA;//Send payload to write&#xA;DataIn.payload_size = OBEX_In.payload_size;&#xA;DataIn.packet_type = FILE_PART;&#xA;//OBEX verbose&#xA;if(Verbose_Level != LEVEL_SILENT &amp;&amp; Verbose_Level != LEVEL_RESULTS &amp;&amp; Verbose_Level != LEVEL_FS){&#xA;&#x9;cf_trace_report(&quot;OBEX: Received frame:%d bytes&quot;,OBEX_In.total_frame_size);&#xA;&#x9;cf_trace_report(&quot;OBEX: Send data to FS:%d bytes&quot;,DataIn.payload_size);&#xA;}&#xA;DataIn_trans.set_user_data_length( cf_dt::cf_data_size( DataIn.payload_size, CF_BYTE ) );\" executionTime=\"OBEX_ReceiveFrameTime us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Frtqx1EeCTXoYQNfqU0w\" name=\"SendAck\" previous=\"_7iJOMKx9EeCTXoYQNfqU0w\" next=\"_8xIw4Kx9EeCTXoYQNfqU0w\" algorithm=\"//send a final packet&#xA;OB_Out1.total_frame_size = 3;&#xA;OB_Out1.header_size = OBEX_HDR_S;&#xA;OB_Out1.payload_size = 0;&#xA;OB_Out1.packet_type = OBEX;&#xA;OB_Out1.OBEX_type = FINAL;&#xA;OB_Out1.FILE_timestamp = OBEX_In.FILE_timestamp;//transmit file timestamp with the acknowledge&#xA;//OBEX verbose&#xA;if(Verbose_Level != LEVEL_SILENT &amp;&amp; Verbose_Level != LEVEL_RESULTS &amp;&amp; Verbose_Level != LEVEL_FS){&#xA;&#x9;cf_trace_report(&quot;OBEX: Send a final/continue packet&quot;);&#xA;}&#xA;OB_Out1_trans.set_user_data_length( cf_dt::cf_data_size( OB_Out1.total_frame_size, CF_BYTE ) );\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_pC8vAKx9EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6FriKx1EeCTXoYQNfqU0w\" next=\"_F6Friqx1EeCTXoYQNfqU0w\" port=\"_iuIiAax9EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_v6RzMKx9EeCTXoYQNfqU0w\" name=\"OutAction\" previous=\"_F6Frnqx1EeCTXoYQNfqU0w\" next=\"_wXlaQKx9EeCTXoYQNfqU0w\" port=\"_afeegqx9EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_wXlaQKx9EeCTXoYQNfqU0w\" name=\"OutAction2\" previous=\"_v6RzMKx9EeCTXoYQNfqU0w\" next=\"_7iJOMKx9EeCTXoYQNfqU0w\" port=\"_dPLmAqx9EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_zpf28Kx9EeCTXoYQNfqU0w\" name=\"OutAction3\" isLastOf=\"_F6FrmKx1EeCTXoYQNfqU0w\" previous=\"_F6Frmqx1EeCTXoYQNfqU0w\" port=\"_F6FrxKx1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_7iJOMKx9EeCTXoYQNfqU0w\" name=\"InAction2\" previous=\"_wXlaQKx9EeCTXoYQNfqU0w\" next=\"_F6Frtqx1EeCTXoYQNfqU0w\" port=\"_fKNvUqx9EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_8xIw4Kx9EeCTXoYQNfqU0w\" name=\"OutAction4\" isLastOf=\"_F6Frlqx1EeCTXoYQNfqU0w\" previous=\"_F6Frtqx1EeCTXoYQNfqU0w\" port=\"_F6Frxax1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Fryqx1EeCTXoYQNfqU0w\" name=\"OB_Out\" constructor=\"\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_F6Fr86x1EeCTXoYQNfqU0w\" name=\"OB_Out2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6Fr1qx1EeCTXoYQNfqU0w\" relations=\"_F6FsBqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Fr9ax1EeCTXoYQNfqU0w\" name=\"OB_Out1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6Frz6x1EeCTXoYQNfqU0w\" relations=\"_F6Fr_6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_T_-2Eax-EeCTXoYQNfqU0w\" name=\"OBEX_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_Wm51AKx-EeCTXoYQNfqU0w _WsHFIKx-EeCTXoYQNfqU0w\" port=\"_T_-2EKx-EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6Fry6x1EeCTXoYQNfqU0w\" name=\"OB_OutBehvBh\" firstStatement=\"_F6Fr5ax1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:MultipleGuardedStatement\" xmi:id=\"_F6FrzKx1EeCTXoYQNfqU0w\" name=\"MultipleWait\" isFirstOf=\"_F6Fr5ax1EeCTXoYQNfqU0w\" isLastOf=\"_F6Fr5ax1EeCTXoYQNfqU0w\">\n                      <guardedBranches xmi:id=\"_F6Frzax1EeCTXoYQNfqU0w\" firstStatement=\"_F6Frz6x1EeCTXoYQNfqU0w\" lastStatement=\"_Wm51AKx-EeCTXoYQNfqU0w\"/>\n                      <guardedBranches xmi:id=\"_F6Frzqx1EeCTXoYQNfqU0w\" firstStatement=\"_F6Fr1qx1EeCTXoYQNfqU0w\" lastStatement=\"_WsHFIKx-EeCTXoYQNfqU0w\"/>\n                    </statements>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6Frz6x1EeCTXoYQNfqU0w\" name=\"InAction39\" isFirstOf=\"_F6Frzax1EeCTXoYQNfqU0w\" next=\"_F6Fr3ax1EeCTXoYQNfqU0w\" port=\"_F6Fr9ax1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6Fr1qx1EeCTXoYQNfqU0w\" name=\"InAction40\" isFirstOf=\"_F6Frzqx1EeCTXoYQNfqU0w\" next=\"_F6Fr4ax1EeCTXoYQNfqU0w\" port=\"_F6Fr86x1EeCTXoYQNfqU0w\" timeout=\" ms\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Fr3ax1EeCTXoYQNfqU0w\" name=\"Out1\" previous=\"_F6Frz6x1EeCTXoYQNfqU0w\" next=\"_Wm51AKx-EeCTXoYQNfqU0w\" algorithm=\"OBEX_Out=OB_Out1;&#xA;OBEX_Out_trans.set_user_data_length( OB_Out1_trans.get_user_data_length() );&#xA;&#xA;OB_Out1_trans.unset_user_data_length();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Fr4ax1EeCTXoYQNfqU0w\" name=\"Out2\" previous=\"_F6Fr1qx1EeCTXoYQNfqU0w\" next=\"_WsHFIKx-EeCTXoYQNfqU0w\" algorithm=\"OBEX_Out=OB_Out2;&#xA;OBEX_Out_trans.set_user_data_length( OB_Out2_trans.get_user_data_length() );&#xA;&#xA;OB_Out2_trans.unset_user_data_length();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6Fr5ax1EeCTXoYQNfqU0w\" name=\"Loop31\" isFirstOf=\"_F6Fry6x1EeCTXoYQNfqU0w\" firstStatement=\"_F6FrzKx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FrzKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_Wm51AKx-EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6Frzax1EeCTXoYQNfqU0w\" previous=\"_F6Fr3ax1EeCTXoYQNfqU0w\" port=\"_T_-2Eax-EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_WsHFIKx-EeCTXoYQNfqU0w\" name=\"OutAction2\" isLastOf=\"_F6Frzqx1EeCTXoYQNfqU0w\" previous=\"_F6Fr4ax1EeCTXoYQNfqU0w\" port=\"_T_-2Eax-EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <relations xsi:type=\"cofluent:Event\" xmi:id=\"_F6Fr-qx1EeCTXoYQNfqU0w\" name=\"continueEv\" ports=\"_F6Frf6x1EeCTXoYQNfqU0w _F6FrxKx1EeCTXoYQNfqU0w\" setTime=\"0 ns\" getTime=\"0 ns\"/>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6Fr_6x1EeCTXoYQNfqU0w\" name=\"OB_Out1\" ports=\"_F6Frxax1EeCTXoYQNfqU0w _F6Fr9ax1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_APrm8EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU7ax1EeCTXoYQNfqU0w\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6FsBqx1EeCTXoYQNfqU0w\" name=\"OB_Out2\" ports=\"_F6Frgax1EeCTXoYQNfqU0w _F6Fr86x1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AQIS4EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU7ax1EeCTXoYQNfqU0w\"/>\n                </relations>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FsFqx1EeCTXoYQNfqU0w\" name=\"RFCOMM_Layer\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_oW9g0Kx_EeCTXoYQNfqU0w\" name=\"OBEX_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZwax1EeCTXoYQNfqU0w\" ports=\"_oW9g0ax_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_opjssKx_EeCTXoYQNfqU0w\" name=\"OBEX_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZuqx1EeCTXoYQNfqU0w\" ports=\"_opjssax_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_o_ReAKx_EeCTXoYQNfqU0w\" name=\"RFCOMM_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZy6x1EeCTXoYQNfqU0w\" ports=\"_o_ReAax_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_pVSxUKx_EeCTXoYQNfqU0w\" name=\"RFCOMM_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZ0qx1EeCTXoYQNfqU0w\" ports=\"_pVSxUax_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6FsF6x1EeCTXoYQNfqU0w\" name=\"RFCOMM_LayerStructSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FsGKx1EeCTXoYQNfqU0w\" name=\"RFCOMM_Receive\" constructor=\"\" includes=\"\" declarations=\"//number of credits available for the peer device&#xA;int peer_credits;&#xA;//flag indicating if peer need credits&#xA;bool peer_need_credits;&#xA;//flag indicating if OBEX frame reconstruction is finished&#xA;bool receive_complete;&#xA;//size of the already received RFCOMM payloads&#xA;int received_payload_size;&#xA;//type of the OBEX packet under reconstruction&#xA;unsigned char OBEX_packet_type;&#xA;//receive operation time in us&#xA;double receive_op_time;\" definitions=\"\" initializations=\"//number of credits available for the peer device&#xD;&#xA;peer_credits = RFCOMM_credits;&#xD;&#xA;//flag indicating if peer need credits&#xD;&#xA;peer_need_credits = false;&#xD;&#xA;//flag indicating if OBEX frame reconstruction is finished&#xD;&#xA;receive_complete = false;&#xD;&#xA;//size of the already received RFCOMM payloads&#xD;&#xA;received_payload_size = 0;&#xD;&#xA;//receive operation time in us&#xD;&#xA;receive_op_time = 0.0;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_F6FsO6x1EeCTXoYQNfqU0w\" name=\"RFC_Data\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6FsHKx1EeCTXoYQNfqU0w\" relations=\"_F6Fsy6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6FsPKx1EeCTXoYQNfqU0w\" name=\"RFC_Out1\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6FsJ6x1EeCTXoYQNfqU0w\" relations=\"_F6Fs2ax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_oW9g0ax_EeCTXoYQNfqU0w\" name=\"OBEX_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_r3TbEKx_EeCTXoYQNfqU0w\" port=\"_oW9g0Kx_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FsGax1EeCTXoYQNfqU0w\" name=\"RFCOMM_ReceiveBehvBh\" firstStatement=\"_F6FsOKx1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FsGqx1EeCTXoYQNfqU0w\" name=\"Loop20\" isFirstOf=\"_F6FsOKx1EeCTXoYQNfqU0w\" firstStatement=\"_F6FsHKx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FsJ6x1EeCTXoYQNfqU0w\" next=\"_F6FsLqx1EeCTXoYQNfqU0w\" condition=\"receive_complete==false\" type=\"CONDITIONAL\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6FsHKx1EeCTXoYQNfqU0w\" name=\"InAction26\" isFirstOf=\"_F6FsGqx1EeCTXoYQNfqU0w\" next=\"_F6FsI6x1EeCTXoYQNfqU0w\" port=\"_F6FsO6x1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsI6x1EeCTXoYQNfqU0w\" name=\"Receive\" previous=\"_F6FsHKx1EeCTXoYQNfqU0w\" next=\"_F6FsJ6x1EeCTXoYQNfqU0w\" algorithm=\"receive_op_time = RFCOMM_ReceiveFrameTime.get_value().to_scalar( CF_US );&#xA;peer_need_credits = false;&#xA;//receive incoming RFCOMM frame&#xA;if(received_payload_size == 0) OBEX_packet_type = RFC_Data.OBEX_type;&#xA;received_payload_size += RFC_Data.payload_size;&#xA;if(OBEX_packet_type == PUT) peer_credits--;&#xA;if(RFC_Data.RFCOMM_type == DATA_END) receive_complete = true;&#xA;//RFCOMM verbose&#xA;if(Verbose_Level == LEVEL_RFCOMM){&#xA;&#x9;cf_trace_report(&quot;RFCOMM: received frame, payload:%d bytes&quot;,RFC_Data.payload_size);&#xA;}&#xA;//send credits if needed&#xA;if(peer_credits == 0){&#xA;&#x9;peer_need_credits = true;&#xA;&#x9;RFC_Out1.total_frame_size = RFCOMM_HDR_S;&#xA;&#x9;RFC_Out1.header_size = RFCOMM_HDR_S;&#xA;&#x9;RFC_Out1.payload_size = 0;&#xA;&#x9;RFC_Out1.packet_type = RFCOMM;&#xA;&#x9;RFC_Out1.RFCOMM_type = CREDITS;&#xA;&#x9;peer_credits = RFCOMM_credits;&#xA;&#x9;receive_op_time = RFCOMM_recredits_delay;&#xA;&#x9;//RFCOMM verbose&#xA;&#x9;if(Verbose_Level == LEVEL_RFCOMM){&#xA;&#x9;&#x9;cf_trace_report(&quot;RFCOMM: send credits&quot;);&#xA;&#x9;}&#xA;&#x9;RFC_Out1_trans.set_user_data_length( cf_dt::cf_data_size( RFC_Out1.total_frame_size, CF_BYTE ) );&#xA;}&#xA;//monitoring&#xA;total_delay_RFCOMM += (int) cf_time_stamp().to_scalar(CF_US) - RFC_Data.RFCOMM_timestamp;&#xA;&#xA;//cf_trace_report(&quot;receive_op_time = %f&quot;, receive_op_time);\" executionTime=\"receive_op_time us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6FsJ6x1EeCTXoYQNfqU0w\" name=\"OutAction31\" isLastOf=\"_F6FsGqx1EeCTXoYQNfqU0w\" previous=\"_F6FsI6x1EeCTXoYQNfqU0w\" port=\"_F6FsPKx1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"peer_need_credits\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsLqx1EeCTXoYQNfqU0w\" name=\"SendOBEX\" previous=\"_F6FsGqx1EeCTXoYQNfqU0w\" next=\"_r3TbEKx_EeCTXoYQNfqU0w\" algorithm=\"//send OBEX frame&#xA;OBEX_In.total_frame_size = received_payload_size;&#xA;OBEX_In.header_size = OBEX_HDR_S;&#xA;OBEX_In.payload_size = received_payload_size - OBEX_HDR_S;&#xA;OBEX_In.packet_type = OBEX;&#xA;OBEX_In.OBEX_type = OBEX_packet_type;&#xA;OBEX_In.FILE_timestamp = RFC_Data.FILE_timestamp;&#xA;OBEX_In.OBEX_timestamp = RFC_Data.OBEX_timestamp;&#xA;//reset receive complete flag&#xA;receive_complete = false;&#xA;//reset receive payload size&#xA;received_payload_size = 0;&#xA;//RFCOMM verbose&#xA;if(Verbose_Level == LEVEL_RFCOMM){&#xA;&#x9;cf_trace_report(&quot;RFCOMM: send data to OBEX:%d bytes&quot;,OBEX_In.total_frame_size);&#xA;}&#xA;OBEX_In_trans.set_user_data_length( cf_dt::cf_data_size( OBEX_In.total_frame_size, CF_BYTE ) );\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FsOKx1EeCTXoYQNfqU0w\" name=\"Loop18\" isFirstOf=\"_F6FsGax1EeCTXoYQNfqU0w\" firstStatement=\"_F6FsGqx1EeCTXoYQNfqU0w\" lastStatement=\"_r3TbEKx_EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_r3TbEKx_EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6FsOKx1EeCTXoYQNfqU0w\" previous=\"_F6FsLqx1EeCTXoYQNfqU0w\" port=\"_oW9g0ax_EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FsQax1EeCTXoYQNfqU0w\" name=\"RFCOMM_Send\" declarations=\"//number of RFCOMM data packets to send&#xA;int nb_packets_to_send;&#xA;//size of the last RFCOMM packet payload&#xA;int last_payload_size;&#xA;//credits&#xA;int credits;&#xA;bool needCredits;&#xA;//type of the OBEX packet under fragmentation&#xA;unsigned char OBEX_packet_type;\" initializations=\"//credits&#xD;&#xA;credits = RFCOMM_credits;&#xD;&#xA;needCredits = false;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_F6Fscax1EeCTXoYQNfqU0w\" name=\"RFC_Cdts\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6FsXKx1EeCTXoYQNfqU0w\" relations=\"_F6Fs0qx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Fscqx1EeCTXoYQNfqU0w\" name=\"RFC_Out2\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6FsVqx1EeCTXoYQNfqU0w\" relations=\"_F6Fs4Kx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_opjssax_EeCTXoYQNfqU0w\" name=\"OBEX_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_ySOQEKx_EeCTXoYQNfqU0w\" port=\"_opjssKx_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FsQqx1EeCTXoYQNfqU0w\" name=\"RFCOMM_SendBehvBh\" firstStatement=\"_F6FsQ6x1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FsQ6x1EeCTXoYQNfqU0w\" name=\"Loop19\" isFirstOf=\"_F6FsQqx1EeCTXoYQNfqU0w\" firstStatement=\"_ySOQEKx_EeCTXoYQNfqU0w\" lastStatement=\"_F6FsUKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsTKx1EeCTXoYQNfqU0w\" name=\"Fragment\" previous=\"_ySOQEKx_EeCTXoYQNfqU0w\" next=\"_F6FsUKx1EeCTXoYQNfqU0w\" algorithm=\"nb_packets_to_send = OBEX_Out.total_frame_size/RFCOMM_pl_size;&#xA;last_payload_size = OBEX_Out.total_frame_size%RFCOMM_pl_size;&#xA;OBEX_packet_type = OBEX_Out.OBEX_type;&#xA;if(last_payload_size != 0) nb_packets_to_send++;&#xA;else last_payload_size = RFCOMM_pl_size;\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FsUKx1EeCTXoYQNfqU0w\" name=\"Loop22\" isLastOf=\"_F6FsQ6x1EeCTXoYQNfqU0w\" firstStatement=\"_F6FsbKx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FsZ6x1EeCTXoYQNfqU0w\" previous=\"_F6FsTKx1EeCTXoYQNfqU0w\" condition=\"nb_packets_to_send>0\" type=\"CONDITIONAL\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsUqx1EeCTXoYQNfqU0w\" name=\"SendPacket\" isFirstOf=\"_F6FsaKx1EeCTXoYQNfqU0w\" next=\"_F6FsVqx1EeCTXoYQNfqU0w\" algorithm=\"RFC_Out2.header_size = RFCOMM_HDR_S;&#xA;RFC_Out2.OBEX_type = OBEX_packet_type;&#xA;RFC_Out2.FILE_timestamp = OBEX_Out.FILE_timestamp;&#xA;RFC_Out2.OBEX_timestamp = OBEX_Out.OBEX_timestamp;&#xA;RFC_Out2.RFCOMM_timestamp = (int)cf_time_stamp().to_scalar(CF_US);&#xA;&#xA;RFC_Out2.packet_type = RFCOMM;&#xA;if(nb_packets_to_send > 1){&#xA;&#x9;RFC_Out2.RFCOMM_type = DATA;&#xA;&#x9;RFC_Out2.payload_size = RFCOMM_pl_size;&#xA;}&#xA;else{&#xA;&#x9;RFC_Out2.RFCOMM_type = DATA_END;&#xA;&#x9;RFC_Out2.payload_size = last_payload_size;&#xA;}&#xA;&#xA;RFC_Out2.total_frame_size = RFC_Out2.header_size + RFC_Out2.payload_size;&#xA;RFC_Out2_trans.set_user_data_length( cf_dt::cf_data_size( RFC_Out2.total_frame_size, CF_BYTE ) );&#xA;nb_packets_to_send--;&#xA;if(OBEX_packet_type == PUT)credits--;&#xA;//RFCOMM verbose&#xA;if(Verbose_Level == LEVEL_RFCOMM){&#xA;&#x9;cf_trace_report(&quot;RFCOMM: send frame, payload:%d bytes&quot;,RFC_Out2.payload_size);&#xA;}&#xA;//monitoring&#xA;nb_RFCOMM_df++;\" executionTime=\"RFCOMM_SendFrameTime us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6FsVqx1EeCTXoYQNfqU0w\" name=\"OutAction32\" isLastOf=\"_F6FsaKx1EeCTXoYQNfqU0w\" previous=\"_F6FsUqx1EeCTXoYQNfqU0w\" port=\"_F6Fscqx1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6FsXKx1EeCTXoYQNfqU0w\" name=\"InAction27\" isFirstOf=\"_F6Fsaqx1EeCTXoYQNfqU0w\" next=\"_F6FsY6x1EeCTXoYQNfqU0w\" port=\"_F6Fscax1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsY6x1EeCTXoYQNfqU0w\" name=\"UpdateCredits\" isLastOf=\"_F6Fsaqx1EeCTXoYQNfqU0w\" previous=\"_F6FsXKx1EeCTXoYQNfqU0w\" algorithm=\"credits = RFCOMM_credits;&#xA;needCredits = false;\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:AlternativeStatement\" xmi:id=\"_F6FsZ6x1EeCTXoYQNfqU0w\" isLastOf=\"_F6FsUKx1EeCTXoYQNfqU0w\" previous=\"_F6FsbKx1EeCTXoYQNfqU0w\">\n                      <conditionalBranches xmi:id=\"_F6FsaKx1EeCTXoYQNfqU0w\" firstStatement=\"_F6FsUqx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FsVqx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                      <conditionalBranches xmi:id=\"_F6Fsaqx1EeCTXoYQNfqU0w\" firstStatement=\"_F6FsXKx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FsY6x1EeCTXoYQNfqU0w\" condition=\"needCredits==true\"/>\n                    </statements>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsbKx1EeCTXoYQNfqU0w\" name=\"CheckCredits\" isFirstOf=\"_F6FsUKx1EeCTXoYQNfqU0w\" next=\"_F6FsZ6x1EeCTXoYQNfqU0w\" algorithm=\"if(credits == 0){&#xA;&#x9;needCredits = true;&#xA;&#x9;nb_cdts_req++;&#xA;}\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_ySOQEKx_EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6FsQ6x1EeCTXoYQNfqU0w\" next=\"_F6FsTKx1EeCTXoYQNfqU0w\" port=\"_opjssax_EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Fsd6x1EeCTXoYQNfqU0w\" name=\"CreditsOrData\" declarations=\"//data flag&#xA;bool data_flag;&#xA;//credit flag&#xA;bool cdt_flag;\" initializations=\"//data flag&#xD;&#xA;data_flag = false;&#xD;&#xA;//credit flag&#xD;&#xA;cdt_flag = false;\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_F6Fslax1EeCTXoYQNfqU0w\" name=\"RFC_Data\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6Fshqx1EeCTXoYQNfqU0w\" relations=\"_F6Fsy6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Fslqx1EeCTXoYQNfqU0w\" name=\"RFC_Cdts\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_F6Fsjax1EeCTXoYQNfqU0w\" relations=\"_F6Fs0qx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_pVSxUax_EeCTXoYQNfqU0w\" name=\"RFCOMM_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_7rHSEKx_EeCTXoYQNfqU0w\" port=\"_pVSxUKx_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FseKx1EeCTXoYQNfqU0w\" name=\"CreditsOrDataBehvBh\" firstStatement=\"_F6Fseax1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6Fseax1EeCTXoYQNfqU0w\" name=\"Loop21\" isFirstOf=\"_F6FseKx1EeCTXoYQNfqU0w\" firstStatement=\"_7rHSEKx_EeCTXoYQNfqU0w\" lastStatement=\"_F6Fsjax1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Fsgqx1EeCTXoYQNfqU0w\" name=\"Decode\" previous=\"_7rHSEKx_EeCTXoYQNfqU0w\" next=\"_F6Fshqx1EeCTXoYQNfqU0w\" algorithm=\"//reset flags&#xA;data_flag = false;&#xA;cdt_flag = false;&#xA;//set flags&#xA;if(RFCOMM_In.RFCOMM_type == CREDITS){&#xA;&#x9;cdt_flag = true;&#xA;&#x9;RFC_Cdts = RFCOMM_In;&#xA;&#x9;RFC_Cdts_trans.set_user_data_length( RFCOMM_In_trans.get_user_data_length() );&#xA;&#x9;RFCOMM_In_trans.unset_user_data_length();&#xA;}&#xA;else{&#xA;&#x9;data_flag = true;&#xA;&#x9;RFC_Data = RFCOMM_In;&#xA;&#x9;RFC_Data_trans.set_user_data_length( RFCOMM_In_trans.get_user_data_length() );&#xA;&#x9;RFCOMM_In_trans.unset_user_data_length();&#xA;}\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6Fshqx1EeCTXoYQNfqU0w\" name=\"OutAction34\" previous=\"_F6Fsgqx1EeCTXoYQNfqU0w\" next=\"_F6Fsjax1EeCTXoYQNfqU0w\" port=\"_F6Fslax1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"data_flag\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_F6Fsjax1EeCTXoYQNfqU0w\" name=\"OutAction35\" isLastOf=\"_F6Fseax1EeCTXoYQNfqU0w\" previous=\"_F6Fshqx1EeCTXoYQNfqU0w\" port=\"_F6Fslqx1EeCTXoYQNfqU0w\" duration=\"1 ns\" condition=\"cdt_flag\" priority=\"1\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_7rHSEKx_EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6Fseax1EeCTXoYQNfqU0w\" next=\"_F6Fsgqx1EeCTXoYQNfqU0w\" port=\"_pVSxUax_EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Fsm6x1EeCTXoYQNfqU0w\" name=\"RFC_Out\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_F6Fsxax1EeCTXoYQNfqU0w\" name=\"RFC_Out1\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6Fsoqx1EeCTXoYQNfqU0w\" relations=\"_F6Fs2ax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_F6Fsxqx1EeCTXoYQNfqU0w\" name=\"RFC_Out2\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_F6Fsqax1EeCTXoYQNfqU0w\" relations=\"_F6Fs4Kx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_o_ReAax_EeCTXoYQNfqU0w\" name=\"RFCOMM_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"__-73sKx_EeCTXoYQNfqU0w _AES40KyAEeCTXoYQNfqU0w\" port=\"_o_ReAKx_EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FsnKx1EeCTXoYQNfqU0w\" name=\"RFC_OutBehvBh\" firstStatement=\"_F6Fsnax1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6Fsnax1EeCTXoYQNfqU0w\" name=\"Loop32\" isFirstOf=\"_F6FsnKx1EeCTXoYQNfqU0w\" firstStatement=\"_F6Fsn6x1EeCTXoYQNfqU0w\" lastStatement=\"_F6Fsn6x1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:MultipleGuardedStatement\" xmi:id=\"_F6Fsn6x1EeCTXoYQNfqU0w\" name=\"MultipleWait\" isFirstOf=\"_F6Fsnax1EeCTXoYQNfqU0w\" isLastOf=\"_F6Fsnax1EeCTXoYQNfqU0w\">\n                      <guardedBranches xmi:id=\"_F6FsoKx1EeCTXoYQNfqU0w\" firstStatement=\"_F6Fsoqx1EeCTXoYQNfqU0w\" lastStatement=\"__-73sKx_EeCTXoYQNfqU0w\"/>\n                      <guardedBranches xmi:id=\"_F6Fsoax1EeCTXoYQNfqU0w\" firstStatement=\"_F6Fsqax1EeCTXoYQNfqU0w\" lastStatement=\"_AES40KyAEeCTXoYQNfqU0w\"/>\n                    </statements>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6Fsoqx1EeCTXoYQNfqU0w\" name=\"InAction41\" isFirstOf=\"_F6FsoKx1EeCTXoYQNfqU0w\" next=\"_F6FsvKx1EeCTXoYQNfqU0w\" port=\"_F6Fsxax1EeCTXoYQNfqU0w\" timeout=\" ms\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_F6Fsqax1EeCTXoYQNfqU0w\" name=\"InAction42\" isFirstOf=\"_F6Fsoax1EeCTXoYQNfqU0w\" next=\"_F6FswKx1EeCTXoYQNfqU0w\" port=\"_F6Fsxqx1EeCTXoYQNfqU0w\" timeout=\" ms\" duration=\"1 ns\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FsvKx1EeCTXoYQNfqU0w\" name=\"Out1\" previous=\"_F6Fsoqx1EeCTXoYQNfqU0w\" next=\"__-73sKx_EeCTXoYQNfqU0w\" algorithm=\"RFCOMM_Out=RFC_Out1;&#xA;RFCOMM_Out_trans.set_user_data_length( RFC_Out1_trans.get_user_data_length() );&#xA;&#xA;RFC_Out1_trans.unset_user_data_length();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FswKx1EeCTXoYQNfqU0w\" name=\"Out2\" previous=\"_F6Fsqax1EeCTXoYQNfqU0w\" next=\"_AES40KyAEeCTXoYQNfqU0w\" algorithm=\"RFCOMM_Out=RFC_Out2;&#xA;RFCOMM_Out_trans.set_user_data_length( RFC_Out2_trans.get_user_data_length() );&#xA;&#xA;RFC_Out2_trans.unset_user_data_length();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"__-73sKx_EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6FsoKx1EeCTXoYQNfqU0w\" previous=\"_F6FsvKx1EeCTXoYQNfqU0w\" port=\"_o_ReAax_EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_AES40KyAEeCTXoYQNfqU0w\" name=\"OutAction2\" isLastOf=\"_F6Fsoax1EeCTXoYQNfqU0w\" previous=\"_F6FswKx1EeCTXoYQNfqU0w\" port=\"_o_ReAax_EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6Fsy6x1EeCTXoYQNfqU0w\" name=\"RFC_Data\" ports=\"_F6Fslax1EeCTXoYQNfqU0w _F6FsO6x1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AYeWkUwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU4ax1EeCTXoYQNfqU0w\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6Fs0qx1EeCTXoYQNfqU0w\" name=\"RFC_Cdts\" ports=\"_F6Fslqx1EeCTXoYQNfqU0w _F6Fscax1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AYBqoEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU4ax1EeCTXoYQNfqU0w\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6Fs2ax1EeCTXoYQNfqU0w\" name=\"RFC_Out1\" ports=\"_F6Fsxax1EeCTXoYQNfqU0w _F6FsPKx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AWic4EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU86x1EeCTXoYQNfqU0w\"/>\n                </relations>\n                <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6Fs4Kx1EeCTXoYQNfqU0w\" name=\"RFC_Out2\" ports=\"_F6Fsxqx1EeCTXoYQNfqU0w _F6Fscqx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\">\n                  <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AWFw8EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU86x1EeCTXoYQNfqU0w\"/>\n                </relations>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Fs7ax1EeCTXoYQNfqU0w\" name=\"BaseBand_Layer\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_LUusQqx1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" port=\"_LUusQax1EeCTXoYQNfqU0w\" ports=\"_LUusQ6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_WoNysKx1EeCTXoYQNfqU0w\" name=\"L2CAP_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZ4Kx1EeCTXoYQNfqU0w\" ports=\"_WoNysax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_W9L9Iqx1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" port=\"_W9L9Iax1EeCTXoYQNfqU0w\" ports=\"_W9L9I6x1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_XNHPgKx1EeCTXoYQNfqU0w\" name=\"L2CAP_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZ2ax1EeCTXoYQNfqU0w\" ports=\"_XNHPgax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6Fs7qx1EeCTXoYQNfqU0w\" name=\"BaseBand_LayerStructSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6Fs76x1EeCTXoYQNfqU0w\" name=\"BB_Receive\" declarations=\"//receive operation duration in ms&#xA;double op_rcv_duration;\" initializations=\"//receive operation duration in ms&#xD;&#xA;op_rcv_duration = 0;\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\"40 mW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_W9L9I6x1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_nU_5EKx1EeCTXoYQNfqU0w\" port=\"_W9L9Iqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_XNHPgax1EeCTXoYQNfqU0w\" name=\"L2CAP_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_nsgaIKx1EeCTXoYQNfqU0w\" port=\"_XNHPgKx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6Fs8Kx1EeCTXoYQNfqU0w\" name=\"BB_ReceiveBehvBh\" firstStatement=\"_F6Fs8ax1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6Fs8ax1EeCTXoYQNfqU0w\" name=\"Loop29\" isFirstOf=\"_F6Fs8Kx1EeCTXoYQNfqU0w\" firstStatement=\"_nU_5EKx1EeCTXoYQNfqU0w\" lastStatement=\"_nsgaIKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6Fs-qx1EeCTXoYQNfqU0w\" name=\"PacketReceive\" previous=\"_nU_5EKx1EeCTXoYQNfqU0w\" next=\"_nsgaIKx1EeCTXoYQNfqU0w\" algorithm=\"//receive operation duration computing&#xA;op_rcv_duration =&#xA;&#x9;8000.0*(double)(BaseBand_In.total_frame_size)/(double)Throughput_BaseBand;&#xA;//receive&#xA;L2CAP_In = BaseBand_In;&#xA;L2CAP_In_trans.set_user_data_length( BaseBand_In_trans.get_user_data_length() );&#xA;//cf_trace_report(&quot;BB_receive = %s&quot;, BaseBand_In_trans.get_user_data_length().to_c_str());&#xA;&#xA;BaseBand_In_trans.unset_user_data_length();\" executionTime=\"op_rcv_duration us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_nU_5EKx1EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6Fs8ax1EeCTXoYQNfqU0w\" next=\"_F6Fs-qx1EeCTXoYQNfqU0w\" port=\"_W9L9I6x1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_nsgaIKx1EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6Fs8ax1EeCTXoYQNfqU0w\" previous=\"_F6Fs-qx1EeCTXoYQNfqU0w\" port=\"_XNHPgax1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FtCqx1EeCTXoYQNfqU0w\" name=\"BB_Send\" declarations=\"//send operation duration in ms&#xA;double op_send_duration;\" initializations=\"//send operation duration in ms&#xD;&#xA;op_send_duration = 0;\" cyclePeriod=\"10 ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\"70 mW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n                  <ports xmi:id=\"_LUusQ6x1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_NsB60Kx1EeCTXoYQNfqU0w\" port=\"_LUusQqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_WoNysax1EeCTXoYQNfqU0w\" name=\"L2CAP_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_YWAxQKx1EeCTXoYQNfqU0w\" port=\"_WoNysKx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FtC6x1EeCTXoYQNfqU0w\" name=\"BB_SendBehvBh\" firstStatement=\"_F6FtDKx1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6FtDKx1EeCTXoYQNfqU0w\" name=\"Loop28\" isFirstOf=\"_F6FtC6x1EeCTXoYQNfqU0w\" firstStatement=\"_YWAxQKx1EeCTXoYQNfqU0w\" lastStatement=\"_F6FtFax1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FtFax1EeCTXoYQNfqU0w\" name=\"PacketSend\" isLastOf=\"_F6FtDKx1EeCTXoYQNfqU0w\" previous=\"_NsB60Kx1EeCTXoYQNfqU0w\" algorithm=\"//send operation duration computing&#xA;op_send_duration =&#xA;&#x9;8000.0*(double)(L2CAP_Out.total_frame_size)/(double)Throughput_BaseBand;&#xA;\" executionTime=\"op_send_duration us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6FtH6x1EeCTXoYQNfqU0w\" name=\"ForwardData\" previous=\"_YWAxQKx1EeCTXoYQNfqU0w\" next=\"_NsB60Kx1EeCTXoYQNfqU0w\" algorithm=\"//send&#xA;BaseBand_Out = L2CAP_Out;&#xA;BaseBand_Out_trans.set_user_data_length( L2CAP_Out_trans.get_user_data_length() );&#xA;&#xA;//cf_trace_report(&quot;BB_send = %s&quot;, BaseBand_Out_trans.get_user_data_length().to_c_str());&#xA;&#xA;L2CAP_Out_trans.unset_user_data_length();\" executionTime=\"0 ns\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_NsB60Kx1EeCTXoYQNfqU0w\" name=\"OutAction\" previous=\"_F6FtH6x1EeCTXoYQNfqU0w\" next=\"_F6FtFax1EeCTXoYQNfqU0w\" port=\"_LUusQ6x1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_YWAxQKx1EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6FtDKx1EeCTXoYQNfqU0w\" next=\"_F6FtH6x1EeCTXoYQNfqU0w\" port=\"_WoNysax1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FtL6x1EeCTXoYQNfqU0w\" name=\"L2CAP_Layer\" cyclePeriod=\"10 ns\">\n              <ports xmi:id=\"_uuP-kKx1EeCTXoYQNfqU0w\" name=\"RFCOMM_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZy6x1EeCTXoYQNfqU0w\" ports=\"_uuP-kax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_vAGjkKx1EeCTXoYQNfqU0w\" name=\"RFCOMM_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZ0qx1EeCTXoYQNfqU0w\" ports=\"_vAGjkax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_vh3z4Kx1EeCTXoYQNfqU0w\" name=\"L2CAP_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_F6PZ2ax1EeCTXoYQNfqU0w\" ports=\"_vh3z4ax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <ports xmi:id=\"_v0d_wKx1EeCTXoYQNfqU0w\" name=\"L2CAP_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_F6PZ4Kx1EeCTXoYQNfqU0w\" ports=\"_v0d_wax1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n              <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_F6FtMKx1EeCTXoYQNfqU0w\" name=\"L2CAP_LayerStructSt\">\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6FtMax1EeCTXoYQNfqU0w\" name=\"L2CAP_Receive\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_vAGjkax1EeCTXoYQNfqU0w\" name=\"RFCOMM_In\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_1W_0MKx1EeCTXoYQNfqU0w\" port=\"_vAGjkKx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_vh3z4ax1EeCTXoYQNfqU0w\" name=\"L2CAP_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_089jkKx1EeCTXoYQNfqU0w\" port=\"_vh3z4Kx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6FtMqx1EeCTXoYQNfqU0w\" name=\"L2CAP_ReceiveBehvBh\" firstStatement=\"_F6PZkax1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6PZh6x1EeCTXoYQNfqU0w\" name=\"ReceiveFrame\" previous=\"_089jkKx1EeCTXoYQNfqU0w\" next=\"_1W_0MKx1EeCTXoYQNfqU0w\" algorithm=\"RFCOMM_In.total_frame_size = L2CAP_In.payload_size;&#xA;RFCOMM_In.header_size = RFCOMM_HDR_S;&#xA;RFCOMM_In.payload_size = RFCOMM_In.total_frame_size - RFCOMM_In.header_size;&#xA;RFCOMM_In.packet_type = RFCOMM;&#xA;RFCOMM_In.OBEX_type = L2CAP_In.OBEX_type;&#xA;RFCOMM_In.RFCOMM_type = L2CAP_In.RFCOMM_type;&#xA;RFCOMM_In.FILE_timestamp = L2CAP_In.FILE_timestamp;&#xA;RFCOMM_In.OBEX_timestamp = L2CAP_In.OBEX_timestamp;&#xA;RFCOMM_In.RFCOMM_timestamp = L2CAP_In.RFCOMM_timestamp;&#xA;RFCOMM_In_trans.set_user_data_length( cf_dt::cf_data_size( RFCOMM_In.total_frame_size, CF_BYTE ) );\" executionTime=\"L2CAP_ReceiveFrameTime us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6PZkax1EeCTXoYQNfqU0w\" name=\"Loop27\" isFirstOf=\"_F6FtMqx1EeCTXoYQNfqU0w\" firstStatement=\"_089jkKx1EeCTXoYQNfqU0w\" lastStatement=\"_1W_0MKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_089jkKx1EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6PZkax1EeCTXoYQNfqU0w\" next=\"_F6PZh6x1EeCTXoYQNfqU0w\" port=\"_vh3z4ax1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_1W_0MKx1EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6PZkax1EeCTXoYQNfqU0w\" previous=\"_F6PZh6x1EeCTXoYQNfqU0w\" port=\"_vAGjkax1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n                <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6PZmax1EeCTXoYQNfqU0w\" name=\"L2CAP_Send\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n                  <ports xmi:id=\"_uuP-kax1EeCTXoYQNfqU0w\" name=\"RFCOMM_Out\" type=\"MESSAGE_QUEUE\" direction=\"IN\" inputActions=\"_79XEMKx1EeCTXoYQNfqU0w\" port=\"_uuP-kKx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <ports xmi:id=\"_v0d_wax1EeCTXoYQNfqU0w\" name=\"L2CAP_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" outputActions=\"_8N4McKx1EeCTXoYQNfqU0w\" port=\"_v0d_wKx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n                  <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_F6PZmqx1EeCTXoYQNfqU0w\" name=\"L2CAP_SendBehvBh\" firstStatement=\"_F6PZm6x1EeCTXoYQNfqU0w\">\n                    <statements xsi:type=\"cofluent:LoopStatement\" xmi:id=\"_F6PZm6x1EeCTXoYQNfqU0w\" name=\"Loop30\" isFirstOf=\"_F6PZmqx1EeCTXoYQNfqU0w\" firstStatement=\"_79XEMKx1EeCTXoYQNfqU0w\" lastStatement=\"_8N4McKx1EeCTXoYQNfqU0w\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_F6PZnax1EeCTXoYQNfqU0w\" name=\"SendFrame\" previous=\"_79XEMKx1EeCTXoYQNfqU0w\" next=\"_8N4McKx1EeCTXoYQNfqU0w\" algorithm=\"L2CAP_Out.header_size = L2CAP_HDR_S;&#xD;&#xA;&#x9;L2CAP_Out.payload_size = RFCOMM_Out.total_frame_size;&#xD;&#xA;&#x9;L2CAP_Out.total_frame_size = L2CAP_Out.header_size + L2CAP_Out.payload_size;&#xD;&#xA;&#x9;L2CAP_Out.packet_type = L2CAP;&#xD;&#xA;&#x9;L2CAP_Out.OBEX_type = RFCOMM_Out.OBEX_type;&#xD;&#xA;&#x9;L2CAP_Out.RFCOMM_type = RFCOMM_Out.RFCOMM_type;&#xD;&#xA;&#x9;total_L2CAP_data += L2CAP_Out.total_frame_size;&#xD;&#xA;&#x9;L2CAP_Out.FILE_timestamp = RFCOMM_Out.FILE_timestamp;&#xD;&#xA;&#x9;L2CAP_Out.OBEX_timestamp = RFCOMM_Out.OBEX_timestamp;&#xD;&#xA;&#x9;L2CAP_Out.RFCOMM_timestamp = RFCOMM_Out.RFCOMM_timestamp;&#xA;&#x9;L2CAP_Out_trans.set_user_data_length( cf_dt::cf_data_size( L2CAP_Out.total_frame_size, CF_BYTE ) );\" executionTime=\"L2CAP_SendFrameTime us\" systematicRead=\"true\" systematicWrite=\"true\"/>\n                    <statements xsi:type=\"cofluent:InputAction\" xmi:id=\"_79XEMKx1EeCTXoYQNfqU0w\" name=\"InAction\" isFirstOf=\"_F6PZm6x1EeCTXoYQNfqU0w\" next=\"_F6PZnax1EeCTXoYQNfqU0w\" port=\"_uuP-kax1EeCTXoYQNfqU0w\" timeout=\" ms\" priority=\"\" duration=\" ns\" vectorSize=\"1\" blocking=\"true\" condition=\"\"/>\n                    <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_8N4McKx1EeCTXoYQNfqU0w\" name=\"OutAction\" isLastOf=\"_F6PZm6x1EeCTXoYQNfqU0w\" previous=\"_F6PZnax1EeCTXoYQNfqU0w\" port=\"_v0d_wax1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n                  </refinement>\n                </models>\n              </refinement>\n            </models>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZuqx1EeCTXoYQNfqU0w\" name=\"OBEX_Out\" ports=\"_T_-2EKx-EeCTXoYQNfqU0w _opjssKx_EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AO8AEEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU7ax1EeCTXoYQNfqU0w\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZwax1EeCTXoYQNfqU0w\" name=\"OBEX_In\" ports=\"_oW9g0Kx_EeCTXoYQNfqU0w _iuIiAKx9EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AOpFIEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU6ax1EeCTXoYQNfqU0w\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZy6x1EeCTXoYQNfqU0w\" name=\"RFCOMM_Out\" ports=\"_uuP-kKx1EeCTXoYQNfqU0w _o_ReAKx_EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AXSDwEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU86x1EeCTXoYQNfqU0w\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZ0qx1EeCTXoYQNfqU0w\" name=\"RFCOMM_In\" ports=\"_pVSxUKx_EeCTXoYQNfqU0w _vAGjkKx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AXk-sEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU4ax1EeCTXoYQNfqU0w\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZ2ax1EeCTXoYQNfqU0w\" name=\"L2CAP_In\" ports=\"_XNHPgKx1EeCTXoYQNfqU0w _vh3z4Kx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AZXucEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU76x1EeCTXoYQNfqU0w\"/>\n            </relations>\n            <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZ4Kx1EeCTXoYQNfqU0w\" name=\"L2CAP_Out\" ports=\"_v0d_wKx1EeCTXoYQNfqU0w _WoNysKx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\">\n              <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ANAGYEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU5ax1EeCTXoYQNfqU0w\"/>\n            </relations>\n          </refinement>\n        </models>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PZ8Kx1EeCTXoYQNfqU0w\" name=\"DataOut\" ports=\"_F6FrPqx1EeCTXoYQNfqU0w _g6FxgKx9EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AQuv0EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU66x1EeCTXoYQNfqU0w\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:Event\" xmi:id=\"_F6PZ-Kx1EeCTXoYQNfqU0w\" name=\"WrOK\" ports=\"_fKNvUKx9EeCTXoYQNfqU0w _F6FrPax1EeCTXoYQNfqU0w\" setTime=\"0 ns\" getTime=\"0 ns\"/>\n        <relations xsi:type=\"cofluent:SharedVariable\" xmi:id=\"_F6PZ_ax1EeCTXoYQNfqU0w\" name=\"Data\" ports=\"_F6FrPKx1EeCTXoYQNfqU0w\" concurrency=\"1\" writeTime=\"0 ns\" readTime=\"0 ns\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ANmjUEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU56x1EeCTXoYQNfqU0w\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PaA6x1EeCTXoYQNfqU0w\" name=\"DataIn\" ports=\"_dPLmAKx9EeCTXoYQNfqU0w _F6FrP6x1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AN5eQEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU8ax1EeCTXoYQNfqU0w\"/>\n        </relations>\n        <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6PaC6x1EeCTXoYQNfqU0w\" name=\"ReadWrite\" ports=\"_F6FrQKx1EeCTXoYQNfqU0w _afeegKx9EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n          <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_ANTBUEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU46x1EeCTXoYQNfqU0w\"/>\n        </relations>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_F6YnNqx1EeCTXoYQNfqU0w\" name=\"Start\" declarations=\"\" definitions=\"\" initializations=\"\" cyclePeriod=\"10 ns\">\n      <ports xmi:id=\"_F6YnN6x1EeCTXoYQNfqU0w\" name=\"startEv\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_C0oYUbeKEeCzJbK5zrkuJw\" relations=\"_F6YnQqx1EeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_C0oYULeKEeCzJbK5zrkuJw\" name=\"StartBehvBh\" firstStatement=\"_C0oYUbeKEeCzJbK5zrkuJw\" lastStatement=\"_C0oYUbeKEeCzJbK5zrkuJw\">\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_C0oYUbeKEeCzJbK5zrkuJw\" name=\"OutAction\" isFirstOf=\"_C0oYULeKEeCzJbK5zrkuJw\" isLastOf=\"_C0oYULeKEeCzJbK5zrkuJw\" port=\"_F6YnN6x1EeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6YnJax1EeCTXoYQNfqU0w\" name=\"BaseBand_Out\" ports=\"_F6Fojqx1EeCTXoYQNfqU0w _LUusQKx1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AKngwEwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU36x1EeCTXoYQNfqU0w\"/>\n    </relations>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_F6YnQqx1EeCTXoYQNfqU0w\" name=\"startEv\" ports=\"_F6YnN6x1EeCTXoYQNfqU0w _Nyc80Kx-EeCTXoYQNfqU0w\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_F6YnUKx1EeCTXoYQNfqU0w\" name=\"BaseBand_In\" ports=\"_W9L9IKx1EeCTXoYQNfqU0w _F6Fojax1EeCTXoYQNfqU0w\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_AKUl0EwqEeeIMY_7xuCoNQ\" dataType=\"_F6iU36x1EeCTXoYQNfqU0w\"/>\n    </relations>\n  </refinement>\n</cofluent:Application>\n",
    "Please act as a CoFLuent Code tree structure extractor. Please extract the tree structure of the following CoFluent model and the result is in json format: \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cofluent:Application xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cofluent=\"http://cofluent.intel.com/cofluent/1.0.0\" xmi:id=\"_Q9uUEKyAEeCTXoYQNfqU0w\" name=\"OPP_UseCase\" constructor=\"\" includes=\"\" postSimulation=\"//perf result computation&#xD;&#xA;total_time = last_write_time - first_read_time; //in us&#xD;&#xA;average_throughput = 1000000.0 * (double) File_Size * 8.0 / (double) total_time;&#xD;&#xA;cf_trace_gui_f_param(&quot;average_throughput&quot;,average_throughput, &quot;kbits/s&quot;);&#xD;&#xA;&#xD;&#xA;//print out results&#xD;&#xA;if (Verbose_Level != LEVEL_SILENT) {&#xD;&#xA;&#x9;//file level perfs&#xD;&#xA;&#x9;cf_trace_report(&quot;FILE LEVEL:&quot;);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;File size: %d kBytes&quot;, (int)File_Size);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Max file part size: %d Bytes&quot;, (int)OBEX_pl_size);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Number of file parts: %d&quot;, nb_file_parts);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Total time between first read and last write:%d us&quot;,total_time);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Average throughput:%f kbits/s&quot;,&#x9;average_throughput);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Average delay between read and OBEX final packet (acknowledge) reception:%f us&quot;,(double) total_delay_FILE / (double) nb_file_parts);&#xD;&#xA;&#x9;cf_trace_report(&quot;OBEX LEVEL:&quot;);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Maximum frame size:%d Bytes&quot;,(int)OBEX_pl_size + OBEX_HDR_S);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Number of data frames: %d&quot;, nb_OBEX_df);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Average delay between data frame send and receive:%f us&quot;,(double) total_delay_OBEX / (double) nb_OBEX_df);&#xD;&#xA;&#x9;cf_trace_report(&quot;RFCOMM LEVEL:&quot;);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Maximum frame size:%d Bytes&quot;,(int)RFCOMM_pl_size + RFCOMM_HDR_S);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Number of data frames:%d&quot;, nb_RFCOMM_df);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Average delay between data frame send and receive:%f us&quot;,(double) total_delay_RFCOMM / (double) nb_RFCOMM_df);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Number of credits:%d&quot;, (int)RFCOMM_credits);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Number of credit requests:%d&quot;, nb_cdts_req);&#xD;&#xA;&#x9;cf_trace_report(&quot;L2CAP LEVEL:&quot;);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Maximum frame size:%d Bytes&quot;,(int)RFCOMM_pl_size + RFCOMM_HDR_S + L2CAP_HDR_S);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Number of data frames:%d&quot;, nb_RFCOMM_df);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Total amount of data exchanged:%d Bytes&quot;,total_L2CAP_data);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;--> Average load:%f kbits/s&quot;,8000.0 * (float) total_L2CAP_data / (float) total_time);&#xD;&#xA;&#x9;cf_trace_report(&quot;BASEBAND LEVEL:&quot;);&#xD;&#xA;&#x9;cf_trace_report(&quot;&#x9;Average throughput:%d kbits/s&quot;, (int) Throughput_BaseBand);&#xD;&#xA;}\" version=\"4.0.0\" declarations=\"\" definitions=\"\" preElaboration=\"\" initializations=\"\" cyclePeriod=\"10 ns\" postElaboration=\"nb_file_parts = 0;&#xD;&#xA;nb_OBEX_df = 0;&#xD;&#xA;nb_RFCOMM_df = 0;&#xD;&#xA;total_delay_FILE = 0;&#xD;&#xA;total_delay_OBEX = 0;&#xD;&#xA;total_delay_RFCOMM = 0;&#xD;&#xA;nb_cdts_req = 0;&#xD;&#xA;total_L2CAP_data = 0;\" globalTypeDeclarations=\"//Packet level&#xD;&#xA;#define FILE_PART 0x00&#xD;&#xA;#define OBEX 0x01&#xD;&#xA;#define RFCOMM 0x02&#xD;&#xA;#define L2CAP 0x03&#xD;&#xA;#define BASEBAND 0x04&#xD;&#xA;//Header sizes&#xD;&#xA;#define OBEX_HDR_S 3&#xD;&#xA;#define RFCOMM_HDR_S 5&#xD;&#xA;#define L2CAP_HDR_S 4&#xD;&#xA;//OBEX packet type&#xD;&#xA;#define PUT 0x01&#xD;&#xA;#define FINAL 0x02&#xD;&#xA;//RFCOMM packet type&#xD;&#xA;#define DATA 0x01&#xD;&#xA;#define DATA_END 0x02&#xD;&#xA;#define CREDITS 0x03&#xD;&#xA;&#xD;&#xA;/*** TYPE DEFINITIONS ***/&#xD;&#xA;//DefOrder&#xD;&#xA;enum DefOrderType{read_order,write_order};&#xD;&#xA;struct DefOrder{&#xD;&#xA;&#x9;DefOrderType order_type;&#xD;&#xA;&#x9;int size;&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;//DefFile&#xD;&#xA;struct DefFile{&#xD;&#xA;&#x9;int file_size;&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;//DefFrame is an abstract structure to describe Bluetooth frame&#xD;&#xA;//at any protocol layer&#xD;&#xA;struct DefFrame{&#xD;&#xA;&#x9;int total_frame_size; //USERDATASIZE&#xD;&#xA;&#x9;int header_size;&#xD;&#xA;&#x9;int payload_size;&#xD;&#xA;&#x9;int FILE_timestamp; //in us&#xD;&#xA;&#x9;int OBEX_timestamp; //in us&#xD;&#xA;&#x9;int RFCOMM_timestamp; //in us&#xD;&#xA;&#x9;unsigned char packet_type;&#xD;&#xA;&#x9;unsigned char OBEX_type; //put or final/continue packet&#xD;&#xA;&#x9;unsigned char RFCOMM_type; //data, data final, or credits&#xD;&#xA;};&#xD;&#xA;\" globalDeclarations=\"/*** Variables for perf monitoring ***/&#xD;&#xA;extern int first_read_time; //in us&#xD;&#xA;extern int last_write_time; //in us&#xD;&#xA;extern int nb_file_parts;&#xD;&#xA;extern int nb_OBEX_df;&#xD;&#xA;extern int nb_RFCOMM_df;&#xD;&#xA;extern int total_delay_FILE;//in us&#xD;&#xA;extern int total_delay_OBEX;//in us&#xD;&#xA;extern int total_delay_RFCOMM;//in us&#xD;&#xA;extern int nb_cdts_req;&#xD;&#xA;extern int total_L2CAP_data;&#xD;&#xA;&#xD;&#xA;/*** Variables for perf results ***/&#xD;&#xA;extern int total_time; //in us&#xD;&#xA;extern double average_throughput; //in kpbs\" globalDefinitions=\"/*** Variables for perf monitoring ***/&#xD;&#xA;int first_read_time; //in us&#xD;&#xA;int last_write_time; //in us&#xD;&#xA;int nb_file_parts;&#xD;&#xA;int nb_OBEX_df;&#xD;&#xA;int nb_RFCOMM_df;&#xD;&#xA;int total_delay_FILE;//in us&#xD;&#xA;int total_delay_OBEX;//in us&#xD;&#xA;int total_delay_RFCOMM;//in us&#xD;&#xA;int nb_cdts_req;&#xD;&#xA;int total_L2CAP_data;&#xD;&#xA;&#xD;&#xA;/*** Variables for perf results ***/&#xD;&#xA;int total_time; //in us&#xD;&#xA;double average_throughput; //in kpbs\">\n  <annotations xmi:id=\"_Q9uUEayAEeCTXoYQNfqU0w\" source=\"codegen\">\n    <details xmi:id=\"_Q9uUEqyAEeCTXoYQNfqU0w\" key=\"path\" value=\"OPP_UseCase/gen-sysc\"/>\n    <details xmi:id=\"_fbnYoNHfEeKfVr7lPYx6WA\" key=\"com.cofluent.studio.codegen.systemc.path\" value=\"gen-sysc\"/>\n    <details xmi:id=\"_fbnYodHfEeKfVr7lPYx6WA\" key=\"com.cofluent.studio.docgen.docx.path\" value=\"gen-doc\"/>\n  </annotations>\n  <annotations xmi:id=\"_Q9uUE6yAEeCTXoYQNfqU0w\" source=\"build\">\n    <details xmi:id=\"_Q9uUFKyAEeCTXoYQNfqU0w\" key=\"path\" value=\"release\"/>\n  </annotations>\n  <annotations xmi:id=\"_QIT1YKyIEeCTXoYQNfqU0w\" source=\"cdt.configurations\">\n    <details xmi:id=\"_wdInEE9REeePwKupi-tXvA\" key=\"cofluent.managedbuild.config.gnu.mingw.exe.release.1107473608\" value=\"cdt.configuration.active\"/>\n    <details xmi:id=\"_96SbAGCwEeeHhIqtsuzqYQ\" key=\"cofluent.managedbuild.config.suse.gnu.gcc.exe.release.1875143568\"/>\n  </annotations>\n  <designParameters xsi:type=\"cofluent:EnumerationParameter\" xmi:id=\"_fzuwcLeAEeCzJbK5zrkuJw\" name=\"Verbose_Level\" documentation=\"Textual output monitoring level\" default=\"LEVEL_RESULTS\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"LEVEL_RESULTS\">\n    <values>LEVEL_SILENT</values>\n    <values>LEVEL_RESULTS</values>\n    <values>LEVEL_FS</values>\n    <values>LEVEL_OBEX</values>\n    <values>LEVEL_RFCOMM</values>\n  </designParameters>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_VpIV8LeGEeCzJbK5zrkuJw\" name=\"File_Size\" documentation=\"Size of the file to exchange\" default=\"500\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"500\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"10\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_k4fcELeGEeCzJbK5zrkuJw\" name=\"OBEX_pl_size\" documentation=\"OBEX payload size\" default=\"65532\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"16389\" type=\"INTEGER\" min=\"1\" max=\"65532\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_371KILeGEeCzJbK5zrkuJw\" name=\"RFCOMM_pl_size\" documentation=\"RFCOMM payload size\" default=\"65530\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"16384\" type=\"INTEGER\" min=\"1\" max=\"65530\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_QkrvMLeHEeCzJbK5zrkuJw\" name=\"RFCOMM_credits\" documentation=\"Amount of credits for RFCOMM frames\" default=\"5\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"4\" type=\"INTEGER\" min=\"1\" max=\"100\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_cyfI0LeHEeCzJbK5zrkuJw\" name=\"Throughput_BaseBand\" documentation=\"Average throughput at baseband level\" default=\"2178\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"2178\" type=\"INTEGER\" min=\"0\" max=\"2178\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_m-WxoMcREeOa99aOWsurSA\" name=\"RFCOMM_SendFrameTime\" documentation=\"Send frame execution time at RFCOMM level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_zk40UMcREeOa99aOWsurSA\" name=\"RFCOMM_ReceiveFrameTime\" documentation=\"Receive frame execution time at RFCOMM level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_zk9FwMcREeOa99aOWsurSA\" name=\"RFCOMM_recredits_delay\" documentation=\"Delay before giving peer credits when 0\" default=\"1000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"10\" type=\"INTEGER\" min=\"0\" max=\"50000\" step=\"10\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_92uQgMcREeOa99aOWsurSA\" name=\"OBEX_ReceiveFrameTime\" documentation=\"Receive frame execution time at OBEX level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_92x64McREeOa99aOWsurSA\" name=\"OBEX_SendFrameTime\" documentation=\"Send frame execution time at OBEX level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_AuEREMcSEeOa99aOWsurSA\" name=\"L2CAP_ReceiveFrameTime\" documentation=\"Receive frame execution time at L2CAP level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_AuH7cMcSEeOa99aOWsurSA\" name=\"L2CAP_SendFrameTime\" documentation=\"Send frame execution time at L2CAP level\" default=\"0.0\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"200\" internalUnit=\"US\" type=\"DECIMAL\" min=\"0.0\" max=\"10000.0\" step=\"1.0\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_RrKD4M7fEeOU1IpJU8SirA\" name=\"FS_read_throughput\" documentation=\"File system read throughput\" default=\"5000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"100000\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"1\"/>\n  <designParameters xsi:type=\"cofluent:RangeParameter\" xmi:id=\"_RrL5EM7fEeOU1IpJU8SirA\" name=\"FS_write_throughput\" documentation=\"File system write throughput\" default=\"5000\" visibility=\"PUBLIC\" accessRight=\"READ_ONLY\" value=\"100000\" type=\"INTEGER\" min=\"0\" max=\"100000\" step=\"1\"/>\n  <refinement xsi:type=\"cofluent:Structure\" xmi:id=\"_Q9uUF6yAEeCTXoYQNfqU0w\" name=\"OPP_UseCaseStructSt\">\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_VtX6EKyAEeCTXoYQNfqU0w\" name=\"StartFunc\" declarations=\"\" cyclePeriod=\" ns\" affinity=\"\" priority=\"\" staticCodeSize=\" b\" staticDataSize=\" b\" staticPowerConsumption=\" nW\" dynamicPowerConsumption=\" nW\" cost=\" EUR\" dynamicResourceLoad=\"\">\n      <ports xmi:id=\"_h_DHEKyAEeCTXoYQNfqU0w\" name=\"StartEv\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_ELoykKyJEeCCAtvoKHIwPQ\" relations=\"_XkZGEKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_ELfBkKyJEeCCAtvoKHIwPQ\" name=\"StartFuncBehvBh\" firstStatement=\"_ELoykKyJEeCCAtvoKHIwPQ\" lastStatement=\"_ELoykKyJEeCCAtvoKHIwPQ\">\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_ELoykKyJEeCCAtvoKHIwPQ\" name=\"OutAction\" isFirstOf=\"_ELfBkKyJEeCCAtvoKHIwPQ\" isLastOf=\"_ELfBkKyJEeCCAtvoKHIwPQ\" port=\"_h_DHEKyAEeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"1\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_WaTRgKyAEeCTXoYQNfqU0w\" name=\"UnusedFunc\" declarations=\"\" cyclePeriod=\" ns\">\n      <ports xmi:id=\"_iQv7EKyAEeCTXoYQNfqU0w\" name=\"UnusedEv\" type=\"EVENT\" direction=\"OUT\" outputActions=\"_uNt6oEExEeGlT6S6zoxWXw\" relations=\"_Yk0BQKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\"/>\n      <refinement xsi:type=\"cofluent:Behavior\" xmi:id=\"_r9F70UExEeGlT6S6zoxWXw\" name=\"UnusedFuncBehvBh\" firstStatement=\"_r9eWUEExEeGlT6S6zoxWXw\" lastStatement=\"_uNt6oEExEeGlT6S6zoxWXw\">\n        <statements xsi:type=\"cofluent:Operation\" xmi:id=\"_r9eWUEExEeGlT6S6zoxWXw\" name=\"Wait\" isFirstOf=\"_r9F70UExEeGlT6S6zoxWXw\" next=\"_uNt6oEExEeGlT6S6zoxWXw\" executionTime=\"10 d\" systematicRead=\"true\" systematicWrite=\"true\" dynamicDataSize=\" b\" dynamicPowerConsumption=\" nW\" dynamicResourceLoad=\"\"/>\n        <statements xsi:type=\"cofluent:OutputAction\" xmi:id=\"_uNt6oEExEeGlT6S6zoxWXw\" name=\"OutAction\" isLastOf=\"_r9F70UExEeGlT6S6zoxWXw\" previous=\"_r9eWUEExEeGlT6S6zoxWXw\" port=\"_iQv7EKyAEeCTXoYQNfqU0w\" duration=\" ns\" condition=\"\" priority=\"\" vectorSize=\"\" blocking=\"true\"/>\n      </refinement>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_DSRAcKn4EeO7XIyg--LdSg\" name=\"Master\" cyclePeriod=\" ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_DSRAcan4EeO7XIyg--LdSg\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_d2YBgKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_LUusQKx1EeCTXoYQNfqU0w\"/>\n      </ports>\n      <ports xmi:id=\"_DSRAcqn4EeO7XIyg--LdSg\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_fF-BIKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_W9L9IKx1EeCTXoYQNfqU0w\"/>\n      </ports>\n      <ports xmi:id=\"_DSRAc6n4EeO7XIyg--LdSg\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" relations=\"_XkZGEKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_Nyc80Kx-EeCTXoYQNfqU0w\"/>\n      </ports>\n      <reuse xsi:type=\"cofluent:Function\" href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_F6FrA6x1EeCTXoYQNfqU0w\"/>\n    </models>\n    <models xsi:type=\"cofluent:Function\" xmi:id=\"_GCUGOKn4EeO7XIyg--LdSg\" name=\"Slave\" cyclePeriod=\" ns\" priority=\"1\" staticCodeSize=\"0 kB\" staticDataSize=\"0 kB\" staticPowerConsumption=\"0 uW\" dynamicPowerConsumption=\"0 uW\" cost=\"0 USD\" dynamicResourceLoad=\"100\">\n      <ports xmi:id=\"_GCUGOan4EeO7XIyg--LdSg\" name=\"BaseBand_Out\" type=\"MESSAGE_QUEUE\" direction=\"OUT\" relations=\"_fF-BIKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_GAfhQKn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_LUusQKx1EeCTXoYQNfqU0w\"/>\n      </ports>\n      <ports xmi:id=\"_GCUGOqn4EeO7XIyg--LdSg\" name=\"BaseBand_In\" type=\"MESSAGE_QUEUE\" direction=\"IN\" relations=\"_d2YBgKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_GAfhQKn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_W9L9IKx1EeCTXoYQNfqU0w\"/>\n      </ports>\n      <ports xmi:id=\"_GCUGO6n4EeO7XIyg--LdSg\" name=\"startEv\" type=\"EVENT\" direction=\"IN\" relations=\"_Yk0BQKyAEeCTXoYQNfqU0w\" synchronizeName=\"true\" vector=\"true\">\n        <reuse href=\"reuse://_GAfhQKn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_Nyc80Kx-EeCTXoYQNfqU0w\"/>\n      </ports>\n      <reuse xsi:type=\"cofluent:Function\" href=\"reuse://_GAfhQKn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_F6FrA6x1EeCTXoYQNfqU0w\"/>\n    </models>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_XkZGEKyAEeCTXoYQNfqU0w\" name=\"StartEv\" ports=\"_DSRAc6n4EeO7XIyg--LdSg _h_DHEKyAEeCTXoYQNfqU0w\" setTime=\"1 ns\" getTime=\"0 ns\"/>\n    <relations xsi:type=\"cofluent:Event\" xmi:id=\"_Yk0BQKyAEeCTXoYQNfqU0w\" name=\"UnusedEv\" ports=\"_iQv7EKyAEeCTXoYQNfqU0w _GCUGO6n4EeO7XIyg--LdSg\" setTime=\"1 ns\" getTime=\"1 ns\"/>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_d2YBgKyAEeCTXoYQNfqU0w\" name=\"M2S\" ports=\"_GCUGOqn4EeO7XIyg--LdSg _DSRAcan4EeO7XIyg--LdSg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\" mask=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_B3QBsUwqEeeIMY_7xuCoNQ\">\n        <dataType href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_F6iU36x1EeCTXoYQNfqU0w\"/>\n      </relationType>\n    </relations>\n    <relations xsi:type=\"cofluent:MessageQueue\" xmi:id=\"_fF-BIKyAEeCTXoYQNfqU0w\" name=\"S2M\" ports=\"_DSRAcqn4EeO7XIyg--LdSg _GCUGOan4EeO7XIyg--LdSg\" capacity=\"1\" concurrency=\"1\" concurrencyManagement=\"FULL\" sendTime=\"0 ns\" receiveTime=\"0 ns\" sendThreshold=\"\" receiveThreshold=\"\" address=\"\">\n      <relationType xsi:type=\"cofluent:RelationDataType\" xmi:id=\"_B3QBsEwqEeeIMY_7xuCoNQ\">\n        <dataType href=\"reuse://_DPup0Kn4EeO7XIyg--LdSg/BluetoothOpp/BluetoothStack/BluetoothStack.cf_app#_F6iU36x1EeCTXoYQNfqU0w\"/>\n      </relationType>\n    </relations>\n  </refinement>\n</cofluent:Application>\n"
]