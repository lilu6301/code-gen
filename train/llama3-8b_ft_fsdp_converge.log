[W217 03:00:34.911374498 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/transformers/training_args.py:1525: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead
  warnings.warn(
[W217 03:00:38.860653096 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.991575040 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.991574821 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.991686748 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.005327421 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.005410854 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.010416336 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
[W217 03:00:38.015330330 OperatorEntry.cpp:155] Warning: Warning only once for all operators,  other operators may also be overridden.
  Overriding a previously registered kernel for the same operator and the same dispatch key
  operator: aten::_cummax_helper(Tensor self, Tensor(a!) values, Tensor(b!) indices, int dim) -> ()
    registered at /root/pytorch/build/aten/src/ATen/RegisterSchema.cpp:6
  dispatch key: XPU
  previous kernel: registered at /root/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30476
       new kernel: registered at /root/intel-extension-for-pytorch/build/Release/csrc/gpu/csrc/aten/generated/ATen/RegisterXPU.cpp:2971 (function operator())
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  5.35it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  4.91it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  6.16it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  5.43it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  5.40it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  5.55it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  4.53it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.63it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.40it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  5.93it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  5.75it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.55it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.48it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.16it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.03it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.21it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.07it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.30it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  6.17it/s]
Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  5.93it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  5.66it/s]
WARNING:root:Loading data...
WARNING:root:Loading data...
WARNING:root:Loading data...
WARNING:root:Loading data...
WARNING:root:Loading data...
WARNING:root:Loading data...
WARNING:root:Formatting inputs...
WARNING:root:Formatting inputs...
WARNING:root:Formatting inputs...
WARNING:root:Formatting inputs...
WARNING:root:Formatting inputs...
WARNING:root:Tokenizing inputs... This may take some time...
WARNING:root:Loading data...
WARNING:root:Formatting inputs...

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>
WARNING:root:Tokenizing inputs... This may take some time...
WARNING:root:Tokenizing inputs... This may take some time...
WARNING:root:Tokenizing inputs... This may take some time...
WARNING:root:Tokenizing inputs... This may take some time...
WARNING:root:Tokenizing inputs... This may take some time...

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>
WARNING:root:Formatting inputs...
WARNING:root:Tokenizing inputs... This may take some time...

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>
Loading checkpoint shards:  50%|█████     | 1/2 [00:07<00:07,  7.03s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:10<00:00,  4.70s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:10<00:00,  5.05s/it]
WARNING:root:Loading data...
WARNING:root:Formatting inputs...
WARNING:root:Tokenizing inputs... This may take some time...

You are tasked with designing a module for a simple calculator that can perform basic arithmetic operations. The module should have two inputs, `a` and `b`, and four outputs, `add`, `sub`, `mul`, and `div`. The module should be able to perform the following operations:
- `add`: add `a` and `b` and output the result
- `sub`: subtract `b` from `a` and output the result
- `mul`: multiply `a` and `b` and output the result
- `div`: divide `a` by `b` and output the result

If `b` is zero, the `div` output should be zero. The module should also have a reset input, `reset_n`, which should reset all outputs to zero when active low.


module calculator(
    input logic [31:0] a,
    input logic [31:0] b,
    input logic reset_n,
    output logic [31:0] add,
    output logic [31:0] sub,
    output logic [31:0] mul,
    output logic [31:0] div
);

    always @(a, b, reset_n) begin
        if(!reset_n) begin
            add <= 0;
            sub <= 0;
            mul <= 0;
            div <= 0;
        end else begin
            add <= a + b;
            sub <= a - b;
            mul <= a * b;
            if(b != 0) begin
                div <= a / b;
            end else begin
                div <= 0;
            end
        end
    end

endmodule</s>
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
smart token
2025:02:17-03:01:51:(17991) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:51:(17992) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:52:(17989) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:52:(17993) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:52:(17988) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:52:(17990) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:01:52:(17994) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
smart token
2025:02:17-03:02:01:(17987) |CCL_WARN| did not find MPI-launcher specific variables, switch to ATL/OFI, to force enable ATL/MPI set CCL_ATL_TRANSPORT=mpi
2025:02:17-03:02:01:(17987) |CCL_WARN| value of CCL_LOCAL_RANK changed to be 0 (default:-1)
2025:02:17-03:02:01:(17987) |CCL_WARN| value of CCL_LOCAL_SIZE changed to be 8 (default:-1)
2025:02:17-03:02:01:(17987) |CCL_WARN| value of CCL_PROCESS_LAUNCHER changed to be none (default:hydra)
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:02:03:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
wandb: WARNING The `run_name` is currently set to the same value as `TrainingArguments.output_dir`. If this was not intended, please specify a different run name by setting the `TrainingArguments.run_name` parameter.
wandb: Currently logged in as: lilu630 (lilu630-intel). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.5
wandb: Run data is saved locally in /root/llm/fine-tuning/RTL-Coder/train/wandb/run-20250217_030303-d9updj7p
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run output
wandb: ⭐️ View project at https://wandb.ai/lilu630-intel/huggingface
wandb: 🚀 View run at https://wandb.ai/lilu630-intel/huggingface/runs/d9updj7p
  0%|          | 0/312 [00:00<?, ?it/s]2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17988) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17990) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17994) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17991) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17993) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17992) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17989) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:05:(17987) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18348) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18317) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18366) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18395) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18335) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices


2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18434) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices

2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18384) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
2025:02:17-03:03:43:(18417) |CCL_WARN| topology recognition shows PCIe connection between devices. If this is not correct, you can disable topology recognition, with CCL_TOPO_FABRIC_VERTEX_CONNECTION_CHECK=0. This will assume XeLinks across devices
  0%|          | 1/312 [01:05<5:37:38, 65.14s/it]                                                 {'loss': 0.3647, 'grad_norm': 9.63831901550293, 'learning_rate': 9.967948717948719e-06, 'epoch': 0.01}
  0%|          | 1/312 [01:05<5:37:38, 65.14s/it]  1%|          | 2/312 [02:04<5:20:10, 61.97s/it]                                                 {'loss': 3.3735, 'grad_norm': 507.5049133300781, 'learning_rate': 9.935897435897437e-06, 'epoch': 0.02}
  1%|          | 2/312 [02:04<5:20:10, 61.97s/it]  1%|          | 3/312 [03:04<5:13:29, 60.87s/it]                                                 {'loss': 1.8632, 'grad_norm': 367.15814208984375, 'learning_rate': 9.903846153846155e-06, 'epoch': 0.03}
  1%|          | 3/312 [03:04<5:13:29, 60.87s/it]  1%|▏         | 4/312 [04:04<5:09:59, 60.39s/it]                                                 {'loss': 1.7302, 'grad_norm': 749.670166015625, 'learning_rate': 9.871794871794872e-06, 'epoch': 0.04}
  1%|▏         | 4/312 [04:04<5:09:59, 60.39s/it]  2%|▏         | 5/312 [05:03<5:07:50, 60.17s/it]                                                 {'loss': 2.1344, 'grad_norm': 275.718994140625, 'learning_rate': 9.83974358974359e-06, 'epoch': 0.05}
  2%|▏         | 5/312 [05:03<5:07:50, 60.17s/it]  2%|▏         | 6/312 [06:03<5:05:59, 60.00s/it]                                                 {'loss': 2.9386, 'grad_norm': 630.309814453125, 'learning_rate': 9.807692307692308e-06, 'epoch': 0.06}
  2%|▏         | 6/312 [06:03<5:05:59, 60.00s/it]  2%|▏         | 7/312 [07:03<5:04:26, 59.89s/it]                                                 {'loss': 1.1896, 'grad_norm': 208.16172790527344, 'learning_rate': 9.775641025641026e-06, 'epoch': 0.07}
  2%|▏         | 7/312 [07:03<5:04:26, 59.89s/it]  3%|▎         | 8/312 [08:03<5:03:24, 59.88s/it]                                                 {'loss': 0.8929, 'grad_norm': 39.42893600463867, 'learning_rate': 9.743589743589744e-06, 'epoch': 0.08}
  3%|▎         | 8/312 [08:03<5:03:24, 59.88s/it]  3%|▎         | 9/312 [09:02<5:02:20, 59.87s/it]                                                 {'loss': 0.6999, 'grad_norm': 17.59614372253418, 'learning_rate': 9.711538461538462e-06, 'epoch': 0.09}
  3%|▎         | 9/312 [09:03<5:02:20, 59.87s/it]  3%|▎         | 10/312 [10:02<5:01:08, 59.83s/it]                                                  {'loss': 0.5476, 'grad_norm': 25.137561798095703, 'learning_rate': 9.67948717948718e-06, 'epoch': 0.1}
  3%|▎         | 10/312 [10:02<5:01:08, 59.83s/it]  4%|▎         | 11/312 [11:02<5:00:03, 59.81s/it]                                                  {'loss': 0.4974, 'grad_norm': 17.63416290283203, 'learning_rate': 9.647435897435898e-06, 'epoch': 0.11}
  4%|▎         | 11/312 [11:02<5:00:03, 59.81s/it]  4%|▍         | 12/312 [12:02<4:59:07, 59.83s/it]                                                  {'loss': 0.4156, 'grad_norm': 4.965190887451172, 'learning_rate': 9.615384615384616e-06, 'epoch': 0.12}
  4%|▍         | 12/312 [12:02<4:59:07, 59.83s/it]  4%|▍         | 13/312 [13:01<4:57:37, 59.72s/it]                                                  {'loss': 0.4284, 'grad_norm': 11.9591646194458, 'learning_rate': 9.583333333333335e-06, 'epoch': 0.12}
  4%|▍         | 13/312 [13:01<4:57:37, 59.72s/it]  4%|▍         | 14/312 [14:02<4:57:35, 59.92s/it]                                                  {'loss': 0.3835, 'grad_norm': 4.856524467468262, 'learning_rate': 9.551282051282053e-06, 'epoch': 0.13}
  4%|▍         | 14/312 [14:02<4:57:35, 59.92s/it]  5%|▍         | 15/312 [15:02<4:57:09, 60.03s/it]                                                  {'loss': 0.3783, 'grad_norm': 4.106727123260498, 'learning_rate': 9.51923076923077e-06, 'epoch': 0.14}
  5%|▍         | 15/312 [15:02<4:57:09, 60.03s/it]  5%|▌         | 16/312 [16:02<4:56:23, 60.08s/it]                                                  {'loss': 0.3585, 'grad_norm': 3.1032092571258545, 'learning_rate': 9.487179487179487e-06, 'epoch': 0.15}
  5%|▌         | 16/312 [16:02<4:56:23, 60.08s/it]  5%|▌         | 17/312 [17:02<4:55:19, 60.07s/it]                                                  {'loss': 0.3043, 'grad_norm': 3.1260323524475098, 'learning_rate': 9.455128205128205e-06, 'epoch': 0.16}
  5%|▌         | 17/312 [17:02<4:55:19, 60.07s/it]  6%|▌         | 18/312 [18:02<4:54:30, 60.10s/it]                                                  {'loss': 0.2867, 'grad_norm': 2.4972362518310547, 'learning_rate': 9.423076923076923e-06, 'epoch': 0.17}
  6%|▌         | 18/312 [18:02<4:54:30, 60.10s/it]  6%|▌         | 19/312 [19:03<4:53:47, 60.16s/it]                                                  {'loss': 0.3323, 'grad_norm': 2.694187879562378, 'learning_rate': 9.391025641025641e-06, 'epoch': 0.18}
  6%|▌         | 19/312 [19:03<4:53:47, 60.16s/it]  6%|▋         | 20/312 [20:03<4:52:52, 60.18s/it]                                                  {'loss': 0.2799, 'grad_norm': 2.1809873580932617, 'learning_rate': 9.358974358974359e-06, 'epoch': 0.19}
  6%|▋         | 20/312 [20:03<4:52:52, 60.18s/it]  7%|▋         | 21/312 [21:03<4:51:53, 60.18s/it]                                                  {'loss': 0.2668, 'grad_norm': 2.2801949977874756, 'learning_rate': 9.326923076923079e-06, 'epoch': 0.2}
  7%|▋         | 21/312 [21:03<4:51:53, 60.18s/it]  7%|▋         | 22/312 [22:03<4:51:05, 60.23s/it]                                                  {'loss': 0.2863, 'grad_norm': 2.076413869857788, 'learning_rate': 9.294871794871796e-06, 'epoch': 0.21}
  7%|▋         | 22/312 [22:03<4:51:05, 60.23s/it]  7%|▋         | 23/312 [23:04<4:49:55, 60.19s/it]                                                  {'loss': 0.2904, 'grad_norm': 1.9510656595230103, 'learning_rate': 9.262820512820514e-06, 'epoch': 0.22}
  7%|▋         | 23/312 [23:04<4:49:55, 60.19s/it]  8%|▊         | 24/312 [24:04<4:49:09, 60.24s/it]                                                  {'loss': 0.2942, 'grad_norm': 1.9867682456970215, 'learning_rate': 9.230769230769232e-06, 'epoch': 0.23}
  8%|▊         | 24/312 [24:04<4:49:09, 60.24s/it]  8%|▊         | 25/312 [25:04<4:47:35, 60.12s/it]                                                  {'loss': 0.2927, 'grad_norm': 2.094604015350342, 'learning_rate': 9.198717948717949e-06, 'epoch': 0.24}
  8%|▊         | 25/312 [25:04<4:47:35, 60.12s/it]  8%|▊         | 26/312 [26:04<4:46:13, 60.05s/it]                                                  {'loss': 0.2528, 'grad_norm': 1.88753342628479, 'learning_rate': 9.166666666666666e-06, 'epoch': 0.25}
  8%|▊         | 26/312 [26:04<4:46:13, 60.05s/it]  9%|▊         | 27/312 [27:03<4:44:50, 59.97s/it]                                                  {'loss': 0.2585, 'grad_norm': 1.9131981134414673, 'learning_rate': 9.134615384615384e-06, 'epoch': 0.26}
  9%|▊         | 27/312 [27:03<4:44:50, 59.97s/it]  9%|▉         | 28/312 [28:04<4:44:10, 60.04s/it]                                                  {'loss': 0.2539, 'grad_norm': 1.9224344491958618, 'learning_rate': 9.102564102564104e-06, 'epoch': 0.27}
  9%|▉         | 28/312 [28:04<4:44:10, 60.04s/it]  9%|▉         | 29/312 [29:04<4:43:01, 60.01s/it]                                                  {'loss': 0.2545, 'grad_norm': 1.7857240438461304, 'learning_rate': 9.070512820512822e-06, 'epoch': 0.28}
  9%|▉         | 29/312 [29:04<4:43:01, 60.01s/it] 10%|▉         | 30/312 [30:03<4:41:52, 59.97s/it]                                                  {'loss': 0.2626, 'grad_norm': 1.8709534406661987, 'learning_rate': 9.03846153846154e-06, 'epoch': 0.29}
 10%|▉         | 30/312 [30:03<4:41:52, 59.97s/it] 10%|▉         | 31/312 [31:03<4:40:49, 59.96s/it]                                                  {'loss': 0.2346, 'grad_norm': 1.7933050394058228, 'learning_rate': 9.006410256410258e-06, 'epoch': 0.3}
 10%|▉         | 31/312 [31:03<4:40:49, 59.96s/it] 10%|█         | 32/312 [32:03<4:39:02, 59.80s/it]                                                  {'loss': 0.2334, 'grad_norm': 1.6999036073684692, 'learning_rate': 8.974358974358976e-06, 'epoch': 0.31}
 10%|█         | 32/312 [32:03<4:39:02, 59.80s/it] 11%|█         | 33/312 [33:03<4:38:24, 59.87s/it]                                                  {'loss': 0.2497, 'grad_norm': 1.6837375164031982, 'learning_rate': 8.942307692307693e-06, 'epoch': 0.32}
 11%|█         | 33/312 [33:03<4:38:24, 59.87s/it] 11%|█         | 34/312 [34:03<4:37:44, 59.95s/it]                                                  {'loss': 0.2658, 'grad_norm': 2.448906898498535, 'learning_rate': 8.910256410256411e-06, 'epoch': 0.33}
 11%|█         | 34/312 [34:03<4:37:44, 59.95s/it] 11%|█         | 35/312 [35:03<4:36:39, 59.93s/it]                                                  {'loss': 0.2543, 'grad_norm': 1.8695334196090698, 'learning_rate': 8.87820512820513e-06, 'epoch': 0.34}
 11%|█         | 35/312 [35:03<4:36:39, 59.93s/it] 12%|█▏        | 36/312 [36:03<4:35:41, 59.93s/it]                                                  {'loss': 0.2283, 'grad_norm': 1.5303527116775513, 'learning_rate': 8.846153846153847e-06, 'epoch': 0.35}
 12%|█▏        | 36/312 [36:03<4:35:41, 59.93s/it] 12%|█▏        | 37/312 [37:03<4:34:41, 59.93s/it]                                                  {'loss': 0.2238, 'grad_norm': 1.6987041234970093, 'learning_rate': 8.814102564102565e-06, 'epoch': 0.36}
 12%|█▏        | 37/312 [37:03<4:34:41, 59.93s/it] 12%|█▏        | 38/312 [38:03<4:33:54, 59.98s/it]                                                  {'loss': 0.2519, 'grad_norm': 1.6039831638336182, 'learning_rate': 8.782051282051283e-06, 'epoch': 0.37}
 12%|█▏        | 38/312 [38:03<4:33:54, 59.98s/it] 12%|█▎        | 39/312 [39:03<4:32:56, 59.99s/it]                                                  {'loss': 0.2339, 'grad_norm': 1.6212263107299805, 'learning_rate': 8.750000000000001e-06, 'epoch': 0.38}
 12%|█▎        | 39/312 [39:03<4:32:56, 59.99s/it] 13%|█▎        | 40/312 [40:03<4:31:39, 59.92s/it]                                                  {'loss': 0.2365, 'grad_norm': 1.7356830835342407, 'learning_rate': 8.717948717948719e-06, 'epoch': 0.38}
 13%|█▎        | 40/312 [40:03<4:31:39, 59.92s/it] 13%|█▎        | 41/312 [41:02<4:30:36, 59.91s/it]                                                  {'loss': 0.2319, 'grad_norm': 1.5491867065429688, 'learning_rate': 8.685897435897437e-06, 'epoch': 0.39}
 13%|█▎        | 41/312 [41:03<4:30:36, 59.91s/it] 13%|█▎        | 42/312 [42:02<4:29:31, 59.89s/it]                                                  {'loss': 0.2199, 'grad_norm': 1.6207507848739624, 'learning_rate': 8.653846153846155e-06, 'epoch': 0.4}
 13%|█▎        | 42/312 [42:02<4:29:31, 59.89s/it] 14%|█▍        | 43/312 [43:02<4:28:22, 59.86s/it]                                                  {'loss': 0.2565, 'grad_norm': 1.60191011428833, 'learning_rate': 8.621794871794873e-06, 'epoch': 0.41}
 14%|█▍        | 43/312 [43:02<4:28:22, 59.86s/it] 14%|█▍        | 44/312 [44:02<4:27:27, 59.88s/it]                                                  {'loss': 0.2436, 'grad_norm': 1.5707828998565674, 'learning_rate': 8.58974358974359e-06, 'epoch': 0.42}
 14%|█▍        | 44/312 [44:02<4:27:27, 59.88s/it] 14%|█▍        | 45/312 [45:02<4:26:20, 59.85s/it]                                                  {'loss': 0.227, 'grad_norm': 1.5443918704986572, 'learning_rate': 8.557692307692308e-06, 'epoch': 0.43}
 14%|█▍        | 45/312 [45:02<4:26:20, 59.85s/it] 15%|█▍        | 46/312 [46:01<4:25:07, 59.80s/it]                                                  {'loss': 0.2215, 'grad_norm': 1.5581141710281372, 'learning_rate': 8.525641025641026e-06, 'epoch': 0.44}
 15%|█▍        | 46/312 [46:02<4:25:07, 59.80s/it] 15%|█▌        | 47/312 [47:02<4:24:33, 59.90s/it]                                                  {'loss': 0.2399, 'grad_norm': 1.5260883569717407, 'learning_rate': 8.493589743589744e-06, 'epoch': 0.45}
 15%|█▌        | 47/312 [47:02<4:24:33, 59.90s/it] 15%|█▌        | 48/312 [48:01<4:23:33, 59.90s/it]                                                  {'loss': 0.2497, 'grad_norm': 1.500751256942749, 'learning_rate': 8.461538461538462e-06, 'epoch': 0.46}
 15%|█▌        | 48/312 [48:02<4:23:33, 59.90s/it] 16%|█▌        | 49/312 [49:01<4:22:35, 59.91s/it]                                                  {'loss': 0.2074, 'grad_norm': 1.6257809400558472, 'learning_rate': 8.42948717948718e-06, 'epoch': 0.47}
 16%|█▌        | 49/312 [49:01<4:22:35, 59.91s/it] 16%|█▌        | 50/312 [50:01<4:21:24, 59.87s/it]                                                  {'loss': 0.2232, 'grad_norm': 1.5245352983474731, 'learning_rate': 8.397435897435898e-06, 'epoch': 0.48}
 16%|█▌        | 50/312 [50:01<4:21:24, 59.87s/it] 16%|█▋        | 51/312 [51:01<4:20:30, 59.89s/it]                                                  {'loss': 0.2128, 'grad_norm': 1.460900902748108, 'learning_rate': 8.365384615384616e-06, 'epoch': 0.49}
 16%|█▋        | 51/312 [51:01<4:20:30, 59.89s/it] 17%|█▋        | 52/312 [52:01<4:19:30, 59.89s/it]                                                  {'loss': 0.2134, 'grad_norm': 1.5326899290084839, 'learning_rate': 8.333333333333334e-06, 'epoch': 0.5}
 17%|█▋        | 52/312 [52:01<4:19:30, 59.89s/it] 17%|█▋        | 53/312 [53:01<4:18:35, 59.91s/it]                                                  {'loss': 0.2267, 'grad_norm': 1.4497770071029663, 'learning_rate': 8.301282051282052e-06, 'epoch': 0.51}
 17%|█▋        | 53/312 [53:01<4:18:35, 59.91s/it] 17%|█▋        | 54/312 [54:01<4:17:42, 59.93s/it]                                                  {'loss': 0.2414, 'grad_norm': 1.491597294807434, 'learning_rate': 8.26923076923077e-06, 'epoch': 0.52}
 17%|█▋        | 54/312 [54:01<4:17:42, 59.93s/it] 18%|█▊        | 55/312 [55:01<4:16:32, 59.89s/it]                                                  {'loss': 0.199, 'grad_norm': 1.446229100227356, 'learning_rate': 8.237179487179487e-06, 'epoch': 0.53}
 18%|█▊        | 55/312 [55:01<4:16:32, 59.89s/it] 18%|█▊        | 56/312 [56:00<4:15:20, 59.85s/it]                                                  {'loss': 0.225, 'grad_norm': 1.4831420183181763, 'learning_rate': 8.205128205128205e-06, 'epoch': 0.54}
 18%|█▊        | 56/312 [56:01<4:15:20, 59.85s/it] 18%|█▊        | 57/312 [57:00<4:14:31, 59.89s/it]                                                  {'loss': 0.2516, 'grad_norm': 1.4767242670059204, 'learning_rate': 8.173076923076923e-06, 'epoch': 0.55}
 18%|█▊        | 57/312 [57:01<4:14:31, 59.89s/it] 19%|█▊        | 58/312 [58:00<4:13:42, 59.93s/it]                                                  {'loss': 0.2286, 'grad_norm': 1.4355080127716064, 'learning_rate': 8.141025641025641e-06, 'epoch': 0.56}
 19%|█▊        | 58/312 [58:01<4:13:42, 59.93s/it] 19%|█▉        | 59/312 [59:00<4:12:39, 59.92s/it]                                                  {'loss': 0.229, 'grad_norm': 1.5350006818771362, 'learning_rate': 8.108974358974359e-06, 'epoch': 0.57}
 19%|█▉        | 59/312 [59:00<4:12:39, 59.92s/it] 19%|█▉        | 60/312 [1:00:00<4:11:43, 59.93s/it]                                                    {'loss': 0.2318, 'grad_norm': 1.3782367706298828, 'learning_rate': 8.076923076923077e-06, 'epoch': 0.58}
 19%|█▉        | 60/312 [1:00:00<4:11:43, 59.93s/it] 20%|█▉        | 61/312 [1:01:00<4:10:42, 59.93s/it]                                                    {'loss': 0.2241, 'grad_norm': 1.434251308441162, 'learning_rate': 8.044871794871797e-06, 'epoch': 0.59}
 20%|█▉        | 61/312 [1:01:00<4:10:42, 59.93s/it] 20%|█▉        | 62/312 [1:02:00<4:09:53, 59.97s/it]                                                    {'loss': 0.2087, 'grad_norm': 1.3262441158294678, 'learning_rate': 8.012820512820515e-06, 'epoch': 0.6}
 20%|█▉        | 62/312 [1:02:00<4:09:53, 59.97s/it] 20%|██        | 63/312 [1:03:00<4:08:49, 59.96s/it]                                                    {'loss': 0.2298, 'grad_norm': 1.4343208074569702, 'learning_rate': 7.980769230769232e-06, 'epoch': 0.61}
 20%|██        | 63/312 [1:03:00<4:08:49, 59.96s/it] 21%|██        | 64/312 [1:04:00<4:08:03, 60.01s/it]                                                    {'loss': 0.2203, 'grad_norm': 1.399945616722107, 'learning_rate': 7.948717948717949e-06, 'epoch': 0.62}
 21%|██        | 64/312 [1:04:00<4:08:03, 60.01s/it] 21%|██        | 65/312 [1:05:00<4:07:06, 60.03s/it]                                                    {'loss': 0.2278, 'grad_norm': 1.410853624343872, 'learning_rate': 7.916666666666667e-06, 'epoch': 0.62}
 21%|██        | 65/312 [1:05:01<4:07:06, 60.03s/it] 21%|██        | 66/312 [1:06:00<4:05:58, 60.00s/it]                                                    {'loss': 0.2222, 'grad_norm': 1.395814061164856, 'learning_rate': 7.884615384615384e-06, 'epoch': 0.63}
 21%|██        | 66/312 [1:06:00<4:05:58, 60.00s/it] 21%|██▏       | 67/312 [1:07:01<4:05:10, 60.04s/it]                                                    {'loss': 0.2199, 'grad_norm': 1.3858669996261597, 'learning_rate': 7.852564102564102e-06, 'epoch': 0.64}
 21%|██▏       | 67/312 [1:07:01<4:05:10, 60.04s/it] 22%|██▏       | 68/312 [1:08:01<4:04:18, 60.08s/it]                                                    {'loss': 0.218, 'grad_norm': 1.3077833652496338, 'learning_rate': 7.820512820512822e-06, 'epoch': 0.65}
 22%|██▏       | 68/312 [1:08:01<4:04:18, 60.08s/it] 22%|██▏       | 69/312 [1:09:01<4:03:40, 60.17s/it]                                                    {'loss': 0.2426, 'grad_norm': 1.3607181310653687, 'learning_rate': 7.78846153846154e-06, 'epoch': 0.66}
 22%|██▏       | 69/312 [1:09:01<4:03:40, 60.17s/it] 22%|██▏       | 70/312 [1:10:01<4:02:13, 60.06s/it]                                                    {'loss': 0.2221, 'grad_norm': 1.3960407972335815, 'learning_rate': 7.756410256410258e-06, 'epoch': 0.67}
 22%|██▏       | 70/312 [1:10:01<4:02:13, 60.06s/it] 23%|██▎       | 71/312 [1:11:00<4:00:36, 59.90s/it]                                                    {'loss': 0.1848, 'grad_norm': 1.2135947942733765, 'learning_rate': 7.724358974358976e-06, 'epoch': 0.68}
 23%|██▎       | 71/312 [1:11:01<4:00:36, 59.90s/it] 23%|██▎       | 72/312 [1:12:00<3:59:31, 59.88s/it]                                                    {'loss': 0.1976, 'grad_norm': 1.3958284854888916, 'learning_rate': 7.692307692307694e-06, 'epoch': 0.69}
 23%|██▎       | 72/312 [1:12:00<3:59:31, 59.88s/it] 23%|██▎       | 73/312 [1:13:00<3:58:28, 59.87s/it]                                                    {'loss': 0.2623, 'grad_norm': 1.5858081579208374, 'learning_rate': 7.660256410256411e-06, 'epoch': 0.7}
 23%|██▎       | 73/312 [1:13:00<3:58:28, 59.87s/it] 24%|██▎       | 74/312 [1:13:59<3:56:45, 59.69s/it]                                                    {'loss': 0.2129, 'grad_norm': 1.2817795276641846, 'learning_rate': 7.6282051282051286e-06, 'epoch': 0.71}
 24%|██▎       | 74/312 [1:13:59<3:56:45, 59.69s/it] 24%|██▍       | 75/312 [1:14:59<3:55:57, 59.74s/it]                                                    {'loss': 0.2346, 'grad_norm': 1.3099035024642944, 'learning_rate': 7.5961538461538465e-06, 'epoch': 0.72}
 24%|██▍       | 75/312 [1:14:59<3:55:57, 59.74s/it] 24%|██▍       | 76/312 [1:15:59<3:54:49, 59.70s/it]                                                    {'loss': 0.2334, 'grad_norm': 1.5562814474105835, 'learning_rate': 7.564102564102564e-06, 'epoch': 0.73}
 24%|██▍       | 76/312 [1:15:59<3:54:49, 59.70s/it] 25%|██▍       | 77/312 [1:16:59<3:54:15, 59.81s/it]                                                    {'loss': 0.2136, 'grad_norm': 1.3098183870315552, 'learning_rate': 7.532051282051282e-06, 'epoch': 0.74}
 25%|██▍       | 77/312 [1:16:59<3:54:15, 59.81s/it] 25%|██▌       | 78/312 [1:17:59<3:53:17, 59.82s/it]                                                    {'loss': 0.2055, 'grad_norm': 1.3191584348678589, 'learning_rate': 7.500000000000001e-06, 'epoch': 0.75}
 25%|██▌       | 78/312 [1:17:59<3:53:17, 59.82s/it] 25%|██▌       | 79/312 [1:18:59<3:52:29, 59.87s/it]                                                    {'loss': 0.2271, 'grad_norm': 1.2935307025909424, 'learning_rate': 7.467948717948719e-06, 'epoch': 0.76}
 25%|██▌       | 79/312 [1:18:59<3:52:29, 59.87s/it] 26%|██▌       | 80/312 [1:19:59<3:51:26, 59.86s/it]                                                    {'loss': 0.2257, 'grad_norm': 1.6203173398971558, 'learning_rate': 7.435897435897437e-06, 'epoch': 0.77}
 26%|██▌       | 80/312 [1:19:59<3:51:26, 59.86s/it] 26%|██▌       | 81/312 [1:20:58<3:49:49, 59.69s/it]                                                    {'loss': 0.227, 'grad_norm': 1.4382662773132324, 'learning_rate': 7.403846153846155e-06, 'epoch': 0.78}
 26%|██▌       | 81/312 [1:20:58<3:49:49, 59.69s/it] 26%|██▋       | 82/312 [1:21:58<3:48:57, 59.73s/it]                                                    {'loss': 0.1884, 'grad_norm': 1.2214220762252808, 'learning_rate': 7.371794871794873e-06, 'epoch': 0.79}
 26%|██▋       | 82/312 [1:21:58<3:48:57, 59.73s/it] 27%|██▋       | 83/312 [1:22:58<3:48:17, 59.81s/it]                                                    {'loss': 0.2407, 'grad_norm': 1.3210731744766235, 'learning_rate': 7.33974358974359e-06, 'epoch': 0.8}
 27%|██▋       | 83/312 [1:22:58<3:48:17, 59.81s/it] 27%|██▋       | 84/312 [1:23:57<3:47:00, 59.74s/it]                                                    {'loss': 0.2101, 'grad_norm': 1.403565526008606, 'learning_rate': 7.307692307692308e-06, 'epoch': 0.81}
 27%|██▋       | 84/312 [1:23:57<3:47:00, 59.74s/it] 27%|██▋       | 85/312 [1:24:57<3:46:09, 59.78s/it]                                                    {'loss': 0.2353, 'grad_norm': 1.3518459796905518, 'learning_rate': 7.2756410256410255e-06, 'epoch': 0.82}
 27%|██▋       | 85/312 [1:24:57<3:46:09, 59.78s/it] 28%|██▊       | 86/312 [1:25:57<3:45:05, 59.76s/it]                                                    {'loss': 0.2104, 'grad_norm': 1.261536717414856, 'learning_rate': 7.243589743589744e-06, 'epoch': 0.83}
 28%|██▊       | 86/312 [1:25:57<3:45:05, 59.76s/it] 28%|██▊       | 87/312 [1:26:57<3:44:16, 59.81s/it]                                                    {'loss': 0.2203, 'grad_norm': 1.3683500289916992, 'learning_rate': 7.211538461538462e-06, 'epoch': 0.84}
 28%|██▊       | 87/312 [1:26:57<3:44:16, 59.81s/it] 28%|██▊       | 88/312 [1:27:57<3:43:39, 59.91s/it]                                                    {'loss': 0.2083, 'grad_norm': 1.3519524335861206, 'learning_rate': 7.17948717948718e-06, 'epoch': 0.85}
 28%|██▊       | 88/312 [1:27:57<3:43:39, 59.91s/it] 29%|██▊       | 89/312 [1:28:57<3:42:48, 59.95s/it]                                                    {'loss': 0.2268, 'grad_norm': 1.3024617433547974, 'learning_rate': 7.147435897435898e-06, 'epoch': 0.86}
 29%|██▊       | 89/312 [1:28:57<3:42:48, 59.95s/it] 29%|██▉       | 90/312 [1:29:57<3:41:37, 59.90s/it]                                                    {'loss': 0.1965, 'grad_norm': 1.2539962530136108, 'learning_rate': 7.115384615384616e-06, 'epoch': 0.87}
 29%|██▉       | 90/312 [1:29:57<3:41:37, 59.90s/it] 29%|██▉       | 91/312 [1:30:57<3:40:47, 59.94s/it]                                                    {'loss': 0.2056, 'grad_norm': 1.2569739818572998, 'learning_rate': 7.083333333333335e-06, 'epoch': 0.88}
 29%|██▉       | 91/312 [1:30:57<3:40:47, 59.94s/it] 29%|██▉       | 92/312 [1:31:57<3:40:08, 60.04s/it]                                                    {'loss': 0.2085, 'grad_norm': 1.3777703046798706, 'learning_rate': 7.051282051282053e-06, 'epoch': 0.88}
 29%|██▉       | 92/312 [1:31:57<3:40:08, 60.04s/it] 30%|██▉       | 93/312 [1:32:57<3:39:12, 60.06s/it]                                                    {'loss': 0.1836, 'grad_norm': 1.1946735382080078, 'learning_rate': 7.01923076923077e-06, 'epoch': 0.89}
 30%|██▉       | 93/312 [1:32:57<3:39:12, 60.06s/it] 30%|███       | 94/312 [1:33:57<3:38:12, 60.06s/it]                                                    {'loss': 0.2127, 'grad_norm': 1.2849180698394775, 'learning_rate': 6.9871794871794876e-06, 'epoch': 0.9}
 30%|███       | 94/312 [1:33:57<3:38:12, 60.06s/it] 30%|███       | 95/312 [1:34:57<3:37:03, 60.02s/it]                                                    {'loss': 0.2212, 'grad_norm': 1.283470630645752, 'learning_rate': 6.9551282051282055e-06, 'epoch': 0.91}
 30%|███       | 95/312 [1:34:57<3:37:03, 60.02s/it] 31%|███       | 96/312 [1:35:57<3:36:16, 60.08s/it]                                                    {'loss': 0.2184, 'grad_norm': 1.1765737533569336, 'learning_rate': 6.923076923076923e-06, 'epoch': 0.92}
 31%|███       | 96/312 [1:35:57<3:36:16, 60.08s/it] 31%|███       | 97/312 [1:36:57<3:35:14, 60.07s/it]                                                    {'loss': 0.2144, 'grad_norm': 1.359605073928833, 'learning_rate': 6.891025641025641e-06, 'epoch': 0.93}
 31%|███       | 97/312 [1:36:57<3:35:14, 60.07s/it] 31%|███▏      | 98/312 [1:37:57<3:33:50, 59.96s/it]                                                    {'loss': 0.1931, 'grad_norm': 1.2736108303070068, 'learning_rate': 6.858974358974359e-06, 'epoch': 0.94}
 31%|███▏      | 98/312 [1:37:57<3:33:50, 59.96s/it] 32%|███▏      | 99/312 [1:38:57<3:32:46, 59.94s/it]                                                    {'loss': 0.2052, 'grad_norm': 1.2684129476547241, 'learning_rate': 6.826923076923078e-06, 'epoch': 0.95}
 32%|███▏      | 99/312 [1:38:57<3:32:46, 59.94s/it] 32%|███▏      | 100/312 [1:39:57<3:31:41, 59.91s/it]                                                     {'loss': 0.1808, 'grad_norm': 1.1516313552856445, 'learning_rate': 6.794871794871796e-06, 'epoch': 0.96}
 32%|███▏      | 100/312 [1:39:57<3:31:41, 59.91s/it] 32%|███▏      | 101/312 [1:40:57<3:30:41, 59.91s/it]                                                     {'loss': 0.187, 'grad_norm': 1.24375581741333, 'learning_rate': 6.762820512820514e-06, 'epoch': 0.97}
 32%|███▏      | 101/312 [1:40:57<3:30:41, 59.91s/it] 33%|███▎      | 102/312 [1:41:57<3:30:06, 60.03s/it]                                                     {'loss': 0.2224, 'grad_norm': 1.2567031383514404, 'learning_rate': 6.730769230769232e-06, 'epoch': 0.98}
 33%|███▎      | 102/312 [1:41:57<3:30:06, 60.03s/it] 33%|███▎      | 103/312 [1:42:57<3:29:32, 60.15s/it]                                                     {'loss': 0.2154, 'grad_norm': 1.4170764684677124, 'learning_rate': 6.698717948717949e-06, 'epoch': 0.99}
 33%|███▎      | 103/312 [1:42:58<3:29:32, 60.15s/it] 33%|███▎      | 104/312 [1:43:58<3:28:44, 60.22s/it]                                                     {'loss': 0.175, 'grad_norm': 1.2573552131652832, 'learning_rate': 6.666666666666667e-06, 'epoch': 1.0}
 33%|███▎      | 104/312 [1:43:58<3:28:44, 60.22s/it] 34%|███▎      | 105/312 [1:44:58<3:27:16, 60.08s/it]                                                     {'loss': 0.1438, 'grad_norm': 1.2698872089385986, 'learning_rate': 6.6346153846153846e-06, 'epoch': 1.01}
 34%|███▎      | 105/312 [1:44:58<3:27:16, 60.08s/it] 34%|███▍      | 106/312 [1:45:58<3:26:07, 60.04s/it]                                                     {'loss': 0.1409, 'grad_norm': 1.2708556652069092, 'learning_rate': 6.602564102564103e-06, 'epoch': 1.02}
 34%|███▍      | 106/312 [1:45:58<3:26:07, 60.04s/it] 34%|███▍      | 107/312 [1:46:58<3:25:06, 60.03s/it]                                                     {'loss': 0.1523, 'grad_norm': 1.4474315643310547, 'learning_rate': 6.570512820512821e-06, 'epoch': 1.03}
 34%|███▍      | 107/312 [1:46:58<3:25:06, 60.03s/it] 35%|███▍      | 108/312 [1:47:58<3:24:14, 60.07s/it]                                                     {'loss': 0.1402, 'grad_norm': 1.5044435262680054, 'learning_rate': 6.538461538461539e-06, 'epoch': 1.04}
 35%|███▍      | 108/312 [1:47:58<3:24:14, 60.07s/it] 35%|███▍      | 109/312 [1:48:58<3:23:21, 60.11s/it]                                                     {'loss': 0.1429, 'grad_norm': 1.6163909435272217, 'learning_rate': 6.506410256410257e-06, 'epoch': 1.05}
 35%|███▍      | 109/312 [1:48:58<3:23:21, 60.11s/it] 35%|███▌      | 110/312 [1:49:58<3:22:44, 60.22s/it]                                                     {'loss': 0.1348, 'grad_norm': 1.344990611076355, 'learning_rate': 6.474358974358975e-06, 'epoch': 1.06}
 35%|███▌      | 110/312 [1:49:58<3:22:44, 60.22s/it] 36%|███▌      | 111/312 [1:50:59<3:21:42, 60.21s/it]                                                     {'loss': 0.1324, 'grad_norm': 1.2735809087753296, 'learning_rate': 6.442307692307693e-06, 'epoch': 1.07}
 36%|███▌      | 111/312 [1:50:59<3:21:42, 60.21s/it] 36%|███▌      | 112/312 [1:51:58<3:20:19, 60.10s/it]                                                     {'loss': 0.1353, 'grad_norm': 1.2856029272079468, 'learning_rate': 6.410256410256412e-06, 'epoch': 1.08}
 36%|███▌      | 112/312 [1:51:58<3:20:19, 60.10s/it] 36%|███▌      | 113/312 [1:52:59<3:19:19, 60.10s/it]                                                     {'loss': 0.1423, 'grad_norm': 1.1827392578125, 'learning_rate': 6.378205128205129e-06, 'epoch': 1.09}
 36%|███▌      | 113/312 [1:52:59<3:19:19, 60.10s/it] 37%|███▋      | 114/312 [1:53:59<3:18:31, 60.16s/it]                                                     {'loss': 0.1241, 'grad_norm': 1.146643042564392, 'learning_rate': 6.3461538461538466e-06, 'epoch': 1.1}
 37%|███▋      | 114/312 [1:53:59<3:18:31, 60.16s/it] 37%|███▋      | 115/312 [1:54:59<3:17:35, 60.18s/it]                                                     {'loss': 0.1335, 'grad_norm': 1.21549391746521, 'learning_rate': 6.3141025641025645e-06, 'epoch': 1.11}
 37%|███▋      | 115/312 [1:54:59<3:17:35, 60.18s/it] 37%|███▋      | 116/312 [1:55:59<3:16:30, 60.16s/it]                                                     {'loss': 0.1307, 'grad_norm': 1.1965551376342773, 'learning_rate': 6.282051282051282e-06, 'epoch': 1.12}
 37%|███▋      | 116/312 [1:55:59<3:16:30, 60.16s/it] 38%|███▊      | 117/312 [1:56:59<3:15:22, 60.12s/it]                                                     {'loss': 0.1427, 'grad_norm': 1.3090662956237793, 'learning_rate': 6.25e-06, 'epoch': 1.12}
 38%|███▊      | 117/312 [1:56:59<3:15:22, 60.12s/it] 38%|███▊      | 118/312 [1:57:59<3:14:16, 60.08s/it]                                                     {'loss': 0.1282, 'grad_norm': 1.3424795866012573, 'learning_rate': 6.217948717948718e-06, 'epoch': 1.13}
 38%|███▊      | 118/312 [1:57:59<3:14:16, 60.08s/it] 38%|███▊      | 119/312 [1:58:59<3:13:29, 60.15s/it]                                                     {'loss': 0.1348, 'grad_norm': 1.4320253133773804, 'learning_rate': 6.185897435897437e-06, 'epoch': 1.14}
 38%|███▊      | 119/312 [1:59:00<3:13:29, 60.15s/it] 38%|███▊      | 120/312 [2:00:00<3:12:23, 60.12s/it]                                                     {'loss': 0.1495, 'grad_norm': 1.300432562828064, 'learning_rate': 6.153846153846155e-06, 'epoch': 1.15}
 38%|███▊      | 120/312 [2:00:00<3:12:23, 60.12s/it] 39%|███▉      | 121/312 [2:01:00<3:11:15, 60.08s/it]                                                     {'loss': 0.1472, 'grad_norm': 1.2607821226119995, 'learning_rate': 6.121794871794873e-06, 'epoch': 1.16}
 39%|███▉      | 121/312 [2:01:00<3:11:15, 60.08s/it] 39%|███▉      | 122/312 [2:02:00<3:10:23, 60.12s/it]                                                     {'loss': 0.1338, 'grad_norm': 1.1662201881408691, 'learning_rate': 6.08974358974359e-06, 'epoch': 1.17}
 39%|███▉      | 122/312 [2:02:00<3:10:23, 60.12s/it] 39%|███▉      | 123/312 [2:03:00<3:09:23, 60.13s/it]                                                     {'loss': 0.1308, 'grad_norm': 1.1687098741531372, 'learning_rate': 6.057692307692308e-06, 'epoch': 1.18}
 39%|███▉      | 123/312 [2:03:00<3:09:23, 60.13s/it] 40%|███▉      | 124/312 [2:04:00<3:08:23, 60.12s/it]                                                     {'loss': 0.1377, 'grad_norm': 1.1312905550003052, 'learning_rate': 6.025641025641026e-06, 'epoch': 1.19}
 40%|███▉      | 124/312 [2:04:00<3:08:23, 60.12s/it] 40%|████      | 125/312 [2:05:00<3:07:16, 60.09s/it]                                                     {'loss': 0.1312, 'grad_norm': 1.169620394706726, 'learning_rate': 5.9935897435897436e-06, 'epoch': 1.2}
 40%|████      | 125/312 [2:05:00<3:07:16, 60.09s/it] 40%|████      | 126/312 [2:06:00<3:06:15, 60.08s/it]                                                     {'loss': 0.1532, 'grad_norm': 1.3484605550765991, 'learning_rate': 5.961538461538462e-06, 'epoch': 1.21}
 40%|████      | 126/312 [2:06:00<3:06:15, 60.08s/it] 41%|████      | 127/312 [2:07:00<3:05:09, 60.05s/it]                                                     {'loss': 0.1287, 'grad_norm': 1.1974769830703735, 'learning_rate': 5.92948717948718e-06, 'epoch': 1.22}
 41%|████      | 127/312 [2:07:00<3:05:09, 60.05s/it] 41%|████      | 128/312 [2:08:00<3:03:59, 60.00s/it]                                                     {'loss': 0.1343, 'grad_norm': 1.1923688650131226, 'learning_rate': 5.897435897435898e-06, 'epoch': 1.23}
 41%|████      | 128/312 [2:08:00<3:03:59, 60.00s/it] 41%|████▏     | 129/312 [2:09:00<3:02:53, 59.97s/it]                                                     {'loss': 0.1384, 'grad_norm': 1.2315325736999512, 'learning_rate': 5.865384615384616e-06, 'epoch': 1.24}
 41%|████▏     | 129/312 [2:09:00<3:02:53, 59.97s/it] 42%|████▏     | 130/312 [2:10:00<3:02:04, 60.02s/it]                                                     {'loss': 0.132, 'grad_norm': 1.2370589971542358, 'learning_rate': 5.833333333333334e-06, 'epoch': 1.25}
 42%|████▏     | 130/312 [2:10:00<3:02:04, 60.02s/it] 42%|████▏     | 131/312 [2:11:00<3:00:56, 59.98s/it]                                                     {'loss': 0.1388, 'grad_norm': 1.2659354209899902, 'learning_rate': 5.801282051282052e-06, 'epoch': 1.26}
 42%|████▏     | 131/312 [2:11:00<3:00:56, 59.98s/it] 42%|████▏     | 132/312 [2:12:00<2:59:56, 59.98s/it]                                                     {'loss': 0.1366, 'grad_norm': 1.1760210990905762, 'learning_rate': 5.769230769230769e-06, 'epoch': 1.27}
 42%|████▏     | 132/312 [2:12:00<2:59:56, 59.98s/it] 43%|████▎     | 133/312 [2:13:00<2:58:50, 59.94s/it]                                                     {'loss': 0.1434, 'grad_norm': 1.2233198881149292, 'learning_rate': 5.737179487179487e-06, 'epoch': 1.28}
 43%|████▎     | 133/312 [2:13:00<2:58:50, 59.94s/it] 43%|████▎     | 134/312 [2:14:00<2:57:57, 59.99s/it]                                                     {'loss': 0.1319, 'grad_norm': 1.211648941040039, 'learning_rate': 5.705128205128206e-06, 'epoch': 1.29}
 43%|████▎     | 134/312 [2:14:00<2:57:57, 59.99s/it] 43%|████▎     | 135/312 [2:15:00<2:56:49, 59.94s/it]                                                     {'loss': 0.1266, 'grad_norm': 1.180984377861023, 'learning_rate': 5.6730769230769235e-06, 'epoch': 1.3}
 43%|████▎     | 135/312 [2:15:00<2:56:49, 59.94s/it] 44%|████▎     | 136/312 [2:15:59<2:55:42, 59.90s/it]                                                     {'loss': 0.1201, 'grad_norm': 1.1722873449325562, 'learning_rate': 5.641025641025641e-06, 'epoch': 1.31}
 44%|████▎     | 136/312 [2:15:59<2:55:42, 59.90s/it] 44%|████▍     | 137/312 [2:16:59<2:54:39, 59.88s/it]                                                     {'loss': 0.1356, 'grad_norm': 1.2471606731414795, 'learning_rate': 5.608974358974359e-06, 'epoch': 1.32}
 44%|████▍     | 137/312 [2:16:59<2:54:39, 59.88s/it] 44%|████▍     | 138/312 [2:17:59<2:53:52, 59.96s/it]                                                     {'loss': 0.1306, 'grad_norm': 1.2387957572937012, 'learning_rate': 5.576923076923077e-06, 'epoch': 1.33}
 44%|████▍     | 138/312 [2:17:59<2:53:52, 59.96s/it] 45%|████▍     | 139/312 [2:18:59<2:52:53, 59.97s/it]                                                     {'loss': 0.1284, 'grad_norm': 1.1297515630722046, 'learning_rate': 5.544871794871796e-06, 'epoch': 1.34}
 45%|████▍     | 139/312 [2:18:59<2:52:53, 59.97s/it] 45%|████▍     | 140/312 [2:19:59<2:52:00, 60.00s/it]                                                     {'loss': 0.1256, 'grad_norm': 1.1473454236984253, 'learning_rate': 5.512820512820514e-06, 'epoch': 1.35}
 45%|████▍     | 140/312 [2:20:00<2:52:00, 60.00s/it] 45%|████▌     | 141/312 [2:21:00<2:51:11, 60.07s/it]                                                     {'loss': 0.1393, 'grad_norm': 1.23322331905365, 'learning_rate': 5.480769230769232e-06, 'epoch': 1.36}
 45%|████▌     | 141/312 [2:21:00<2:51:11, 60.07s/it] 46%|████▌     | 142/312 [2:22:00<2:50:13, 60.08s/it]                                                     {'loss': 0.127, 'grad_norm': 1.0788084268569946, 'learning_rate': 5.448717948717949e-06, 'epoch': 1.37}
 46%|████▌     | 142/312 [2:22:00<2:50:13, 60.08s/it] 46%|████▌     | 143/312 [2:23:00<2:49:12, 60.08s/it]                                                     {'loss': 0.1373, 'grad_norm': 1.2071064710617065, 'learning_rate': 5.416666666666667e-06, 'epoch': 1.38}
 46%|████▌     | 143/312 [2:23:00<2:49:12, 60.08s/it] 46%|████▌     | 144/312 [2:24:00<2:48:08, 60.05s/it]                                                     {'loss': 0.1403, 'grad_norm': 1.3307737112045288, 'learning_rate': 5.384615384615385e-06, 'epoch': 1.38}
 46%|████▌     | 144/312 [2:24:00<2:48:08, 60.05s/it] 46%|████▋     | 145/312 [2:25:00<2:47:18, 60.11s/it]                                                     {'loss': 0.1464, 'grad_norm': 1.343977689743042, 'learning_rate': 5.3525641025641026e-06, 'epoch': 1.39}
 46%|████▋     | 145/312 [2:25:00<2:47:18, 60.11s/it] 47%|████▋     | 146/312 [2:26:00<2:46:28, 60.17s/it]                                                     {'loss': 0.1366, 'grad_norm': 1.2116096019744873, 'learning_rate': 5.320512820512821e-06, 'epoch': 1.4}
 47%|████▋     | 146/312 [2:26:00<2:46:28, 60.17s/it] 47%|████▋     | 147/312 [2:27:01<2:45:40, 60.24s/it]                                                     {'loss': 0.1325, 'grad_norm': 1.1902382373809814, 'learning_rate': 5.288461538461539e-06, 'epoch': 1.41}
 47%|████▋     | 147/312 [2:27:01<2:45:40, 60.24s/it] 47%|████▋     | 148/312 [2:28:01<2:44:34, 60.21s/it]                                                     {'loss': 0.13, 'grad_norm': 1.169319987297058, 'learning_rate': 5.256410256410257e-06, 'epoch': 1.42}
 47%|████▋     | 148/312 [2:28:01<2:44:34, 60.21s/it] 48%|████▊     | 149/312 [2:29:01<2:43:38, 60.24s/it]                                                     {'loss': 0.1229, 'grad_norm': 1.141251802444458, 'learning_rate': 5.224358974358975e-06, 'epoch': 1.43}
 48%|████▊     | 149/312 [2:29:01<2:43:38, 60.24s/it] 48%|████▊     | 150/312 [2:30:01<2:42:34, 60.21s/it]                                                     {'loss': 0.1292, 'grad_norm': 1.2100790739059448, 'learning_rate': 5.192307692307693e-06, 'epoch': 1.44}
 48%|████▊     | 150/312 [2:30:01<2:42:34, 60.21s/it] 48%|████▊     | 151/312 [2:31:02<2:41:33, 60.21s/it]                                                     {'loss': 0.1229, 'grad_norm': 1.1663824319839478, 'learning_rate': 5.160256410256411e-06, 'epoch': 1.45}
 48%|████▊     | 151/312 [2:31:02<2:41:33, 60.21s/it] 49%|████▊     | 152/312 [2:32:02<2:40:28, 60.18s/it]                                                     {'loss': 0.1201, 'grad_norm': 1.18746018409729, 'learning_rate': 5.128205128205128e-06, 'epoch': 1.46}
 49%|████▊     | 152/312 [2:32:02<2:40:28, 60.18s/it] 49%|████▉     | 153/312 [2:33:02<2:39:20, 60.13s/it]                                                     {'loss': 0.1282, 'grad_norm': 1.1703088283538818, 'learning_rate': 5.096153846153846e-06, 'epoch': 1.47}
 49%|████▉     | 153/312 [2:33:02<2:39:20, 60.13s/it] 49%|████▉     | 154/312 [2:34:02<2:38:25, 60.16s/it]                                                     {'loss': 0.1227, 'grad_norm': 1.1684373617172241, 'learning_rate': 5.064102564102565e-06, 'epoch': 1.48}
 49%|████▉     | 154/312 [2:34:02<2:38:25, 60.16s/it] 50%|████▉     | 155/312 [2:35:02<2:37:14, 60.09s/it]                                                     {'loss': 0.131, 'grad_norm': 1.173420786857605, 'learning_rate': 5.0320512820512825e-06, 'epoch': 1.49}
 50%|████▉     | 155/312 [2:35:02<2:37:14, 60.09s/it] 50%|█████     | 156/312 [2:36:02<2:36:10, 60.07s/it]                                                     {'loss': 0.1499, 'grad_norm': 1.3149446249008179, 'learning_rate': 5e-06, 'epoch': 1.5}
 50%|█████     | 156/312 [2:36:02<2:36:10, 60.07s/it] 50%|█████     | 157/312 [2:37:02<2:35:08, 60.05s/it]                                                     {'loss': 0.1388, 'grad_norm': 1.2004817724227905, 'learning_rate': 4.967948717948718e-06, 'epoch': 1.51}
 50%|█████     | 157/312 [2:37:02<2:35:08, 60.05s/it] 51%|█████     | 158/312 [2:38:02<2:34:11, 60.07s/it]                                                     {'loss': 0.1474, 'grad_norm': 1.2504476308822632, 'learning_rate': 4.935897435897436e-06, 'epoch': 1.52}
 51%|█████     | 158/312 [2:38:02<2:34:11, 60.07s/it] 51%|█████     | 159/312 [2:39:02<2:33:14, 60.09s/it]                                                     {'loss': 0.1403, 'grad_norm': 1.1967624425888062, 'learning_rate': 4.903846153846154e-06, 'epoch': 1.53}
 51%|█████     | 159/312 [2:39:02<2:33:14, 60.09s/it] 51%|█████▏    | 160/312 [2:40:02<2:32:16, 60.11s/it]                                                     {'loss': 0.1311, 'grad_norm': 1.135970950126648, 'learning_rate': 4.871794871794872e-06, 'epoch': 1.54}
 51%|█████▏    | 160/312 [2:40:02<2:32:16, 60.11s/it] 52%|█████▏    | 161/312 [2:41:03<2:31:33, 60.22s/it]                                                     {'loss': 0.1357, 'grad_norm': 1.177228569984436, 'learning_rate': 4.83974358974359e-06, 'epoch': 1.55}
 52%|█████▏    | 161/312 [2:41:03<2:31:33, 60.22s/it] 52%|█████▏    | 162/312 [2:42:03<2:30:41, 60.27s/it]                                                     {'loss': 0.1389, 'grad_norm': 1.2471874952316284, 'learning_rate': 4.807692307692308e-06, 'epoch': 1.56}
 52%|█████▏    | 162/312 [2:42:03<2:30:41, 60.27s/it] 52%|█████▏    | 163/312 [2:43:03<2:29:40, 60.27s/it]                                                     {'loss': 0.134, 'grad_norm': 1.2482595443725586, 'learning_rate': 4.775641025641027e-06, 'epoch': 1.57}
 52%|█████▏    | 163/312 [2:43:04<2:29:40, 60.27s/it] 53%|█████▎    | 164/312 [2:44:04<2:28:56, 60.38s/it]                                                     {'loss': 0.1405, 'grad_norm': 1.2505314350128174, 'learning_rate': 4.743589743589744e-06, 'epoch': 1.58}
 53%|█████▎    | 164/312 [2:44:04<2:28:56, 60.38s/it] 53%|█████▎    | 165/312 [2:45:04<2:27:38, 60.26s/it]                                                     {'loss': 0.1275, 'grad_norm': 1.193817138671875, 'learning_rate': 4.711538461538462e-06, 'epoch': 1.59}
 53%|█████▎    | 165/312 [2:45:04<2:27:38, 60.26s/it] 53%|█████▎    | 166/312 [2:46:04<2:26:16, 60.11s/it]                                                     {'loss': 0.1303, 'grad_norm': 1.16881263256073, 'learning_rate': 4.6794871794871795e-06, 'epoch': 1.6}
 53%|█████▎    | 166/312 [2:46:04<2:26:16, 60.11s/it] 54%|█████▎    | 167/312 [2:47:04<2:25:13, 60.10s/it]                                                     {'loss': 0.1291, 'grad_norm': 1.2259489297866821, 'learning_rate': 4.647435897435898e-06, 'epoch': 1.61}
 54%|█████▎    | 167/312 [2:47:04<2:25:13, 60.10s/it] 54%|█████▍    | 168/312 [2:48:04<2:24:13, 60.09s/it]                                                     {'loss': 0.1221, 'grad_norm': 1.1627479791641235, 'learning_rate': 4.615384615384616e-06, 'epoch': 1.62}
 54%|█████▍    | 168/312 [2:48:04<2:24:13, 60.09s/it] 54%|█████▍    | 169/312 [2:49:04<2:23:15, 60.11s/it]                                                     {'loss': 0.1371, 'grad_norm': 1.2201675176620483, 'learning_rate': 4.583333333333333e-06, 'epoch': 1.62}
 54%|█████▍    | 169/312 [2:49:04<2:23:15, 60.11s/it] 54%|█████▍    | 170/312 [2:50:04<2:22:02, 60.02s/it]                                                     {'loss': 0.1311, 'grad_norm': 1.192018985748291, 'learning_rate': 4.551282051282052e-06, 'epoch': 1.63}
 54%|█████▍    | 170/312 [2:50:04<2:22:02, 60.02s/it] 55%|█████▍    | 171/312 [2:51:04<2:21:08, 60.06s/it]                                                     {'loss': 0.1313, 'grad_norm': 1.1646794080734253, 'learning_rate': 4.51923076923077e-06, 'epoch': 1.64}
 55%|█████▍    | 171/312 [2:51:04<2:21:08, 60.06s/it] 55%|█████▌    | 172/312 [2:52:04<2:20:06, 60.04s/it]                                                     {'loss': 0.1338, 'grad_norm': 1.201661467552185, 'learning_rate': 4.487179487179488e-06, 'epoch': 1.65}
 55%|█████▌    | 172/312 [2:52:04<2:20:06, 60.04s/it] 55%|█████▌    | 173/312 [2:53:04<2:19:05, 60.04s/it]                                                     {'loss': 0.1252, 'grad_norm': 1.1604008674621582, 'learning_rate': 4.455128205128206e-06, 'epoch': 1.66}
 55%|█████▌    | 173/312 [2:53:04<2:19:05, 60.04s/it] 56%|█████▌    | 174/312 [2:54:04<2:18:11, 60.08s/it]                                                     {'loss': 0.1296, 'grad_norm': 1.1911295652389526, 'learning_rate': 4.423076923076924e-06, 'epoch': 1.67}
 56%|█████▌    | 174/312 [2:54:04<2:18:11, 60.08s/it] 56%|█████▌    | 175/312 [2:55:04<2:17:10, 60.07s/it]                                                     {'loss': 0.1394, 'grad_norm': 1.2046444416046143, 'learning_rate': 4.3910256410256415e-06, 'epoch': 1.68}
 56%|█████▌    | 175/312 [2:55:04<2:17:10, 60.07s/it] 56%|█████▋    | 176/312 [2:56:04<2:16:01, 60.01s/it]                                                     {'loss': 0.1277, 'grad_norm': 1.1941834688186646, 'learning_rate': 4.358974358974359e-06, 'epoch': 1.69}
 56%|█████▋    | 176/312 [2:56:04<2:16:01, 60.01s/it] 57%|█████▋    | 177/312 [2:57:04<2:14:53, 59.95s/it]                                                     {'loss': 0.1294, 'grad_norm': 1.2729618549346924, 'learning_rate': 4.326923076923077e-06, 'epoch': 1.7}
 57%|█████▋    | 177/312 [2:57:04<2:14:53, 59.95s/it] 57%|█████▋    | 178/312 [2:58:04<2:14:07, 60.05s/it]                                                     {'loss': 0.1256, 'grad_norm': 1.122854232788086, 'learning_rate': 4.294871794871795e-06, 'epoch': 1.71}
 57%|█████▋    | 178/312 [2:58:04<2:14:07, 60.05s/it] 57%|█████▋    | 179/312 [2:59:04<2:13:07, 60.06s/it]                                                     {'loss': 0.1353, 'grad_norm': 1.2120389938354492, 'learning_rate': 4.262820512820513e-06, 'epoch': 1.72}
 57%|█████▋    | 179/312 [2:59:05<2:13:07, 60.06s/it] 58%|█████▊    | 180/312 [3:00:05<2:12:08, 60.06s/it]                                                     {'loss': 0.1211, 'grad_norm': 1.1499916315078735, 'learning_rate': 4.230769230769231e-06, 'epoch': 1.73}
 58%|█████▊    | 180/312 [3:00:05<2:12:08, 60.06s/it] 58%|█████▊    | 181/312 [3:01:05<2:11:15, 60.12s/it]                                                     {'loss': 0.1461, 'grad_norm': 1.250738263130188, 'learning_rate': 4.198717948717949e-06, 'epoch': 1.74}
 58%|█████▊    | 181/312 [3:01:05<2:11:15, 60.12s/it] 58%|█████▊    | 182/312 [3:02:05<2:10:16, 60.13s/it]                                                     {'loss': 0.1245, 'grad_norm': 1.1807268857955933, 'learning_rate': 4.166666666666667e-06, 'epoch': 1.75}
 58%|█████▊    | 182/312 [3:02:05<2:10:16, 60.13s/it] 59%|█████▊    | 183/312 [3:03:05<2:09:14, 60.12s/it]                                                     {'loss': 0.1296, 'grad_norm': 1.2060766220092773, 'learning_rate': 4.134615384615385e-06, 'epoch': 1.76}
 59%|█████▊    | 183/312 [3:03:05<2:09:14, 60.12s/it] 59%|█████▉    | 184/312 [3:04:05<2:08:19, 60.15s/it]                                                     {'loss': 0.143, 'grad_norm': 1.2291650772094727, 'learning_rate': 4.102564102564103e-06, 'epoch': 1.77}
 59%|█████▉    | 184/312 [3:04:05<2:08:19, 60.15s/it] 59%|█████▉    | 185/312 [3:05:05<2:07:11, 60.09s/it]                                                     {'loss': 0.1265, 'grad_norm': 1.113942265510559, 'learning_rate': 4.070512820512821e-06, 'epoch': 1.78}
 59%|█████▉    | 185/312 [3:05:05<2:07:11, 60.09s/it] 60%|█████▉    | 186/312 [3:06:05<2:06:11, 60.09s/it]                                                     {'loss': 0.1162, 'grad_norm': 1.158765435218811, 'learning_rate': 4.0384615384615385e-06, 'epoch': 1.79}
 60%|█████▉    | 186/312 [3:06:05<2:06:11, 60.09s/it] 60%|█████▉    | 187/312 [3:07:06<2:05:19, 60.16s/it]                                                     {'loss': 0.1305, 'grad_norm': 1.1419905424118042, 'learning_rate': 4.006410256410257e-06, 'epoch': 1.8}
 60%|█████▉    | 187/312 [3:07:06<2:05:19, 60.16s/it] 60%|██████    | 188/312 [3:08:06<2:04:29, 60.23s/it]                                                     {'loss': 0.1147, 'grad_norm': 1.1481633186340332, 'learning_rate': 3.974358974358974e-06, 'epoch': 1.81}
 60%|██████    | 188/312 [3:08:06<2:04:29, 60.23s/it] 61%|██████    | 189/312 [3:09:06<2:03:23, 60.19s/it]                                                     {'loss': 0.1361, 'grad_norm': 1.1608989238739014, 'learning_rate': 3.942307692307692e-06, 'epoch': 1.82}
 61%|██████    | 189/312 [3:09:06<2:03:23, 60.19s/it] 61%|██████    | 190/312 [3:10:06<2:02:25, 60.21s/it]                                                     {'loss': 0.1396, 'grad_norm': 1.2111279964447021, 'learning_rate': 3.910256410256411e-06, 'epoch': 1.83}
 61%|██████    | 190/312 [3:10:06<2:02:25, 60.21s/it] 61%|██████    | 191/312 [3:11:06<2:01:06, 60.05s/it]                                                     {'loss': 0.1304, 'grad_norm': 1.1576573848724365, 'learning_rate': 3.878205128205129e-06, 'epoch': 1.84}
 61%|██████    | 191/312 [3:11:06<2:01:06, 60.05s/it] 62%|██████▏   | 192/312 [3:12:06<2:00:04, 60.04s/it]                                                     {'loss': 0.1129, 'grad_norm': 1.183854579925537, 'learning_rate': 3.846153846153847e-06, 'epoch': 1.85}
 62%|██████▏   | 192/312 [3:12:06<2:00:04, 60.04s/it] 62%|██████▏   | 193/312 [3:13:07<1:59:23, 60.20s/it]                                                     {'loss': 0.126, 'grad_norm': 1.216490387916565, 'learning_rate': 3.8141025641025643e-06, 'epoch': 1.86}
 62%|██████▏   | 193/312 [3:13:07<1:59:23, 60.20s/it] 62%|██████▏   | 194/312 [3:14:07<1:58:18, 60.16s/it]                                                     {'loss': 0.1246, 'grad_norm': 1.171325445175171, 'learning_rate': 3.782051282051282e-06, 'epoch': 1.87}
 62%|██████▏   | 194/312 [3:14:07<1:58:18, 60.16s/it] 62%|██████▎   | 195/312 [3:15:07<1:57:24, 60.21s/it]                                                     {'loss': 0.1254, 'grad_norm': 1.2120908498764038, 'learning_rate': 3.7500000000000005e-06, 'epoch': 1.88}
 62%|██████▎   | 195/312 [3:15:07<1:57:24, 60.21s/it] 63%|██████▎   | 196/312 [3:16:08<1:56:36, 60.32s/it]                                                     {'loss': 0.1117, 'grad_norm': 1.072055459022522, 'learning_rate': 3.7179487179487184e-06, 'epoch': 1.88}
 63%|██████▎   | 196/312 [3:16:08<1:56:36, 60.32s/it] 63%|██████▎   | 197/312 [3:17:08<1:55:25, 60.22s/it]                                                     {'loss': 0.1471, 'grad_norm': 1.260439157485962, 'learning_rate': 3.6858974358974363e-06, 'epoch': 1.89}
 63%|██████▎   | 197/312 [3:17:08<1:55:25, 60.22s/it] 63%|██████▎   | 198/312 [3:18:08<1:54:24, 60.22s/it]                                                     {'loss': 0.1257, 'grad_norm': 1.1091786623001099, 'learning_rate': 3.653846153846154e-06, 'epoch': 1.9}
 63%|██████▎   | 198/312 [3:18:08<1:54:24, 60.22s/it] 64%|██████▍   | 199/312 [3:19:08<1:53:24, 60.22s/it]                                                     {'loss': 0.128, 'grad_norm': 1.1579062938690186, 'learning_rate': 3.621794871794872e-06, 'epoch': 1.91}
 64%|██████▍   | 199/312 [3:19:08<1:53:24, 60.22s/it] 64%|██████▍   | 200/312 [3:20:08<1:52:18, 60.17s/it]                                                     {'loss': 0.1331, 'grad_norm': 1.1557449102401733, 'learning_rate': 3.58974358974359e-06, 'epoch': 1.92}
 64%|██████▍   | 200/312 [3:20:08<1:52:18, 60.17s/it] 64%|██████▍   | 201/312 [3:21:08<1:51:21, 60.19s/it]                                                     {'loss': 0.1308, 'grad_norm': 1.1626992225646973, 'learning_rate': 3.557692307692308e-06, 'epoch': 1.93}
 64%|██████▍   | 201/312 [3:21:08<1:51:21, 60.19s/it] 65%|██████▍   | 202/312 [3:22:09<1:50:25, 60.23s/it]                                                     {'loss': 0.1294, 'grad_norm': 1.2148290872573853, 'learning_rate': 3.5256410256410263e-06, 'epoch': 1.94}
 65%|██████▍   | 202/312 [3:22:09<1:50:25, 60.23s/it] 65%|██████▌   | 203/312 [3:23:09<1:49:29, 60.27s/it]                                                     {'loss': 0.1344, 'grad_norm': 1.2113990783691406, 'learning_rate': 3.4935897435897438e-06, 'epoch': 1.95}
 65%|██████▌   | 203/312 [3:23:09<1:49:29, 60.27s/it] 65%|██████▌   | 204/312 [3:24:09<1:48:31, 60.29s/it]                                                     {'loss': 0.1259, 'grad_norm': 1.14250648021698, 'learning_rate': 3.4615384615384617e-06, 'epoch': 1.96}
 65%|██████▌   | 204/312 [3:24:09<1:48:31, 60.29s/it] 66%|██████▌   | 205/312 [3:25:10<1:47:29, 60.28s/it]                                                     {'loss': 0.1134, 'grad_norm': 1.0950313806533813, 'learning_rate': 3.4294871794871796e-06, 'epoch': 1.97}
 66%|██████▌   | 205/312 [3:25:10<1:47:29, 60.28s/it] 66%|██████▌   | 206/312 [3:26:10<1:46:26, 60.25s/it]                                                     {'loss': 0.1286, 'grad_norm': 1.1418898105621338, 'learning_rate': 3.397435897435898e-06, 'epoch': 1.98}
 66%|██████▌   | 206/312 [3:26:10<1:46:26, 60.25s/it] 66%|██████▋   | 207/312 [3:27:10<1:45:21, 60.21s/it]                                                     {'loss': 0.1378, 'grad_norm': 1.2063608169555664, 'learning_rate': 3.365384615384616e-06, 'epoch': 1.99}
 66%|██████▋   | 207/312 [3:27:10<1:45:21, 60.21s/it] 67%|██████▋   | 208/312 [3:28:10<1:44:19, 60.19s/it]                                                     {'loss': 0.1108, 'grad_norm': 1.0924735069274902, 'learning_rate': 3.3333333333333333e-06, 'epoch': 2.0}
 67%|██████▋   | 208/312 [3:28:10<1:44:19, 60.19s/it] 67%|██████▋   | 209/312 [3:29:10<1:43:14, 60.14s/it]                                                     {'loss': 0.0608, 'grad_norm': 1.1644325256347656, 'learning_rate': 3.3012820512820517e-06, 'epoch': 2.01}
 67%|██████▋   | 209/312 [3:29:10<1:43:14, 60.14s/it] 67%|██████▋   | 210/312 [3:30:10<1:42:19, 60.20s/it]                                                     {'loss': 0.0704, 'grad_norm': 1.4429774284362793, 'learning_rate': 3.2692307692307696e-06, 'epoch': 2.02}
 67%|██████▋   | 210/312 [3:30:10<1:42:19, 60.20s/it] 68%|██████▊   | 211/312 [3:31:11<1:41:24, 60.25s/it]                                                     {'loss': 0.0618, 'grad_norm': 1.1303092241287231, 'learning_rate': 3.2371794871794875e-06, 'epoch': 2.03}
 68%|██████▊   | 211/312 [3:31:11<1:41:24, 60.25s/it] 68%|██████▊   | 212/312 [3:32:11<1:40:22, 60.23s/it]                                                     {'loss': 0.0606, 'grad_norm': 1.1488672494888306, 'learning_rate': 3.205128205128206e-06, 'epoch': 2.04}
 68%|██████▊   | 212/312 [3:32:11<1:40:22, 60.23s/it] 68%|██████▊   | 213/312 [3:33:11<1:39:24, 60.25s/it]                                                     {'loss': 0.0615, 'grad_norm': 1.773535132408142, 'learning_rate': 3.1730769230769233e-06, 'epoch': 2.05}
 68%|██████▊   | 213/312 [3:33:11<1:39:24, 60.25s/it] 69%|██████▊   | 214/312 [3:34:12<1:38:27, 60.28s/it]                                                     {'loss': 0.059, 'grad_norm': 1.8102461099624634, 'learning_rate': 3.141025641025641e-06, 'epoch': 2.06}
 69%|██████▊   | 214/312 [3:34:12<1:38:27, 60.28s/it] 69%|██████▉   | 215/312 [3:35:12<1:37:19, 60.20s/it]                                                     {'loss': 0.0669, 'grad_norm': 1.919197916984558, 'learning_rate': 3.108974358974359e-06, 'epoch': 2.07}
 69%|██████▉   | 215/312 [3:35:12<1:37:19, 60.20s/it] 69%|██████▉   | 216/312 [3:36:11<1:36:02, 60.02s/it]                                                     {'loss': 0.0524, 'grad_norm': 1.3410855531692505, 'learning_rate': 3.0769230769230774e-06, 'epoch': 2.08}
 69%|██████▉   | 216/312 [3:36:11<1:36:02, 60.02s/it] 70%|██████▉   | 217/312 [3:37:11<1:34:57, 59.98s/it]                                                     {'loss': 0.0498, 'grad_norm': 1.152736783027649, 'learning_rate': 3.044871794871795e-06, 'epoch': 2.09}
 70%|██████▉   | 217/312 [3:37:11<1:34:57, 59.98s/it] 70%|██████▉   | 218/312 [3:38:11<1:33:57, 59.98s/it]                                                     {'loss': 0.0623, 'grad_norm': 1.314002275466919, 'learning_rate': 3.012820512820513e-06, 'epoch': 2.1}
 70%|██████▉   | 218/312 [3:38:11<1:33:57, 59.98s/it] 70%|███████   | 219/312 [3:39:11<1:32:59, 60.00s/it]                                                     {'loss': 0.0601, 'grad_norm': 1.2036125659942627, 'learning_rate': 2.980769230769231e-06, 'epoch': 2.11}
 70%|███████   | 219/312 [3:39:11<1:32:59, 60.00s/it] 71%|███████   | 220/312 [3:40:11<1:32:02, 60.02s/it]                                                     {'loss': 0.0548, 'grad_norm': 1.1359425783157349, 'learning_rate': 2.948717948717949e-06, 'epoch': 2.12}
 71%|███████   | 220/312 [3:40:11<1:32:02, 60.02s/it] 71%|███████   | 221/312 [3:41:11<1:31:07, 60.08s/it]                                                     {'loss': 0.0551, 'grad_norm': 1.2087441682815552, 'learning_rate': 2.916666666666667e-06, 'epoch': 2.12}
 71%|███████   | 221/312 [3:41:11<1:31:07, 60.08s/it] 71%|███████   | 222/312 [3:42:12<1:30:11, 60.13s/it]                                                     {'loss': 0.0538, 'grad_norm': 1.1045222282409668, 'learning_rate': 2.8846153846153845e-06, 'epoch': 2.13}
 71%|███████   | 222/312 [3:42:12<1:30:11, 60.13s/it] 71%|███████▏  | 223/312 [3:43:12<1:29:21, 60.25s/it]                                                     {'loss': 0.0583, 'grad_norm': 1.1733466386795044, 'learning_rate': 2.852564102564103e-06, 'epoch': 2.14}
 71%|███████▏  | 223/312 [3:43:12<1:29:21, 60.25s/it] 72%|███████▏  | 224/312 [3:44:12<1:28:19, 60.22s/it]                                                     {'loss': 0.0511, 'grad_norm': 1.1196167469024658, 'learning_rate': 2.8205128205128207e-06, 'epoch': 2.15}
 72%|███████▏  | 224/312 [3:44:12<1:28:19, 60.22s/it] 72%|███████▏  | 225/312 [3:45:12<1:27:13, 60.16s/it]                                                     {'loss': 0.0522, 'grad_norm': 1.155409574508667, 'learning_rate': 2.7884615384615386e-06, 'epoch': 2.16}
 72%|███████▏  | 225/312 [3:45:12<1:27:13, 60.16s/it] 72%|███████▏  | 226/312 [3:46:12<1:26:09, 60.11s/it]                                                     {'loss': 0.0547, 'grad_norm': 1.1660813093185425, 'learning_rate': 2.756410256410257e-06, 'epoch': 2.17}
 72%|███████▏  | 226/312 [3:46:12<1:26:09, 60.11s/it] 73%|███████▎  | 227/312 [3:47:12<1:25:05, 60.06s/it]                                                     {'loss': 0.0569, 'grad_norm': 1.2546143531799316, 'learning_rate': 2.7243589743589744e-06, 'epoch': 2.18}
 73%|███████▎  | 227/312 [3:47:12<1:25:05, 60.06s/it] 73%|███████▎  | 228/312 [3:48:13<1:24:09, 60.12s/it]                                                     {'loss': 0.0597, 'grad_norm': 1.3140877485275269, 'learning_rate': 2.6923076923076923e-06, 'epoch': 2.19}
 73%|███████▎  | 228/312 [3:48:13<1:24:09, 60.12s/it] 73%|███████▎  | 229/312 [3:49:13<1:23:14, 60.18s/it]                                                     {'loss': 0.0494, 'grad_norm': 1.1852526664733887, 'learning_rate': 2.6602564102564107e-06, 'epoch': 2.2}
 73%|███████▎  | 229/312 [3:49:13<1:23:14, 60.18s/it] 74%|███████▎  | 230/312 [3:50:13<1:22:21, 60.26s/it]                                                     {'loss': 0.0529, 'grad_norm': 1.2577016353607178, 'learning_rate': 2.6282051282051286e-06, 'epoch': 2.21}
 74%|███████▎  | 230/312 [3:50:13<1:22:21, 60.26s/it] 74%|███████▍  | 231/312 [3:51:14<1:21:23, 60.29s/it]                                                     {'loss': 0.0512, 'grad_norm': 1.1341608762741089, 'learning_rate': 2.5961538461538465e-06, 'epoch': 2.22}
 74%|███████▍  | 231/312 [3:51:14<1:21:23, 60.29s/it] 74%|███████▍  | 232/312 [3:52:14<1:20:16, 60.21s/it]                                                     {'loss': 0.0555, 'grad_norm': 1.247237205505371, 'learning_rate': 2.564102564102564e-06, 'epoch': 2.23}
 74%|███████▍  | 232/312 [3:52:14<1:20:16, 60.21s/it] 75%|███████▍  | 233/312 [3:53:14<1:19:17, 60.23s/it]                                                     {'loss': 0.0486, 'grad_norm': 1.1721854209899902, 'learning_rate': 2.5320512820512823e-06, 'epoch': 2.24}
 75%|███████▍  | 233/312 [3:53:14<1:19:17, 60.23s/it] 75%|███████▌  | 234/312 [3:54:14<1:18:18, 60.24s/it]                                                     {'loss': 0.0561, 'grad_norm': 1.4386696815490723, 'learning_rate': 2.5e-06, 'epoch': 2.25}
 75%|███████▌  | 234/312 [3:54:14<1:18:18, 60.24s/it] 75%|███████▌  | 235/312 [3:55:15<1:17:23, 60.31s/it]                                                     {'loss': 0.0527, 'grad_norm': 1.2166035175323486, 'learning_rate': 2.467948717948718e-06, 'epoch': 2.26}
 75%|███████▌  | 235/312 [3:55:15<1:17:23, 60.31s/it] 76%|███████▌  | 236/312 [3:56:15<1:16:29, 60.39s/it]                                                     {'loss': 0.0508, 'grad_norm': 1.1816284656524658, 'learning_rate': 2.435897435897436e-06, 'epoch': 2.27}
 76%|███████▌  | 236/312 [3:56:15<1:16:29, 60.39s/it] 76%|███████▌  | 237/312 [3:57:16<1:15:32, 60.44s/it]                                                     {'loss': 0.0525, 'grad_norm': 1.2087959051132202, 'learning_rate': 2.403846153846154e-06, 'epoch': 2.28}
 76%|███████▌  | 237/312 [3:57:16<1:15:32, 60.44s/it] 76%|███████▋  | 238/312 [3:58:16<1:14:28, 60.38s/it]                                                     {'loss': 0.0506, 'grad_norm': 1.1651372909545898, 'learning_rate': 2.371794871794872e-06, 'epoch': 2.29}
 76%|███████▋  | 238/312 [3:58:16<1:14:28, 60.38s/it] 77%|███████▋  | 239/312 [3:59:16<1:13:23, 60.32s/it]                                                     {'loss': 0.0592, 'grad_norm': 1.2701001167297363, 'learning_rate': 2.3397435897435897e-06, 'epoch': 2.3}
 77%|███████▋  | 239/312 [3:59:16<1:13:23, 60.32s/it] 77%|███████▋  | 240/312 [4:00:16<1:12:14, 60.20s/it]                                                     {'loss': 0.058, 'grad_norm': 1.276353120803833, 'learning_rate': 2.307692307692308e-06, 'epoch': 2.31}
 77%|███████▋  | 240/312 [4:00:16<1:12:14, 60.20s/it] 77%|███████▋  | 241/312 [4:01:16<1:11:14, 60.20s/it]                                                     {'loss': 0.0497, 'grad_norm': 1.1118502616882324, 'learning_rate': 2.275641025641026e-06, 'epoch': 2.32}
 77%|███████▋  | 241/312 [4:01:16<1:11:14, 60.20s/it] 78%|███████▊  | 242/312 [4:02:17<1:10:15, 60.22s/it]                                                     {'loss': 0.058, 'grad_norm': 1.2922250032424927, 'learning_rate': 2.243589743589744e-06, 'epoch': 2.33}
 78%|███████▊  | 242/312 [4:02:17<1:10:15, 60.22s/it] 78%|███████▊  | 243/312 [4:03:17<1:09:17, 60.25s/it]                                                     {'loss': 0.049, 'grad_norm': 1.1730459928512573, 'learning_rate': 2.211538461538462e-06, 'epoch': 2.34}
 78%|███████▊  | 243/312 [4:03:17<1:09:17, 60.25s/it] 78%|███████▊  | 244/312 [4:04:17<1:08:15, 60.23s/it]                                                     {'loss': 0.0514, 'grad_norm': 1.1760797500610352, 'learning_rate': 2.1794871794871797e-06, 'epoch': 2.35}
 78%|███████▊  | 244/312 [4:04:17<1:08:15, 60.23s/it] 79%|███████▊  | 245/312 [4:05:18<1:07:18, 60.27s/it]                                                     {'loss': 0.0521, 'grad_norm': 1.2271833419799805, 'learning_rate': 2.1474358974358976e-06, 'epoch': 2.36}
 79%|███████▊  | 245/312 [4:05:18<1:07:18, 60.27s/it] 79%|███████▉  | 246/312 [4:06:18<1:06:18, 60.28s/it]                                                     {'loss': 0.0553, 'grad_norm': 1.1984909772872925, 'learning_rate': 2.1153846153846155e-06, 'epoch': 2.37}
 79%|███████▉  | 246/312 [4:06:18<1:06:18, 60.28s/it] 79%|███████▉  | 247/312 [4:07:18<1:05:23, 60.36s/it]                                                     {'loss': 0.0534, 'grad_norm': 1.2351986169815063, 'learning_rate': 2.0833333333333334e-06, 'epoch': 2.38}
 79%|███████▉  | 247/312 [4:07:18<1:05:23, 60.36s/it] 79%|███████▉  | 248/312 [4:08:19<1:04:20, 60.32s/it]                                                     {'loss': 0.0491, 'grad_norm': 1.1594221591949463, 'learning_rate': 2.0512820512820513e-06, 'epoch': 2.38}
 79%|███████▉  | 248/312 [4:08:19<1:04:20, 60.32s/it] 80%|███████▉  | 249/312 [4:09:19<1:03:15, 60.25s/it]                                                     {'loss': 0.0501, 'grad_norm': 1.1656593084335327, 'learning_rate': 2.0192307692307692e-06, 'epoch': 2.39}
 80%|███████▉  | 249/312 [4:09:19<1:03:15, 60.25s/it] 80%|████████  | 250/312 [4:10:19<1:02:19, 60.32s/it]                                                     {'loss': 0.0559, 'grad_norm': 1.2217992544174194, 'learning_rate': 1.987179487179487e-06, 'epoch': 2.4}
 80%|████████  | 250/312 [4:10:19<1:02:19, 60.32s/it] 80%|████████  | 251/312 [4:11:20<1:01:21, 60.35s/it]                                                     {'loss': 0.051, 'grad_norm': 1.1802701950073242, 'learning_rate': 1.9551282051282055e-06, 'epoch': 2.41}
 80%|████████  | 251/312 [4:11:20<1:01:21, 60.35s/it] 81%|████████  | 252/312 [4:12:20<1:00:23, 60.40s/it]                                                     {'loss': 0.0537, 'grad_norm': 1.160757303237915, 'learning_rate': 1.9230769230769234e-06, 'epoch': 2.42}
 81%|████████  | 252/312 [4:12:20<1:00:23, 60.40s/it] 81%|████████  | 253/312 [4:13:20<59:23, 60.40s/it]                                                     {'loss': 0.052, 'grad_norm': 1.2986408472061157, 'learning_rate': 1.891025641025641e-06, 'epoch': 2.43}
 81%|████████  | 253/312 [4:13:21<59:23, 60.40s/it] 81%|████████▏ | 254/312 [4:14:20<58:15, 60.27s/it]                                                   {'loss': 0.0557, 'grad_norm': 1.204427719116211, 'learning_rate': 1.8589743589743592e-06, 'epoch': 2.44}
 81%|████████▏ | 254/312 [4:14:21<58:15, 60.27s/it] 82%|████████▏ | 255/312 [4:15:21<57:14, 60.25s/it]                                                   {'loss': 0.0508, 'grad_norm': 1.1711530685424805, 'learning_rate': 1.826923076923077e-06, 'epoch': 2.45}
 82%|████████▏ | 255/312 [4:15:21<57:14, 60.25s/it] 82%|████████▏ | 256/312 [4:16:21<56:10, 60.19s/it]                                                   {'loss': 0.051, 'grad_norm': 1.1409378051757812, 'learning_rate': 1.794871794871795e-06, 'epoch': 2.46}
 82%|████████▏ | 256/312 [4:16:21<56:10, 60.19s/it] 82%|████████▏ | 257/312 [4:17:21<55:15, 60.27s/it]                                                   {'loss': 0.047, 'grad_norm': 1.134144902229309, 'learning_rate': 1.7628205128205131e-06, 'epoch': 2.47}
 82%|████████▏ | 257/312 [4:17:21<55:15, 60.27s/it] 83%|████████▎ | 258/312 [4:18:22<54:17, 60.32s/it]                                                   {'loss': 0.0519, 'grad_norm': 1.1285475492477417, 'learning_rate': 1.7307692307692308e-06, 'epoch': 2.48}
 83%|████████▎ | 258/312 [4:18:22<54:17, 60.32s/it] 83%|████████▎ | 259/312 [4:19:22<53:15, 60.29s/it]                                                   {'loss': 0.0532, 'grad_norm': 1.2165168523788452, 'learning_rate': 1.698717948717949e-06, 'epoch': 2.49}
 83%|████████▎ | 259/312 [4:19:22<53:15, 60.29s/it] 83%|████████▎ | 260/312 [4:20:22<52:13, 60.26s/it]                                                   {'loss': 0.0524, 'grad_norm': 1.1664118766784668, 'learning_rate': 1.6666666666666667e-06, 'epoch': 2.5}
 83%|████████▎ | 260/312 [4:20:22<52:13, 60.26s/it] 84%|████████▎ | 261/312 [4:21:22<51:04, 60.09s/it]                                                   {'loss': 0.0555, 'grad_norm': 1.2189810276031494, 'learning_rate': 1.6346153846153848e-06, 'epoch': 2.51}
 84%|████████▎ | 261/312 [4:21:22<51:04, 60.09s/it] 84%|████████▍ | 262/312 [4:22:22<50:07, 60.15s/it]                                                   {'loss': 0.0514, 'grad_norm': 1.178695797920227, 'learning_rate': 1.602564102564103e-06, 'epoch': 2.52}
 84%|████████▍ | 262/312 [4:22:22<50:07, 60.15s/it] 84%|████████▍ | 263/312 [4:23:22<49:07, 60.16s/it]                                                   {'loss': 0.0464, 'grad_norm': 1.0557186603546143, 'learning_rate': 1.5705128205128206e-06, 'epoch': 2.53}
 84%|████████▍ | 263/312 [4:23:22<49:07, 60.16s/it] 85%|████████▍ | 264/312 [4:24:22<48:07, 60.15s/it]                                                   {'loss': 0.0547, 'grad_norm': 1.237329363822937, 'learning_rate': 1.5384615384615387e-06, 'epoch': 2.54}
 85%|████████▍ | 264/312 [4:24:22<48:07, 60.15s/it] 85%|████████▍ | 265/312 [4:25:23<47:08, 60.19s/it]                                                   {'loss': 0.0512, 'grad_norm': 1.1169620752334595, 'learning_rate': 1.5064102564102564e-06, 'epoch': 2.55}
 85%|████████▍ | 265/312 [4:25:23<47:08, 60.19s/it] 85%|████████▌ | 266/312 [4:26:23<46:07, 60.16s/it]                                                   {'loss': 0.0548, 'grad_norm': 1.2178484201431274, 'learning_rate': 1.4743589743589745e-06, 'epoch': 2.56}
 85%|████████▌ | 266/312 [4:26:23<46:07, 60.16s/it] 86%|████████▌ | 267/312 [4:27:23<45:08, 60.19s/it]                                                   {'loss': 0.0492, 'grad_norm': 1.1184593439102173, 'learning_rate': 1.4423076923076922e-06, 'epoch': 2.57}
 86%|████████▌ | 267/312 [4:27:23<45:08, 60.19s/it] 86%|████████▌ | 268/312 [4:28:23<44:10, 60.23s/it]                                                   {'loss': 0.0531, 'grad_norm': 1.1818857192993164, 'learning_rate': 1.4102564102564104e-06, 'epoch': 2.58}
 86%|████████▌ | 268/312 [4:28:23<44:10, 60.23s/it] 86%|████████▌ | 269/312 [4:29:23<43:09, 60.21s/it]                                                   {'loss': 0.053, 'grad_norm': 1.0741506814956665, 'learning_rate': 1.3782051282051285e-06, 'epoch': 2.59}
 86%|████████▌ | 269/312 [4:29:23<43:09, 60.21s/it] 87%|████████▋ | 270/312 [4:30:23<42:05, 60.14s/it]                                                   {'loss': 0.0482, 'grad_norm': 1.1938937902450562, 'learning_rate': 1.3461538461538462e-06, 'epoch': 2.6}
 87%|████████▋ | 270/312 [4:30:23<42:05, 60.14s/it] 87%|████████▋ | 271/312 [4:31:24<41:09, 60.23s/it]                                                   {'loss': 0.0498, 'grad_norm': 1.1040865182876587, 'learning_rate': 1.3141025641025643e-06, 'epoch': 2.61}
 87%|████████▋ | 271/312 [4:31:24<41:09, 60.23s/it] 87%|████████▋ | 272/312 [4:32:24<40:07, 60.18s/it]                                                   {'loss': 0.0476, 'grad_norm': 1.1913750171661377, 'learning_rate': 1.282051282051282e-06, 'epoch': 2.62}
 87%|████████▋ | 272/312 [4:32:24<40:07, 60.18s/it] 88%|████████▊ | 273/312 [4:33:24<39:07, 60.20s/it]                                                   {'loss': 0.0478, 'grad_norm': 1.2005864381790161, 'learning_rate': 1.25e-06, 'epoch': 2.62}
 88%|████████▊ | 273/312 [4:33:24<39:07, 60.20s/it] 88%|████████▊ | 274/312 [4:34:24<38:07, 60.19s/it]                                                   {'loss': 0.0472, 'grad_norm': 1.1847926378250122, 'learning_rate': 1.217948717948718e-06, 'epoch': 2.63}
 88%|████████▊ | 274/312 [4:34:24<38:07, 60.19s/it] 88%|████████▊ | 275/312 [4:35:24<37:05, 60.15s/it]                                                   {'loss': 0.0517, 'grad_norm': 1.2008750438690186, 'learning_rate': 1.185897435897436e-06, 'epoch': 2.64}
 88%|████████▊ | 275/312 [4:35:24<37:05, 60.15s/it] 88%|████████▊ | 276/312 [4:36:24<36:04, 60.14s/it]                                                   {'loss': 0.0537, 'grad_norm': 1.2318907976150513, 'learning_rate': 1.153846153846154e-06, 'epoch': 2.65}
 88%|████████▊ | 276/312 [4:36:25<36:04, 60.14s/it] 89%|████████▉ | 277/312 [4:37:25<35:07, 60.21s/it]                                                   {'loss': 0.0501, 'grad_norm': 1.174021601676941, 'learning_rate': 1.121794871794872e-06, 'epoch': 2.66}
 89%|████████▉ | 277/312 [4:37:25<35:07, 60.21s/it] 89%|████████▉ | 278/312 [4:38:25<34:09, 60.27s/it]                                                   {'loss': 0.0465, 'grad_norm': 1.2313714027404785, 'learning_rate': 1.0897435897435899e-06, 'epoch': 2.67}
 89%|████████▉ | 278/312 [4:38:25<34:09, 60.27s/it] 89%|████████▉ | 279/312 [4:39:25<33:07, 60.23s/it]                                                   {'loss': 0.047, 'grad_norm': 1.1126474142074585, 'learning_rate': 1.0576923076923078e-06, 'epoch': 2.68}
 89%|████████▉ | 279/312 [4:39:25<33:07, 60.23s/it] 90%|████████▉ | 280/312 [4:40:26<32:08, 60.27s/it]                                                   {'loss': 0.0494, 'grad_norm': 1.182024598121643, 'learning_rate': 1.0256410256410257e-06, 'epoch': 2.69}
 90%|████████▉ | 280/312 [4:40:26<32:08, 60.27s/it] 90%|█████████ | 281/312 [4:41:26<31:06, 60.22s/it]                                                   {'loss': 0.0488, 'grad_norm': 1.1952147483825684, 'learning_rate': 9.935897435897436e-07, 'epoch': 2.7}
 90%|█████████ | 281/312 [4:41:26<31:06, 60.22s/it] 90%|█████████ | 282/312 [4:42:26<30:05, 60.18s/it]                                                   {'loss': 0.058, 'grad_norm': 1.221738338470459, 'learning_rate': 9.615384615384617e-07, 'epoch': 2.71}
 90%|█████████ | 282/312 [4:42:26<30:05, 60.18s/it] 91%|█████████ | 283/312 [4:43:26<29:06, 60.22s/it]                                                   {'loss': 0.0507, 'grad_norm': 1.1930404901504517, 'learning_rate': 9.294871794871796e-07, 'epoch': 2.72}
 91%|█████████ | 283/312 [4:43:26<29:06, 60.22s/it] 91%|█████████ | 284/312 [4:44:26<28:05, 60.19s/it]                                                   {'loss': 0.0497, 'grad_norm': 1.1342209577560425, 'learning_rate': 8.974358974358975e-07, 'epoch': 2.73}
 91%|█████████ | 284/312 [4:44:26<28:05, 60.19s/it] 91%|█████████▏| 285/312 [4:45:27<27:05, 60.20s/it]                                                   {'loss': 0.0512, 'grad_norm': 1.2498737573623657, 'learning_rate': 8.653846153846154e-07, 'epoch': 2.74}
 91%|█████████▏| 285/312 [4:45:27<27:05, 60.20s/it] 92%|█████████▏| 286/312 [4:46:27<26:04, 60.19s/it]                                                   {'loss': 0.0515, 'grad_norm': 1.0866025686264038, 'learning_rate': 8.333333333333333e-07, 'epoch': 2.75}
 92%|█████████▏| 286/312 [4:46:27<26:04, 60.19s/it] 92%|█████████▏| 287/312 [4:47:27<25:05, 60.22s/it]                                                   {'loss': 0.0554, 'grad_norm': 1.1244202852249146, 'learning_rate': 8.012820512820515e-07, 'epoch': 2.76}
 92%|█████████▏| 287/312 [4:47:27<25:05, 60.22s/it] 92%|█████████▏| 288/312 [4:48:28<24:07, 60.30s/it]                                                   {'loss': 0.0505, 'grad_norm': 1.152400016784668, 'learning_rate': 7.692307692307694e-07, 'epoch': 2.77}
 92%|█████████▏| 288/312 [4:48:28<24:07, 60.30s/it] 93%|█████████▎| 289/312 [4:49:28<23:05, 60.24s/it]                                                   {'loss': 0.0462, 'grad_norm': 1.0553171634674072, 'learning_rate': 7.371794871794873e-07, 'epoch': 2.78}
 93%|█████████▎| 289/312 [4:49:28<23:05, 60.24s/it] 93%|█████████▎| 290/312 [4:50:28<22:06, 60.27s/it]                                                   {'loss': 0.049, 'grad_norm': 1.153469204902649, 'learning_rate': 7.051282051282052e-07, 'epoch': 2.79}
 93%|█████████▎| 290/312 [4:50:28<22:06, 60.27s/it] 93%|█████████▎| 291/312 [4:51:28<21:06, 60.32s/it]                                                   {'loss': 0.0482, 'grad_norm': 1.1123979091644287, 'learning_rate': 6.730769230769231e-07, 'epoch': 2.8}
 93%|█████████▎| 291/312 [4:51:29<21:06, 60.32s/it] 94%|█████████▎| 292/312 [4:52:29<20:05, 60.30s/it]                                                   {'loss': 0.0542, 'grad_norm': 1.2130616903305054, 'learning_rate': 6.41025641025641e-07, 'epoch': 2.81}
 94%|█████████▎| 292/312 [4:52:29<20:05, 60.30s/it] 94%|█████████▍| 293/312 [4:53:29<19:06, 60.33s/it]                                                   {'loss': 0.0523, 'grad_norm': 1.2000033855438232, 'learning_rate': 6.08974358974359e-07, 'epoch': 2.82}
 94%|█████████▍| 293/312 [4:53:29<19:06, 60.33s/it] 94%|█████████▍| 294/312 [4:54:29<18:04, 60.26s/it]                                                   {'loss': 0.0435, 'grad_norm': 1.0801295042037964, 'learning_rate': 5.76923076923077e-07, 'epoch': 2.83}
 94%|█████████▍| 294/312 [4:54:29<18:04, 60.26s/it] 95%|█████████▍| 295/312 [4:55:29<17:01, 60.11s/it]                                                   {'loss': 0.0454, 'grad_norm': 1.075860619544983, 'learning_rate': 5.448717948717949e-07, 'epoch': 2.84}
 95%|█████████▍| 295/312 [4:55:29<17:01, 60.11s/it] 95%|█████████▍| 296/312 [4:56:30<16:04, 60.29s/it]                                                   {'loss': 0.046, 'grad_norm': 1.1121011972427368, 'learning_rate': 5.128205128205128e-07, 'epoch': 2.85}
 95%|█████████▍| 296/312 [4:56:30<16:04, 60.29s/it] 95%|█████████▌| 297/312 [4:57:30<15:03, 60.24s/it]                                                   {'loss': 0.0534, 'grad_norm': 1.2987709045410156, 'learning_rate': 4.807692307692308e-07, 'epoch': 2.86}
 95%|█████████▌| 297/312 [4:57:30<15:03, 60.24s/it] 96%|█████████▌| 298/312 [4:58:30<14:03, 60.28s/it]                                                   {'loss': 0.0481, 'grad_norm': 1.0972462892532349, 'learning_rate': 4.4871794871794876e-07, 'epoch': 2.87}
 96%|█████████▌| 298/312 [4:58:30<14:03, 60.28s/it] 96%|█████████▌| 299/312 [4:59:30<13:03, 60.26s/it]                                                   {'loss': 0.0535, 'grad_norm': 1.227696180343628, 'learning_rate': 4.1666666666666667e-07, 'epoch': 2.88}
 96%|█████████▌| 299/312 [4:59:30<13:03, 60.26s/it] 96%|█████████▌| 300/312 [5:00:30<12:02, 60.21s/it]                                                   {'loss': 0.0498, 'grad_norm': 1.139323353767395, 'learning_rate': 3.846153846153847e-07, 'epoch': 2.88}
 96%|█████████▌| 300/312 [5:00:31<12:02, 60.21s/it] 96%|█████████▋| 301/312 [5:01:31<11:02, 60.20s/it]                                                   {'loss': 0.0577, 'grad_norm': 1.366578459739685, 'learning_rate': 3.525641025641026e-07, 'epoch': 2.89}
 96%|█████████▋| 301/312 [5:01:31<11:02, 60.20s/it] 97%|█████████▋| 302/312 [5:02:31<10:01, 60.20s/it]                                                   {'loss': 0.0573, 'grad_norm': 1.1800384521484375, 'learning_rate': 3.205128205128205e-07, 'epoch': 2.9}
 97%|█████████▋| 302/312 [5:02:31<10:01, 60.20s/it] 97%|█████████▋| 303/312 [5:03:31<09:01, 60.18s/it]                                                   {'loss': 0.0478, 'grad_norm': 1.180515170097351, 'learning_rate': 2.884615384615385e-07, 'epoch': 2.91}
 97%|█████████▋| 303/312 [5:03:31<09:01, 60.18s/it] 97%|█████████▋| 304/312 [5:04:31<08:01, 60.18s/it]                                                   {'loss': 0.0463, 'grad_norm': 1.1092129945755005, 'learning_rate': 2.564102564102564e-07, 'epoch': 2.92}
 97%|█████████▋| 304/312 [5:04:31<08:01, 60.18s/it] 98%|█████████▊| 305/312 [5:05:31<07:01, 60.23s/it]                                                   {'loss': 0.0552, 'grad_norm': 1.226623296737671, 'learning_rate': 2.2435897435897438e-07, 'epoch': 2.93}
 98%|█████████▊| 305/312 [5:05:32<07:01, 60.23s/it] 98%|█████████▊| 306/312 [5:06:32<06:01, 60.25s/it]                                                   {'loss': 0.0543, 'grad_norm': 1.174857258796692, 'learning_rate': 1.9230769230769234e-07, 'epoch': 2.94}
 98%|█████████▊| 306/312 [5:06:32<06:01, 60.25s/it] 98%|█████████▊| 307/312 [5:07:32<05:01, 60.21s/it]                                                   {'loss': 0.0458, 'grad_norm': 1.1467890739440918, 'learning_rate': 1.6025641025641025e-07, 'epoch': 2.95}
 98%|█████████▊| 307/312 [5:07:32<05:01, 60.21s/it] 99%|█████████▊| 308/312 [5:08:32<04:01, 60.29s/it]                                                   {'loss': 0.0487, 'grad_norm': 1.2103092670440674, 'learning_rate': 1.282051282051282e-07, 'epoch': 2.96}
 99%|█████████▊| 308/312 [5:08:32<04:01, 60.29s/it] 99%|█████████▉| 309/312 [5:09:32<03:00, 60.24s/it]                                                   {'loss': 0.0495, 'grad_norm': 1.205063819885254, 'learning_rate': 9.615384615384617e-08, 'epoch': 2.97}
 99%|█████████▉| 309/312 [5:09:33<03:00, 60.24s/it] 99%|█████████▉| 310/312 [5:10:33<02:00, 60.27s/it]                                                   {'loss': 0.0451, 'grad_norm': 1.0902340412139893, 'learning_rate': 6.41025641025641e-08, 'epoch': 2.98}
 99%|█████████▉| 310/312 [5:10:33<02:00, 60.27s/it]100%|█████████▉| 311/312 [5:11:33<01:00, 60.21s/it]                                                   {'loss': 0.0507, 'grad_norm': 1.1886355876922607, 'learning_rate': 3.205128205128205e-08, 'epoch': 2.99}
100%|█████████▉| 311/312 [5:11:33<01:00, 60.21s/it]100%|██████████| 312/312 [5:12:33<00:00, 60.22s/it]                                                   {'loss': 0.0364, 'grad_norm': 1.0475363731384277, 'learning_rate': 0.0, 'epoch': 3.0}
100%|██████████| 312/312 [5:12:33<00:00, 60.22s/it]/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:690: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
  warnings.warn(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:732: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  local_shape = tensor.shape
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:744: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.shape,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:746: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.dtype,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/fsdp/_state_dict_utils.py:747: FutureWarning: Please use DTensor instead and we are deprecating ShardedTensor.
  tensor.device,
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:108: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/torch/distributed/checkpoint/filesystem.py:116: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  if tensor.storage().size() != tensor.numel():
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
/root/miniforge3/envs/py310/lib/python3.10/site-packages/accelerate/utils/fsdp_utils.py:200: FutureWarning: `save_state_dict` is deprecated and will be removed in future versions.Please use `save` instead.
  dist_cp.save_state_dict(
                                                   {'train_runtime': 18880.3968, 'train_samples_per_second': 4.216, 'train_steps_per_second': 0.017, 'train_loss': 0.18516187781754595, 'epoch': 3.0}
100%|██████████| 312/312 [5:14:38<00:00, 60.22s/it]100%|██████████| 312/312 [5:14:38<00:00, 60.51s/it]
wandb: - 0.021 MB of 0.021 MB uploadedwandb: \ 0.021 MB of 0.021 MB uploadedwandb: | 0.047 MB of 0.083 MB uploadedwandb: / 0.088 MB of 0.088 MB uploadedwandb: 
wandb: Run history:
wandb:         train/epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███
wandb:   train/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███
wandb:     train/grad_norm █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: train/learning_rate ████▇▇▇▇▇▆▆▆▆▆▆▅▅▅▅▅▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▁▁▁
wandb:          train/loss █▅▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:               total_flos 4.431872929961083e+17
wandb:              train/epoch 3.0
wandb:        train/global_step 312
wandb:          train/grad_norm 1.04754
wandb:      train/learning_rate 0.0
wandb:               train/loss 0.0364
wandb:               train_loss 0.18516
wandb:            train_runtime 18880.3968
wandb: train_samples_per_second 4.216
wandb:   train_steps_per_second 0.017
wandb: 
wandb: 🚀 View run output at: https://wandb.ai/lilu630-intel/huggingface/runs/d9updj7p
wandb: ⭐️ View project at: https://wandb.ai/lilu630-intel/huggingface
wandb: Synced 6 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_030303-d9updj7p/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
