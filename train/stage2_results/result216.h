//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_baseband_layer
 * rief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of OPP_UseCase generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_AGGSWITCH
#define COFS_MODEL_AGGSWITCH


#include "cfm_aggswitch_global.h"
#include "cfm_aggswitch_global_types.h"
#include <vector>
#include "cofluent.h"
#include "cfm_inbounddatacenterswitch.h"
#include "cfm_inboundrack.h"
#include "cfm_outbounddatacenterswitch.h"
#include "cfm_outboundrack.h"
#include "cfm_routingfunction.h"
#include "dt/cft_defpacket_in.h"

class cfm_aggswitch : public cf_core::cf_function {
public:

typedef cf_core::cf_message_queue<cft_DefPacket> mq_MsgQInboundDataCenterSwitch_t;
typedef cf_core::cf_message_queue<cft_DefPacket> mq_MsgQInboundRack_t;
typedef cf_core::cf_message_queue<cft_DefPacket> mq_MsgQOutboundDataCenterSwitch_t;
typedef cf_core::cf_message_queue<cft_DefPacket> mq_MsgQOutboundRack_t;

typedef cf_core::cf_mq_initiator_socket<cfm_aggswitch, cft_defpacket> p_mq_MsgQToAggSwitch_t;
typedef cf_core::cf_mq_initiator_socket<cfm_aggswitch, cft_defpacket> p_mq_MsgQToDataCenterSwitch_t;
typedef cf_core::cf_mq_initiator_socket<cfm_aggswitch, cft_defpacket> p_mq_MsgQToRack_t;
typedef cf_core::cf_mq_initiator_socket<cfm_aggswitch, cft_defpacket> p_mq_MsgQToServerRoom_t;

/// constructor
cfm_aggswitch(sc_core::sc_module_name name);

/// destructor
virtual ~cfm_aggswitch(void);

p_mq_MsgQToAggSwitch_t p_mq_MsgQToAggSwitch;
p_mq_MsgQToDataCenterSwitch_t p_mq_MsgQToDataCenterSwitch;
p_mq_MsgQToRack_t p_mq_MsgQToRack;
p_mq_MsgQToServerRoom_t p_mq_MsgQToServerRoom;

cfm_inbounddatacenterswitch *InboundDataCenterSwitch;
std::vector<cfm_inboundrack *> AGGSwitch_vec;
cfm_outbounddatacenterswitch *OutboundDataCenterSwitch;
std::vector<cfm_outboundrack *> AGGSwitch_vec;
cfm_routingfunction *RoutingFunction;

protected:
void cb_init_attributes(void);
void cb_init_local_vars(void);

public:
mq_MsgQInboundDataCenterSwitch_t mq_MsgQInboundDataCenterSwitch;
std::vector<mq_MsgQInboundRack_t *> mq_MsgQInboundRack_vec;
mq_MsgQOutboundDataCenterSwitch_t mq_MsgQOutboundDataCenterSwitch;
std::vector<mq_MsgQOutboundRack_t *> mq_MsgQOutboundRack_vec;
};
#endif
//<#!@READ-ONLY-SECTION-END@!#>