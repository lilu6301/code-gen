
/*
 * \class cfm_bt_stack
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Stack generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_bt_stack.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_stack
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_bt_stack
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_bt_stack::cfm_bt_stack(sc_core::sc_module_name name)
cf_function_container(name)
, cfm_bt_stack_dp_if()
, p_mq_BaseBand_Out("p_mq_BaseBand_Out")
, p_mq_BaseBand_In("p_mq_BaseBand_In")
, p_mq_ReadWrite("p_mq_ReadWrite")
, p_mq_DataIn("p_mq_DataIn")
, p_ev_WrOK("p_ev_WrOK")
, p_mq_DataOut("p_mq_DataOut")
, p_ev_startEv("p_ev_startEv")
, mq_L2CAP_In("L2CAP_In"
)
, mq_L2CAP_Out("L2CAP_Out"
)
, mq_OBEX_In("OBEX_In"
)
, mq_OBEX_Out("OBEX_Out"
)
, mq_RFCOMM_In("RFCOMM_In"
)
, mq_RFCOMM_Out("RFCOMM_Out"
)

{
	cf_function_container::init();
	BaseBand_Layer = new cfm_baseband_layer
	("BaseBand_Layer");
	L2CAP_Layer = new cfm_l2cap_layer
	("L2CAP_Layer");
	OBEX_Layer = new cfm_obex_layer
	("OBEX_Layer");
	RFCOMM_Layer = new cfm_rfcomm_layer
	("RFCOMM_Layer");

	for (cf_count i = 0; i < (cf_count)BaseBand_Layer
			->p_mq_BaseBand_In_vec.size(); i++)
	{
		p_mq_BaseBand_In_t* module=new p_mq_BaseBand_In_t(cf_string("p_mq_BaseBand_In[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_BaseBand_In_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)BaseBand_Layer
			->p_mq_BaseBand_Out_vec.size(); i++)
	{
		p_mq_BaseBand_Out_t* module=new p_mq_BaseBand_Out_t(cf_string("p_mq_BaseBand_Out[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_BaseBand_Out_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)L2CAP_Layer
			->p_mq_L2CAP_In_vec.size(); i++)
	{
		p_mq_L2CAP_In_t* module=new p_mq_L2CAP_In_t(cf_string("p_mq_L2CAP_In[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_L2CAP_In_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)L2CAP_Layer
			->p_mq_L2CAP_Out_vec.size(); i++)
	{
		p_mq_L2CAP_Out_t* module=new p_mq_L2CAP_Out_t(cf_string("p_mq_L2CAP_Out[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_L2CAP_Out_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)OBEX_Layer
			->p_mq_OBEX_In_vec.size(); i++)
	{
		p_mq_OBEX_In_t* module=new p_mq_OBEX_In_t(cf_string("p_mq_OBEX_In[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_OBEX_In_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)OBEX_Layer
			->p_mq_OBEX_Out_vec.size(); i++)
	{
		p_mq_OBEX_Out_t* module=new p_mq_OBEX_Out_t(cf_string("p_mq_OBEX_Out[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_OBEX_Out_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)RFCOMM_Layer
			->p_mq_RFCOMM_In_vec.size(); i++)
	{
		p_mq_RFCOMM_In_t* module=new p_mq_RFCOMM_In_t(cf_string("p_mq_RFCOMM_In[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_RFCOMM_In_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)RFCOMM_Layer
			->p_mq_RFCOMM_Out_vec.size(); i++)
	{
		p_mq_RFCOMM_Out_t* module=new p_mq_RFCOMM_Out_t(cf_string("p_mq_RFCOMM_Out[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_RFCOMM_Out_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)StartEv_vec.size(); i++)
	{
		p_ev_startEv_t* module=new p_ev_startEv_t(cf_string("p_ev_startEv[%d]", i).c_str());
		CF_ASSERT( module )
		p_ev_startEv_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)StopEv_vec.size(); i++)
	{
		p_ev_StopEv_t* module=new p_ev_StopEv_t(cf_string("p_ev_StopEv[%d]", i).c_str());
		CF_ASSERT( module )
		p_ev_StopEv_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)WaitInputActions_vec.size(); i++)
	{
		p_mq_WaitInputActions_t* module=new p_mq_WaitInputActions_t(cf_string("p_mq_WaitInputActions[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_WaitInputActions_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)WaitOutputActions_vec.size(); i++)
	{
		p_mq_WaitOutputActions_t* module=new p_mq_WaitOutputActions_t(cf_string("p_mq_WaitOutputActions[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_WaitOutputActions_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++)
	{
		p_mq_DataIn_t* module=new p_mq_DataIn_t(cf_string("p_mq_DataIn[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_DataIn_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++)
	{
		p_mq_DataOut_t* module=new p_mq_DataOut_t(cf_string("p_mq_DataOut[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_DataOut_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)p_ev_WrOK_vec.size(); i++)
	{
		p_ev_WrOK_t* module=new p_ev_WrOK_t(cf_string("p_ev_WrOK[%d]", i).c_str());
		CF_ASSERT( module )
		p_ev_WrOK_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)p_mq_ReadWrite_vec.size(); i++)
	{
		p_mq_ReadWrite_t* module=new p_mq_ReadWrite_t(cf_string("p_mq_ReadWrite[%d]", i).c_str());
		CF_ASSERT( module )
		p_mq_ReadWrite_vec.push_back(module);
	}
	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_WrOK_vec.size(); i++) {
		p_ev_WrOK_t* module
		=p_ev_WrOK_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_WrOK
			((*p_ev_WrOK_vec[
							i
							]
					)
			);
			module->p_ev_StartEv
			((*p_ev_startEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_ReadWrite_vec.size(); i++) {
		p_mq_ReadWrite_t* module
		=p_mq_ReadWrite_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_ReadWrite
			((*p_mq_ReadWrite_vec[
							i
							]
					)
			);
			module->p_ev_WaitInputActions
			((*p_ev_WaitInputActions_vec[
							i
							]
					)
			);
			module->p_ev_WaitOutputActions
			((*p_ev_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataLoss_vec.size(); i++) {
		p_mq_DataLoss_t* module
		=p_mq_DataLoss_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataLoss
			((*p_mq_DataLoss_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StopEv_vec.size(); i++) {
		p_ev_StopEv_t* module
		=p_ev_StopEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StopEv
			((*p_ev_StopEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitInputActions_vec.size(); i++) {
		p_mq_WaitInputActions_t* module
		=p_mq_WaitInputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitOutputActions_vec.size(); i++) {
		p_mq_WaitOutputActions_t* module
		=p_mq_WaitOutputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StartEv_vec.size(); i++) {
		p_ev_StartEv_t* module
		=p_ev_StartEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StartEv
			((*p_ev_StartEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataLoss_vec.size(); i++) {
		p_mq_DataLoss_t* module
		=p_mq_DataLoss_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataLoss
			((*p_mq_DataLoss_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StopEv_vec.size(); i++) {
		p_ev_StopEv_t* module
		=p_ev_StopEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StopEv
			((*p_ev_StopEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitInputActions_vec.size(); i++) {
		p_mq_WaitInputActions_t* module
		=p_mq_WaitInputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitOutputActions_vec.size(); i++) {
		p_mq_WaitOutputActions_t* module
		=p_mq_WaitOutputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StartEv_vec.size(); i++) {
		p_ev_StartEv_t* module
		=p_ev_StartEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StartEv
			((*p_ev_StartEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataLoss_vec.size(); i++) {
		p_mq_DataLoss_t* module
		=p_mq_DataLoss_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataLoss
			((*p_mq_DataLoss_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StopEv_vec.size(); i++) {
		p_ev_StopEv_t* module
		=p_ev_StopEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StopEv
			((*p_ev_StopEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitInputActions_vec.size(); i++) {
		p_mq_WaitInputActions_t* module
		=p_mq_WaitInputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitOutputActions_vec.size(); i++) {
		p_mq_WaitOutputActions_t* module
		=p_mq_WaitOutputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StartEv_vec.size(); i++) {
		p_ev_StartEv_t* module
		=p_ev_StartEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StartEv
			((*p_ev_StartEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataLoss_vec.size(); i++) {
		p_mq_DataLoss_t* module
		=p_mq_DataLoss_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataLoss
			((*p_mq_DataLoss_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StopEv_vec.size(); i++) {
		p_ev_StopEv_t* module
		=p_ev_StopEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StopEv
			((*p_ev_StopEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitInputActions_vec.size(); i++) {
		p_mq_WaitInputActions_t* module
		=p_mq_WaitInputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitOutputActions_vec.size(); i++) {
		p_mq_WaitOutputActions_t* module
		=p_mq_WaitOutputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StartEv_vec.size(); i++) {
		p_ev_StartEv_t* module
		=p_ev_StartEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StartEv
			((*p_ev_StartEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataLoss_vec.size(); i++) {
		p_mq_DataLoss_t* module
		=p_mq_DataLoss_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataLoss
			((*p_mq_DataLoss_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataIn_vec.size(); i++) {
		p_mq_DataIn_t* module
		=p_mq_DataIn_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataIn
			((*p_mq_DataIn_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_DataOut_vec.size(); i++) {
		p_mq_DataOut_t* module
		=p_mq_DataOut_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_DataOut
			((*p_mq_DataOut_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_ev_StopEv_vec.size(); i++) {
		p_ev_StopEv_t* module
		=p_ev_StopEv_vec[i];
		if(module
				!= nullptr) {
			module->p_ev_StopEv
			((*p_ev_StopEv_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitInputActions_vec.size(); i++) {
		p_mq_WaitInputActions_t* module
		=p_mq_WaitInputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitInputActions
			((*p_mq_WaitInputActions_vec[
							i
							]
					)
			);
		}
	}

	for (cf_count i = 0; i < (cf_count)p_mq_WaitOutputActions_vec.size(); i++) {
		p_mq_WaitOutputActions_t* module
		=p_mq_WaitOutputActions_vec[i];
		if(module
				!= nullptr) {
			module->p_mq_WaitOutputActions
			((*p_mq_WaitOutputActions_