//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_outboundaggswitch
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of datacenter generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_outboundaggswitch.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_torswitch
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_outboundaggswitch
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'OutboundAGGSwitch definitions' algorithm generated code

//End of 'OutboundAGGSwitch definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_outboundaggswitch::cfm_outboundaggswitch(sc_core::sc_module_name name) :
		cf_function(name), cfm_outboundaggswitch_dp_if(), p_mq_MsgQOutboundAGGSwitch(
				"p_mq_MsgQOutboundAGGSwitch"), p_mq_MsgQToAggSwitch(
				"p_mq_MsgQToAggSwitch") {
	cf_function::init();

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch constructor' algorithm generated code

	//End of 'OutboundAGGSwitch constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function::elab_end();
}
//@}

/// \name destructor
//@{
cfm_outboundaggswitch::~cfm_outboundaggswitch(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch destructor' algorithm generated code

	//End of 'OutboundAGGSwitch destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_outboundaggswitch::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch pre elaboration' algorithm generated code

	//End of 'OutboundAGGSwitch pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_outboundaggswitch::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch post elaboration' algorithm generated code

	//End of 'OutboundAGGSwitch post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_outboundaggswitch::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch post simulation' algorithm generated code

	//End of 'OutboundAGGSwitch post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_outboundaggswitch::cb_init_attributes() {

// initialize function attributes
	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_outboundaggswitch::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'OutboundAGGSwitch initializations' algorithm generated code
	rack_id = get_container()->get_container()->get_cp_index();
	//End of 'OutboundAGGSwitch initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>