
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_user
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_user.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_softwaredefinedradioapp
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_user
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'User definitions' algorithm generated code

//End of 'User definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_user::cfm_user(sc_core::sc_module_name name) :
		cf_function_container(name), p_mq_Video("p_mq_Video"), p_mq_Response(
				"p_mq_Response"), p_mq_Request_0("p_mq_Request_0"), p_mq_Request_1(
				"p_mq_Request_1") {
	cf_function_container::init();
	Reading = new cfm_reading("Reading");
	Requesting = new cfm_requesting("Requesting");
	Watching = new cfm_watching("Watching");

	// connections
	Reading->p_mq_Response(p_mq_Response);
	Reading->p_mq_Request(p_mq_Request_0);

	Requesting->p_mq_Request(p_mq_Request_1);

	Watching->p_mq_Video(p_mq_Video);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User constructor' algorithm generated code

	//End of 'User constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_user::~cfm_user(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User destructor' algorithm generated code

	//End of 'User destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete Reading;
	delete Requesting;
	delete Watching;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_user::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User pre elaboration' algorithm generated code

	//End of 'User pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_user::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User post elaboration' algorithm generated code

	//End of 'User post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_user::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User post simulation' algorithm generated code

	//End of 'User post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_user::cb_init_attributes() {

// initialize function attributes

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_user::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'User initializations' algorithm generated code

	//End of 'User initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>