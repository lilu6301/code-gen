
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_videoprotocolstack
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator
 * for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_videoprotocolstack.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_softwaredefinedradioapp
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_videoprotocolstack
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'VideoProtocolStack definitions' algorithm generated code

// End of 'VideoProtocolStack definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_videoprotocolstack ::cfm_videoprotocolstack()
    : // instantiation of non-vector Event, MessageQueue, SharedVariable
      cf_function_container(name), cfm_videoprotocolstack_dp_if(),
      mq_IPToRTP("IPToRTP"), mq_MPEToIP("MPEToIP"),
      p_mq_NetToDVB("p_mq_NetToDVB"), p_mq_RTPToApp("p_mq_RTPToApp") {
  cf_function_container::init();
  // instantiation of models
  IPVideo = new cfm_ipvideo("IPVideo");
  MPETSL = new cfm_mpextsl("MPETSL");
  RTPUDP = new cfm_rtpudp("RTPUDP");
  // connections
  // model connect to relation
  IPVideo->p_mq_IPToRTP(mq_IPToRTP.p_target_socket);
  IPVideo->p_mq_MPEToIP(mq_MPEToIP.p_target_socket);
  // model connect to relation
  MPETSL->p_mq_MPEToIP(mq_MPEToIP.p_target_socket);
  // model connect to port
  MPETSL->p_mq_NetToDVB(p_mq_NetToDVB);
  // model connect to relation
  RTPUDP->p_mq_IPToRTP(mq_IPToRTP.p_target_socket);
  // model connect to port
  RTPUDP->p_mq_RTPToApp(p_mq_RTPToApp);
  cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_videoprotocolstack::~cfm_videoprotocolstack(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'VideoProtocolStack destructor' algorithm generated code

  // End of 'VideoProtocolStack destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
  // deconstruct for models
  delete IPVideo;
  delete MPETSL;
  delete RTPUDP;
}

//@{
void cfm_videoprotocolstack::cb_init_attributes() {

  // initialize function attributes

  return;
}
//@}

//@{
void cfm_videoprotocolstack::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'Router25 initializations' algorithm generated code

  // End of 'Router25 initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}
//<#!@READ-ONLY-SECTION-END@!#>