//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_torswitch
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of datacenter generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DATACENTER_TORSWITCH
#define COFS_MODEL_DATACENTER_TORSWITCH

/// Model Header includes start
#include <vector>
#include "cfm_datacenter_global.h"
#include "cfm_datacenter_global_types.h"
#include "cofluent.h"
#include "dp/cfm_torswitch_dp_if.h"
#include "cfm_inboundaggswitch.h"
#include "cfm_inboundserver.h"
#include "cfm_outboundaggswitch.h"
#include "cfm_outboundserver.h"
#include "cfm_torswitch_routingfunction.h"
//set of dataType, sort alphabetically
#include "dt/cft_defpacket.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'ToRSwitch includes' algorithm generated code

//End of 'ToRSwitch includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgToRSwitch Function ToRSwitch
//@{
///        \page dxpToRSwitch
//@{
///    \brief ToRSwitch function model start
class cfm_torswitch: public cf_core::cf_function_container,
		public cfm_torswitch_dp_if {
public:
	/// cfm_torswitch type define start
	/// relations typedef
//set of relation, sort alphabetically. format: cf_type<dataType> relation_name
	typedef cf_core::cf_message_queue<cft_defpacket> mq_MsgQInboundAGGSwitch_t;
	typedef cf_core::cf_message_queue<cft_defpacket> mq_MsgQInboundServer_t;
	typedef cf_core::cf_message_queue<cft_defpacket> mq_MsgQOutboundAGGSwitch_t;
	typedef cf_core::cf_message_queue<cft_defpacket> mq_MsgQOutboundServer_t;

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_mq_initiator_socket<cfm_torswitch, cft_defpacket> p_mq_MsgQServerToToRSwitch_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_torswitch, cft_defpacket> p_mq_MsgQToAggSwitch_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_torswitch, cft_defpacket> p_mq_MsgQToRack_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_torswitch, cft_defpacket> p_mq_MsgQToServer_t;
	/// cfm_torswitch type define end

	/// constructor
	cfm_torswitch(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_torswitch(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_mq_MsgQServerToToRSwitch_t* p_mq_MsgQServerToToRSwitch;
	p_mq_MsgQToAggSwitch_t p_mq_MsgQToAggSwitch;
	p_mq_MsgQToRack_t p_mq_MsgQToRack;
	p_mq_MsgQToServer_t* p_mq_MsgQToServer;
	//@}

public:
	/// \name functions
	//@{
//set of model, sort alphabetically. format: model_type* model_name
	cfm_inboundaggswitch* InboundAGGSwitch;
	std::vector<cfm_inboundserver*> InboundServer_vec;
	cfm_outboundaggswitch* OutboundAGGSwitch;
	std::vector<cfm_outboundserver*> OutboundServer_vec;
	cfm_torswitch_routingfunction* RoutingFunction;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

public:
	/// \name relations
	//@{
//set of relation, sort alphabetically. format: relation_type relation_name
	mq_MsgQInboundAGGSwitch_t mq_MsgQInboundAGGSwitch;
	std::vector<mq_MsgQInboundServer_t*> mq_MsgQInboundServer_vec;
	mq_MsgQOutboundAGGSwitch_t mq_MsgQOutboundAGGSwitch;
	std::vector<mq_MsgQOutboundServer_t*> mq_MsgQOutboundServer_vec;
	//@}

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'ToRSwitch local declarations' algorithm generated code

	//End of 'ToRSwitch local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief ToRSwitch function model end

//@}
//@}
#endif // COFS_MODEL_DATACENTER_TORSWITCH

//<#!@READ-ONLY-SECTION-END@!#>