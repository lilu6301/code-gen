//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_wrdmux
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for
 * SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_WRDMUX
#define COFS_MODEL_DDRMEMORY_WRDMUX

/// Model Header includes start
#include "behavior/cf_function_router.h"
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_wrdmux_dp_if.h"
// set of dataType, sort alphabetically
#include "dt/cft_defbrespchn.h"

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'WRDmux includes' algorithm generated code

// End of 'WRDmux includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgWRDmux Function WRDmux
//@{
///        \page dxpWRDmux
//@{
///    \brief WRDmux function model start
class cfm_wrdmux : public cf_core::cf_function_router, public cfm_wrdmux_dp_if {
public:
  /// cfm_wrdmux type define start

  /// constructor
  cfm_wrdmux(sc_core::sc_module_name name);

  /// destructor
  virtual ~cfm_wrdmux(void);

public:
  /// \name input/output ports

public:
  /// Overload function for WRDmux router destination method
  std::string cb_select_destination_name(cf_core::cf_payload_b *_trans);

protected:
  /// initialize attributes
  void cb_init_attributes(void);
  /// initialize definitions
  void cb_init_local_vars(void);

  /// Model private fields start
  /// Model private fields end

  /// \name user-defined local declarations
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux local declarations' algorithm generated code

  // End of 'WRDmux local declarations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
};
///    \brief WRDmux function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_WRDMUX

//<#!@READ-ONLY-SECTION-END@!#>