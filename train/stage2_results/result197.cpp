
/*
 * \class cfm_responseforward
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_responseforward.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_ddrmemory
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_responseforward
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_responseforward::cfm_responseforward(sc_core::sc_module_name name)
cf_function(name)
, cfm_responseforward_dp_if()
, p_mq_DQs("p_mq_DQs")
, p_mq_RequestInformation("p_mq_RequestInformation")
, p_mq_DataRead("p_mq_DataRead")
, p_mq_WriteAck("p_mq_WriteAck")

{
	cf_function::init();



	cf_function::elab_end();
}

cfm_responseforward::~cfm_responseforward(void) {

}

void cfm_responseforward::cb_before_elaboration(void) {

}

void cfm_responseforward::cb_end_of_elaboration(void) {

}

void cfm_responseforward::cb_end_of_simulation(void) {

}

void cfm_responseforward::cb_init_attributes() {

	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}

void cfm_responseforward::cb_init_local_vars(void) {

	isRequest = false;
	isAck = false;
	BlockSize = 4096;  //amount of data received then an interurpt is required.
	CurrentReceivedSize = 0;

}


