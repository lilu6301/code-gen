
/*
 * \class cfm_httptcp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of TCPIPStack generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_httptcp.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_tcpipstack
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_httptcp
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_httptcp::cfm_httptcp(sc_core::sc_module_name name)
cf_function_container(name)
, p_mq_IPToHTTP("p_mq_IPToHTTP")
, p_mq_HTTPToIP("p_mq_HTTPToIP")
, p_mq_HTTPToApp("p_mq_HTTPToApp")
, p_mq_AppToHTTP("p_mq_AppToHTTP")

{
	cf_function_container::init();
	HTTPTCP_Receive = new cfm_httptcp_receive
	("HTTPTCP_Receive");
	HTTPTCP_Send = new cfm_httptcp_send
	("HTTPTCP_Send");

	HTTPTCP_Receive->p_mq_AppToHTTP
	(p_mq_AppToHTTP
	);
	HTTPTCP_Receive->p_mq_HTTPToApp
	(p_mq_HTTPToApp
	);
	HTTPTCP_Receive->p_mq_HTTPToIP
	(p_mq_HTTPToIP
	);

	HTTPTCP_Send->p_mq_IPToHTTP
	(p_mq_IPToHTTP
	);
	HTTPTCP_Send->p_mq_HTTPToIP
	(p_mq_HTTPToIP
	);



	cf_function_container::elab_end();
}

cfm_httptcp::~cfm_httptcp(void) {

	delete HTTPTCP_Receive;	///ddd
	delete HTTPTCP_Send;	///ddd
}

void cfm_httptcp::cb_before_elaboration(void) {

}

void cfm_httptcp::cb_end_of_elaboration(void) {

}

void cfm_httptcp::cb_end_of_simulation(void) {

}

void cfm_httptcp::cb_init_attributes() {


	return;
}

void cfm_httptcp::cb_init_local_vars(void) {


}


