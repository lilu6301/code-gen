/*!
 * \class cfm_swinterface
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CompleteDevice generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_COMPLETEDEVICE_SWINTERFACE
#define COFS_MODEL_COMPLETEDEVICE_SWINTERFACE

#include "cfm_completedevice_global.h"
#include "cfm_completedevice_global_types.h"
#include "cofluent.h"
#include "dt/cft_defframe.h"
#include "dt/cft_defprocessingmode.h"

#include "mci/cfm_dpv.h"
#include "mci/cfm_storeframe.h"
#include <list>

class cfm_swinterface: public cf_core::cf_dpv_container, public virtual cfm_dpv, public virtual cfm_storeframe {
public:

	typedef cf_core::cf_ev_initiator_socket<cfm_swinterface> p_ev_startProcess_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_swinterface, cft_defframe> p_mq_inputFrame_t;
	typedef cf_core::cf_ev_initiator_socket<cfm_swinterface> p_ev_newFrame_t;
	typedef cf_core::cf_sv_initiator_socket<cfm_swinterface, cft_defprocessingmode> p_sv_processingMode_t;

	cfm_swinterface(sc_core::sc_module_name name);

	virtual ~cfm_swinterface(void);
	virtual void cb_before_elaboration(void);

	CF_DPV_REGISTER_IF_IMPL;
	CF_DPV_REGISTER_INT_IF_IMPL;
	CF_DPV_INTERRUPT_IF_IMPL;
	CF_DPV_INTERRUPT_INT_IF_IMPL;
	CF_DPV_COMMAND_IF_IMPL;

public:
	p_ev_startProcess_t p_ev_startProcess;
	p_mq_inputFrame_t p_mq_inputFrame;
	p_ev_newFrame_t p_ev_newFrame;
	p_sv_processingMode_t p_sv_processingMode;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);


	std::list<DefFrame> frame_memory;
	void storeOutputFrame(DefFrame* frame);

private:
private:
	DefFrame inputFrame;
	cft_defframe inputFrame_trans;
	DefProcessingMode processingMode;
	cft_defprocessingmode processingMode_trans;

};

#endif // COFS_MODEL_COMPLETEDEVICE_SWINTERFACE

