
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_wrdmux
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for
 * SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_wrdmux.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'WRDmux definitions' algorithm generated code

// End of 'WRDmux definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_wrdmux ::cfm_wrdmux()
    : // instantiation of non-vector Event, MessageQueue, SharedVariable
      cf_function_router(name), cfm_wrdmux_dp_if(),
      p_mq_BRESPchn("p_mq_BRESPchn"), p_mq_BRESPin("p_mq_BRESPin") {
  cf_function_router::init();
  // connections
  cf_function_router::elab_end();
}
//@}

/// \name destructor
//@{
cfm_wrdmux::~cfm_wrdmux(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux destructor' algorithm generated code

  // End of 'WRDmux destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_wrdmux::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux pre elaboration' algorithm generated code

  // End of 'WRDmux pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_wrdmux::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux post simulation' algorithm generated code

  // End of 'WRDmux post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_wrdmux::cb_init_attributes() {

  // initialize routing function attributes
  cfa_routing_time.init(cf_expr_duration(10, CF_NS));
  cfa_concurrency.init((cf_nonzero_count)1);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_wrdmux::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux initializations' algorithm generated code

  // End of 'WRDmux initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name Overload function for WRDmux router destination method
//@{
string cfm_wrdmux::cb_select_destination_name(cf_payload_b *_trans) {
  string source_name = get_source_name();
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'WRDmux destination' algorithm generated code
  DefBRESPchn *resp = ((cft_defbrespchn *)_trans)->get_data_ptr();
  if (resp != nullptr) {
    return "BRESPin";
  } else {
    return "BRESPchn";
  }
  // End of 'WRDmux destination' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
  return "";
}
//@}
/// \name Overload function for WRDmux router routing time method
//@{
cf_duration cfm_wrdmux::cb_routing_time(cf_payload_b *_trans) {
  return cf_expr_duration(10, CF_NS);
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>