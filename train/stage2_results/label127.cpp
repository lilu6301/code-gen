//<#!@READ-ONLY-SECTION-START@!#>
/*
* \class cfm_tlm2lt
* \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
* \details Simulation model of TLM2LT generated by C++ Generator for SystemC/TLM2
*/
/// Model Source includes start
#include "cfm_tlm2lt.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'TLM2LT definitions' algorithm generated code

//End of 'TLM2LT definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_tlm2lt ::cfm_tlm2lt() : 
//instantiation of non-vector Event, MessageQueue, SharedVariable
cf_application(),ev_Sync("Sync"),ev_Sync2("Sync2"),ev_Sync3("Sync3"),mq_InitiatorReader("InitiatorReader"),mq_InitiatorWriter("InitiatorWriter"),mq_ReaderResponse("ReaderResponse"),mq_ReferenceQueue("ReferenceQueue"),mq_ReferenceQueue2("ReferenceQueue2"),mq_ReferenceQueue3("ReferenceQueue3"),mq_TargetRequest("TargetRequest"),mq_TargetResponse("TargetResponse"),mq_TargetWrapper("TargetWrapper"){
cf_application::init();
//instantiation of models
Reader = new cfm_reader("Reader");
TLM2Platfom = new cfm_tlm2platfom("TLM2Platfom");
Target = new cfm_target("Target");
Target_2 = new cfm_target_2("Target_2");
Writer = new cfm_writer("Writer");
//connections
//model connect to relation
Reader->p_mq_InitiatorReader(mq_InitiatorReader.p_target_socket);
Reader->p_mq_ReaderResponse(mq_ReaderResponse.p_target_socket);
Reader->p_mq_ReferenceQueue3(mq_ReferenceQueue3.p_target_socket);
Reader->p_ev_Sync(ev_Sync.p_target_socket);
//model connect to relation
Target->p_mq_ReferenceQueue2(mq_ReferenceQueue2.p_target_socket);
Target->p_ev_Sync2(ev_Sync2.p_target_socket);
Target->p_mq_TargetWrapper(mq_TargetWrapper.p_target_socket);
//model connect to relation
Target_2->p_mq_ReferenceQueue(mq_ReferenceQueue.p_target_socket);
Target_2->p_ev_Sync3(ev_Sync3.p_target_socket);
Target_2->p_mq_TargetRequest(mq_TargetRequest.p_target_socket);
Target_2->p_mq_TargetResponse(mq_TargetResponse.p_target_socket);
//model connect to relation
Writer->p_mq_InitiatorWriter(mq_InitiatorWriter.p_target_socket);
Writer->p_mq_ReferenceQueue(mq_ReferenceQueue.p_target_socket);
Writer->p_mq_ReferenceQueue2(mq_ReferenceQueue2.p_target_socket);
Writer->p_mq_ReferenceQueue3(mq_ReferenceQueue3.p_target_socket);
Writer->p_ev_Sync(ev_Sync.p_target_socket);
Writer->p_ev_Sync2(ev_Sync2.p_target_socket);
Writer->p_ev_Sync3(ev_Sync3.p_target_socket);
cf_application::elab_end();
}
//@}

/// \name destructor
//@{
cfm_tlm2lt::~cfm_tlm2lt(void) {
//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'TLM2LT destructor' algorithm generated code

//End of 'TLM2LT destructor' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
//deconstruct for models
delete Reader;
delete TLM2Platfom;
delete Target;
delete Target_2;
delete Writer;
}


//@{
void cfm_tlm2lt::cb_init_attributes() {

// initialize function attributes

	return;
}
//@}

//@{
void cfm_tlm2lt::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'Router25 initializations' algorithm generated code

	//End of 'Router25 initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
//<#!@READ-ONLY-SECTION-END@!#>