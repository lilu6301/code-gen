
//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_rfcomm_layer
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Bluetooth_IPs generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_BLUETHREOUT_IPS_RFCOMM_LAYER
#define COFS_MODEL_BLUETHREOUT_IPS_RFCOMM_LAYER

/// Model Header includes start
#include "cfm_bluetooth_ips_global.h"
#include "cfm_bluetooth_ips_global_types.h"
#include "cofluent.h"
#include "dp/cfm_rfcomm_layer_dp_if.h"
#include "cfm_creditsordata.h"
#include "cfm_rfcomm_receive.h"
#include "cfm_rfcomm_send.h"
#include "cfm_rfc_out.h"
//set of dataType, sort alphabetically
#include "dt/cft_defobex_in.h"
#include "dt/cft_defobex_out.h"
#include "dt/cft_defrfcomm_in.h"
#include "dt/cft_defrfcomm_out.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'RFCOMM_Layer includes' algorithm generated code

//End of 'RFCOMM_Layer includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgRFCOMM_Layer Function RFCOMM_Layer
//@{
///        \page dxpRFCOMM_Layer
//@{
///    \brief RFCOMM_Layer function model start
class cfm_rfcomm_layer: public cf_core::cf_function_container,
		public cfm_rfcomm_layer_dp_if {
public:
	/// cfm_rfcomm_layer type define start
	/// relations typedef
//set of relation, sort alphabetically. format: cf_type<dataType> relation_name
	typedef cf_core::cf_message_queue<cft_defrfcomm_in> mq_RFC_Cdts_t;
	typedef cf_core::cf_message_queue<cft_defrfcomm_in> mq_RFC_Data_t;
	typedef cf_core::cf_message_queue<cft_defrfcomm_out> mq_RFC_Out1_t;
	typedef cf_core::cf_message_queue<cft_defrfcomm_out> mq_RFC_Out2_t;

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_mq_initiator_socket<cfm_rfcomm_layer, cft_defobex_in> p_mq_OBEX_In_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_rfcomm_layer, cft_defobex_out> p_mq_OBEX_Out_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_rfcomm_layer, cft_defrfcomm_in> p_mq_RFCOMM_In_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_rfcomm_layer, cft_defrfcomm_out> p_mq_RFCOMM_Out_t;
	/// cfm_rfcomm_layer type define end

	/// constructor
	cfm_rfcomm_layer(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_rfcomm_layer(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_mq_OBEX_In_t p_mq_OBEX_In;
	p_mq_OBEX_Out_t p_mq_OBEX_Out;
	p_mq_RFCOMM_In_t p_mq_RFCOMM_In;
	p_mq_RFCOMM_Out_t p_mq_RFCOMM_Out;
	//@}

public:
	/// \name functions
	//@{
//set of model, sort alphabetically. format: model_type* model_name
	cfm_creditsordata* CreditsOrData;
	cfm_rfcomm_receive* RFCOMM_Receive;
	cfm_rfcomm_send* RFCOMM_Send;
	cfm_rfc_out* RFC_Out;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

public:
	/// \name relations
	//@{
//set of relation, sort alphabetically. format: relation_type relation_name
	mq_RFC_Cdts_t mq_RFC_Cdts;
	mq_RFC_Data_t mq_RFC_Data;
	mq_RFC_Out1_t mq_RFC_Out1;
	mq_RFC_Out2_t mq_RFC_Out2;
	//@}

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer local declarations' algorithm generated code

	//End of 'RFCOMM_Layer local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief RFCOMM_Layer function model end

//@}
//@}
#endif // COFS_MODEL_BLUETHREOUT_IPS_RFCOMM_LAYER

//<#!@READ-ONLY-SECTION-END@!#>