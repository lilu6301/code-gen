//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_collectrequests
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_COLLECTREQUESTS
#define COFS_MODEL_DDRMEMORY_COLLECTREQUESTS

/// Model Header includes start
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_collectrequests_dp_if.h"
#include "dt/cft_deflistrequestsptr.h"
#include "dt/cft_defmemreadrequest.h"
#include "dt/cft_defmemwriterequest.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'CollectRequests includes' algorithm generated code

//End of 'CollectRequests includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgCollectRequests Function CollectRequests
//@{
///        \page dxpCollectRequests
//@{
///    \brief CollectRequests function model start
class cfm_collectrequests: public cf_core::cf_function, public cfm_collectrequests_dp_if {
public:
	/// cfm_collectrequests type define start

	/// ports typedef
	typedef cf_core::cf_sv_initiator_socket<cfm_collectrequests, cft_deflistrequestsptr> p_sv_ListRequestsPtr_t;
	typedef cf_core::cf_ev_initiator_socket<cfm_collectrequests> p_ev_RequestCounter_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_collectrequests, cft_defmemreadrequest> p_mq_MemReadRequest_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_collectrequests, cft_defmemwriterequest> p_mq_MemWriteRequest_t;
	/// cfm_collectrequests type define end

	/// constructor
	cfm_collectrequests(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_collectrequests(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
	p_sv_ListRequestsPtr_t p_sv_ListRequestsPtr;
	p_ev_RequestCounter_t p_ev_RequestCounter;
	p_mq_MemReadRequest_t p_mq_MemReadRequest;
	p_mq_MemWriteRequest_t p_mq_MemWriteRequest;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'CollectRequests local declarations' algorithm generated code
	DefListRequestsPtr currentRequestPtr;
	DefListRequestsPtr prevRequestPtr;
	int memID;
	//End of 'CollectRequests local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief CollectRequests function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_COLLECTREQUESTS

//<#!@READ-ONLY-SECTION-END@!#>