/*
 * \class cfm_completedevice
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CompleteDevice generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_completedevice.h"
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_completedevice::cfm_completedevice(sc_core::sc_module_name name)
cf_application(name)
, sv_inputStream("inputStream"
)
, ev_newFrame("newFrame"
)
, sv_outputStream("outputStream"
)

{
	cf_application::init();
	device = new cfm_device
	("device");
	testBench = new cfm_testbench
	("testBench");

	device->p_ev_newFrame
	(ev_newFrame
			.p_target_socket
	);

	testBench
	->dpv(device
			->dpv
	);
	testBench->p_ev_newFrame
	(ev_newFrame
			.p_target_socket
	);
	testBench->p_sv_inputStream
	(sv_inputStream
			.p_target_socket
	);
	testBench->p_sv_outputStream
	(sv_outputStream
			.p_target_socket
	);



	cf_application::elab_end();
}

cfm_completedevice::~cfm_completedevice(void) {

	delete device;	///ddd
	delete testBench;	///ddd
}

void cfm_completedevice::cb_before_elaboration(void) {

}

void cfm_completedevice::cb_end_of_elaboration(void) {

}

void cfm_completedevice::cb_end_of_simulation(void) {

}

void cfm_completedevice::cb_init_attributes() {

	sv_inputStream.cfa_write_time.init(cf_expr_duration(1, CF_NS));
	sv_inputStream.cfa_read_time.init(cf_expr_duration(1, CF_NS));
	sv_inputStream.cfa_semaphore.init(false);
	sv_inputStream.cfa_concurrency.init((cf_nonzero_count) 1);
	ev_newFrame.cfa_set_time.init(cf_expr_duration(0, CF_NS));
	ev_newFrame.cfa_get_time.init(cf_expr_duration(0, CF_NS));
	ev_newFrame.cfa_event_policy.init(CF_EV_POLICY_BOOLEAN);
	sv_outputStream.cfa_write_time.init(cf_expr_duration(1, CF_NS));
	sv_outputStream.cfa_read_time.init(cf_expr_duration(1, CF_NS));
	sv_outputStream.cfa_semaphore.init(false);
	sv_outputStream.cfa_concurrency.init((cf_nonzero_count) 1);

	return;
}

void cfm_completedevice::cb_init_local_vars(void) {


}


