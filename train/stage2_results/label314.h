//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_hwdevicetest
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of HwDeviceModel generated by C++ Generator for
 * SystemC/TLM2
 */
#ifndef COFS_MODEL_HWDEVICEMODEL_HWDEVICETEST
#define COFS_MODEL_HWDEVICEMODEL_HWDEVICETEST

/// Model Header includes start
#include "cfm_hwdevicemodel_global.h"
#include "cfm_hwdevicemodel_global_types.h"
#include "cfm_hwmodel.h"
#include "cfm_hwtestbench.h"
#include "cofluent.h"
// set of dataType, sort alphabetically
#include "dt/cft_defframe.h"
#include "dt/cft_defprocessingmode.h"

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'hwDeviceTest includes' algorithm generated code

// End of 'hwDeviceTest includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxghwDeviceTest Function hwDeviceTest
//@{
///        \page dxphwDeviceTest
//@{
///    \brief hwDeviceTest function model start
class cfm_hwdevicetest : public cf_core::cf_function_container {
public:
  /// cfm_hwdevicetest type define start
  /// relations typedef
  // set of relation, sort alphabetically. format: cf_type<dataType>
  // relation_name
  typedef cf_core::cf_event ev_startProcess_t;
  typedef cf_core::cf_message_queue<cft_defframe> mq_inputFrame_t;
  typedef cf_core::cf_message_queue<cft_defframe> mq_outputFrame_t;
  typedef cf_core::cf_shared_variable<cft_defprocessingmode>
      sv_processingMode_t;

  /// ports typedef
  // set of port, sort alphabetically, format: cf_type<dataType> port_name
  typedef cf_core::cf_sv_initiator_socket<cfm_hwdevicetest, cfm_defframe>
      p_sv_inputStream_t;
  typedef cf_core::cf_sv_initiator_socket<cfm_hwdevicetest, cfm_defframe>
      p_sv_outputStream_t; /// cfm_hwdevicetest type define end

  /// constructor
  cfm_hwdevicetest(sc_core::sc_module_name name);

  /// destructor
  virtual ~cfm_hwdevicetest(void);

public:
  /// \name input/output ports
  //@{
  // set of port, sort alphabetically. format: port_type port_name
  p_sv_inputStream_t p_sv_inputStream;
  p_sv_outputStream_t p_sv_outputStream;
  //@}

public:
  /// \name functions
  //@{
  // set of model, sort alphabetically. format: model_type* model_name
  cfm_hwmodel *hwModel;
  cfm_hwtestbench *hwTestBench;
  //@}

protected:
  /// initialize attributes
  void cb_init_attributes(void);
  /// initialize definitions
  void cb_init_local_vars(void);

public:
  /// \name relations
  //@{
  // set of relation, sort alphabetically. format: relation_type relation_name
  ev_startProcess_t ev_startProcess;
  mq_inputFrame_t mq_inputFrame;
  mq_outputFrame_t mq_outputFrame;
  sv_processingMode_t sv_processingMode;
  //@}

  /// Model private fields start
  /// Model private fields end

  /// \name user-defined local declarations
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'hwDeviceTest local declarations' algorithm generated code

  // End of 'hwDeviceTest local declarations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
};
///    \brief hwDeviceTest function model end

//@}
//@}
#endif // COFS_MODEL_HWDEVICEMODEL_HWDEVICETEST

//<#!@READ-ONLY-SECTION-END@!#>