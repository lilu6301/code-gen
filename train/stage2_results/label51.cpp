//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_ipcall_receive
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++
 * Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_ipcall_receive.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_ipcall
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_ipcall_receive
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'IPCall_Receive definitions' algorithm generated code

// End of 'IPCall_Receive definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_ipcall_receive ::cfm_ipcall_receive()
    : // instantiation of non-vector Event, MessageQueue, SharedVariable
      cf_function(name), cfm_ipcall_receive_dp_if(),
      p_mq_IPToHTTP("p_mq_IPToHTTP"), p_mq_UMTSToIP("p_mq_UMTSToIP") {
  cf_function::init();
  // connections
  cf_function::elab_end();
}
//@}

/// \name destructor
//@{
cfm_ipcall_receive::~cfm_ipcall_receive(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'IPCall_Receive destructor' algorithm generated code

  // End of 'IPCall_Receive destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_ipcall_receive::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'IPCall_Receive pre elaboration' algorithm generated code

  // End of 'IPCall_Receive pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_ipcall_receive::cb_end_of_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'IPCall_Receive post elaboration' algorithm generated code

  // End of 'IPCall_Receive post elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_ipcall_receive::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'IPCall_Receive post simulation' algorithm generated code

  // End of 'IPCall_Receive post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_ipcall_receive::cb_init_attributes() {

  // initialize function attributes
  cfa_cycle_period.init(cf_expr_time(10, CF_NS));
  cfa_scope.init(CF_FCT_SYSTEM);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_ipcall_receive::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'IPCall_Receive initializations' algorithm generated code

  // End of 'IPCall_Receive initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>