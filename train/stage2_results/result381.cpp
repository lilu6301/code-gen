
/*
 * \class cfm_startfunc
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of FuncClockApp generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_startfunc.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_funcclockapp
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_startfunc
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_startfunc::cfm_startfunc(sc_core::sc_module_name name)
cf_function(name)
, cfm_startfunc_dp_if()
, p_ev_StartEv("p_ev_StartEv")

{
	cf_function::init();



	cf_function::elab_end();
}

cfm_startfunc::~cfm_startfunc(void) {

}

void cfm_startfunc::cb_before_elaboration(void) {

}

void cfm_startfunc::cb_end_of_elaboration(void) {

}

void cfm_startfunc::cb_end_of_simulation(void) {

}

void cfm_startfunc::cb_init_attributes() {

	cfa_cycle_period.init(cf_expr_time(10, CF_NS));
	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}

void cfm_startfunc::cb_init_local_vars(void) {


}


