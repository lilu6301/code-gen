/*
 * \class cfm_server
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of datacenter generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_server.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_rack
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_server
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_server::cfm_server(sc_core::sc_module_name name)
cf_function_container(name)
, cfm_server_dp_if()
, p_mq_MsgQServerToToRSwitch("p_mq_MsgQServerToToRSwitch")
, p_mq_MsgQToServer("p_mq_MsgQToServer")

{
	cf_function_container::init();
	Consumer = new cfm_consumer
	("Consumer");
	Producer = new cfm_producer
	("Producer");

	Consumer->p_mq_MsgQToServer
	(p_mq_MsgQToServer
	);

	Producer->p_mq_MsgQServerToToRSwitch
	(p_mq_MsgQServerToToRSwitch
	);



	cf_function_container::elab_end();
}

cfm_server::~cfm_server(void) {

	delete Consumer;	///ddd
	delete Producer;	///ddd
}

void cfm_server::cb_before_elaboration(void) {

}

void cfm_server::cb_end_of_elaboration(void) {

}

void cfm_server::cb_end_of_simulation(void) {

}

void cfm_server::cb_init_attributes() {


	return;
}

void cfm_server::cb_init_local_vars(void) {


}


