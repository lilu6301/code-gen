/<#!@READ-ONLY-SECTION-START@!#>
/*
* \class cfm_producer
* \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
* \details Simulation model of ApplicationModelRefinement generated by C++ Generator for SystemC/TLM2
*/
/// Model Source includes start
#include "cfm_producer.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'Producer definitions' algorithm generated code

//End of 'Producer definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_producer ::cfm_producer() : 
//instantiation of non-vector Event, MessageQueue, SharedVariable
cf_function(),p_mq_Ack("p_mq_Ack"),p_mq_Msg("p_mq_Msg"),p_sv_DataVar("p_sv_DataVar"),p_ev_Req("p_ev_Req"),p_sv_TestProd("p_sv_TestProd"){
cf_function_container::init();
//instantiation of models
Generator = new cfm_generator("Generator");
Sender = new cfm_sender("Sender");
//connections
//model connect to port
Generator->p_mq_DataVar(p_mq_DataVar);
Generator->p_ev_Req(p_ev_Req);
Generator->p_sv_TestProd(p_sv_TestProd);
//model connect to port
Sender->p_mq_Ack(p_mq_Ack);
Sender->p_mq_Msg(p_mq_Msg);
Sender->p_sv_DataVar(p_sv_DataVar);
Sender->p_ev_Req(p_ev_Req);
cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_producer::~cfm_producer(void) {
//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'Producer destructor' algorithm generated code

//End of 'Producer destructor' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
//deconstruct for models
delete Generator;
delete Sender;
}


//@{
void cfm_producer::cb_init_attributes() {

// initialize function attributes

	return;
}
//@}

//@{
void cfm_producer::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'Router25 initializations' algorithm generated code

	//End of 'Router25 initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}
//<#!@READ-ONLY-SECTION-END@!#>