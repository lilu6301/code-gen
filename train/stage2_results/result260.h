
/*!
 * \class cfm_producer
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Blackbox generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_BLACKBOX_PRODUCER
#define COFS_MODEL_BLACKBOX_PRODUCER

#include "cfm_blackbox_global.h"
#include "cfm_blackbox_global_types.h"
#include "cofluent.h"
#include "cfm_generator.h"
#include "cfm_sender.h"
#include "dt/cft_defmsg.h"
#include "dt/cft_defack.h"
#include "dt/cft_deftestprod.h"
#include "dt/cft_defdatavar.h"



class cfm_producer: public cf_core::cf_function_container {
public:
	typedef cf_core::cf_shared_variable<cft_defdatavar> sv_DataVar_t;
	typedef cf_core::cf_event ev_Req_t;
	typedef cf_core::cf_shared_variable<cft_deftestprod> sv_TestProd_t;

	typedef cf_core::cf_mq_initiator_socket<cfm_producer, cft_defmsg> p_mq_Msg_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_producer, cft_defack> p_mq_Ack_t;

	cfm_producer(sc_core::sc_module_name name);

	virtual ~cfm_producer(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	p_mq_Msg_t p_mq_Msg;
	p_mq_Ack_t p_mq_Ack;

public:
	cfm_generator* Generator;
	cfm_sender* Sender;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);

public:
	sv_DataVar_t sv_DataVar;
	ev_Req_t ev_Req;
	sv_TestProd_t sv_TestProd;




};

#endif // COFS_MODEL_BLACKBOX_PRODUCER

