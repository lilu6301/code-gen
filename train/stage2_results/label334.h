//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_bt_stack
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Bluetooth_IPs generated by C++ Generator for
 * SystemC/TLM2
 */
#ifndef COFS_MODEL_BLUETOOTH_IPS_BT_STACK
#define COFS_MODEL_BLUETOOTH_IPS_BT_STACK

/// Model Header includes start
#include "cfm_baseband_layer.h"
#include "cfm_bluetooth_ips_global.h"
#include "cfm_bluetooth_ips_global_types.h"
#include "cfm_l2cap_layer.h"
#include "cfm_obex_layer.h"
#include "cfm_rfcomm_layer.h"
#include "cofluent.h"
#include "dp/cfm_bt_stack_dp_if.h"
// set of dataType, sort alphabetically
#include "dt/cft_defbaseband.h"
#include "dt/cft_defdatain.h"
#include "dt/cft_defdataout.h"
#include "dt/cft_defl2cap_in.h"
#include "dt/cft_defl2cap_out.h"
#include "dt/cft_defobex_in.h"
#include "dt/cft_defobex_out.h"
#include "dt/cft_defreadwrite.h"
#include "dt/cft_defrfcomm_in.h"
#include "dt/cft_defrfcomm_out.h"

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'BT_Stack includes' algorithm generated code

// End of 'BT_Stack includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgBT_Stack Function BT_Stack
//@{
///        \page dxpBT_Stack
//@{
///    \brief BT_Stack function model start
class cfm_bt_stack : public cf_core::cf_function_container,
                     public cfm_bt_stack_dp_if {
public:
  /// cfm_bt_stack type define start
  /// relations typedef
  // set of relation, sort alphabetically. format: cf_type<dataType>
  // relation_name
  typedef cf_core::cf_message_queue<cft_defl2cap_in> mq_L2CAP_In_t;
  typedef cf_core::cf_message_queue<cft_defl2cap_out> mq_L2CAP_Out_t;
  typedef cf_core::cf_message_queue<cft_defobex_in> mq_OBEX_In_t;
  typedef cf_core::cf_message_queue<cft_defobex_out> mq_OBEX_Out_t;
  typedef cf_core::cf_message_queue<cft_defrfcomm_in> mq_RFCOMM_In_t;
  typedef cf_core::cf_message_queue<cft_defrfcomm_out> mq_RFCOMM_Out_t;

  /// ports typedef
  // set of port, sort alphabetically, format: cf_type<dataType> port_name
  typedef cf_core::cf_ev_initiator_socket<datatype> p_ev_WrOK_t;
  typedef cf_core::cf_ev_initiator_socket<datatype> p_ev_startEv_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_bt_stack, cfm_defbaseband>
      p_mq_BaseBand_In_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_bt_stack, cfm_defbaseband>
      p_mq_BaseBand_Out_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_bt_stack, cfm_defdatain>
      p_mq_DataIn_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_bt_stack, cfm_defdataout>
      p_mq_DataOut_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_bt_stack, cfm_defreadwrite>
      p_mq_ReadWrite_t;
  /// cfm_bt_stack type define end

  /// constructor
  cfm_bt_stack(sc_core::sc_module_name name);

  /// destructor
  virtual ~cfm_bt_stack(void);

public:
  /// \name input/output ports
  //@{
  // set of port, sort alphabetically. format: port_type port_name
  p_ev_WrOK_t p_ev_WrOK;
  p_ev_startEv_t p_ev_startEv;
  p_mq_BaseBand_In_t p_mq_BaseBand_In;
  p_mq_BaseBand_Out_t p_mq_BaseBand_Out;
  p_mq_DataIn_t p_mq_DataIn;
  p_mq_DataOut_t p_mq_DataOut;
  p_mq_ReadWrite_t p_mq_ReadWrite;
  //@}

public:
  /// \name functions
  //@{
  // set of model, sort alphabetically. format: model_type* model_name
  cfm_baseband_layer *BaseBand_Layer;
  cfm_l2cap_layer *L2CAP_Layer;
  cfm_obex_layer *OBEX_Layer;
  cfm_rfcomm_layer *RFCOMM_Layer;
  //@}

protected:
  /// initialize attributes
  void cb_init_attributes(void);
  /// initialize definitions
  void cb_init_local_vars(void);

public:
  /// \name relations
  //@{
  // set of relation, sort alphabetically. format: relation_type relation_name
  mq_L2CAP_In_t mq_L2CAP_In;
  mq_L2CAP_Out_t mq_L2CAP_Out;
  mq_OBEX_In_t mq_OBEX_In;
  mq_OBEX_Out_t mq_OBEX_Out;
  mq_RFCOMM_In_t mq_RFCOMM_In;
  mq_RFCOMM_Out_t mq_RFCOMM_Out;
  //@}

  /// Model private fields start
  /// Model private fields end

  /// \name user-defined local declarations
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BT_Stack local declarations' algorithm generated code

  // End of 'BT_Stack local declarations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
};
///    \brief BT_Stack function model end

//@}
//@}
#endif // COFS_MODEL_BLUETOOTH_IPS_BT_STACK

//<#!@READ-ONLY-SECTION-END@!#>