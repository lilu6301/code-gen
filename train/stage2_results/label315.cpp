//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_hwdevicetest
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of HwDeviceModel generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_hwdevicetest.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_hwdevicemodel
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_hwdevicetest
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'hwDeviceTest definitions' algorithm generated code

//End of 'hwDeviceTest definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_hwdevicetest::cfm_hwdevicetest(sc_core::sc_module_name name) :
		cf_function_container(name), p_sv_inputStream("p_sv_inputStream"), p_sv_outputStream(
				"p_sv_outputStream"), mq_inputFrame("inputFrame"), mq_outputFrame(
				"outputFrame"), sv_processingMode("processingMode"), ev_startProcess(
				"startProcess") {
	cf_function_container::init();
	hwModel = new cfm_hwmodel("hwModel");
	hwTestBench = new cfm_hwtestbench("hwTestBench");

	// connections
	hwModel->p_ev_startProcess(ev_startProcess.p_target_socket);
	hwModel->p_mq_inputFrame(mq_inputFrame.p_target_socket);
	hwModel->p_mq_outputFrame(mq_outputFrame.p_target_socket);
	hwModel->p_sv_processingMode(sv_processingMode.p_target_socket);

	hwTestBench->p_ev_startProcess(ev_startProcess.p_target_socket);
	hwTestBench->p_mq_inputFrame(mq_inputFrame.p_target_socket);
	hwTestBench->p_sv_processingMode(sv_processingMode.p_target_socket);
	hwTestBench->p_mq_outputFrame(mq_outputFrame.p_target_socket);
	hwTestBench->p_sv_inputStream(p_sv_inputStream);
	hwTestBench->p_sv_outputStream(p_sv_outputStream);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest constructor' algorithm generated code

	//End of 'hwDeviceTest constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_hwdevicetest::~cfm_hwdevicetest(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest destructor' algorithm generated code

	//End of 'hwDeviceTest destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete hwModel;
	delete hwTestBench;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_hwdevicetest::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest pre elaboration' algorithm generated code

	//End of 'hwDeviceTest pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_hwdevicetest::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest post elaboration' algorithm generated code

	//End of 'hwDeviceTest post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_hwdevicetest::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest post simulation' algorithm generated code

	//End of 'hwDeviceTest post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_hwdevicetest::cb_init_attributes() {

// initialize function attributes
// initialize relations attributes
	mq_inputFrame.cfa_send_time.init(cf_expr_duration(1, CF_NS));
	mq_inputFrame.cfa_receive_time.init(cf_expr_duration(1, CF_NS));
	mq_inputFrame.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_inputFrame.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_inputFrame.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_inputFrame.cfa_send_threshold.init((cf_nonzero_count) 1);
	mq_inputFrame.cfa_receive_threshold.init((cf_nonzero_count) 1);
	mq_outputFrame.cfa_send_time.init(cf_expr_duration(1, CF_NS));
	mq_outputFrame.cfa_receive_time.init(cf_expr_duration(1, CF_NS));
	mq_outputFrame.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_outputFrame.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_outputFrame.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_outputFrame.cfa_send_threshold.init((cf_nonzero_count) 1);
	mq_outputFrame.cfa_receive_threshold.init((cf_nonzero_count) 1);
	sv_processingMode.cfa_write_time.init(cf_expr_duration(1, CF_NS));
	sv_processingMode.cfa_read_time.init(cf_expr_duration(1, CF_NS));
	sv_processingMode.cfa_semaphore.init(false);
	sv_processingMode.cfa_concurrency.init((cf_nonzero_count) 1);
	ev_startProcess.cfa_set_time.init(cf_expr_duration(1, CF_NS));
	ev_startProcess.cfa_get_time.init(cf_expr_duration(1, CF_NS));
	ev_startProcess.cfa_event_policy.init(CF_EV_POLICY_BOOLEAN);

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_hwdevicetest::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'hwDeviceTest initializations' algorithm generated code

	//End of 'hwDeviceTest initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>