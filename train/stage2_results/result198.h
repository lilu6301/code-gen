
/*!
 * \class cfm_arbitration
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of NetworkSwitch generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_NETWORKSWITCH_ARBITRATION
#define COFS_MODEL_NETWORKSWITCH_ARBITRATION

#include "cfm_networkswitch_global.h"
#include "cfm_networkswitch_global_types.h"
#include "cofluent.h"
#include "dp/cfm_arbitration_dp_if.h"
#include "dt/cft_defwriteack.h"
#include "dt/cft_defrequestinformation.h"
#include "dt/cft_deflatelistrequests.h"
#include "dt/cft_defmemory.h"
#include "dt/cft_defroutingfunction.h"



class cfm_arbitration: public cf_core::cf_function, public cfm_arbitration_dp_if {
public:

	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defwriteack> p_mq_WriteAck_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defrequestinformation> p_mq_RequestInformation_t;
	typedef cf_core::cf_sv_initiator_socket<cfm_arbitration, cft_deflatelistrequests> p_sv_ListRequestsPtr_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defmemory> p_mq_MemReadQ_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defmemory> p_mq_MemWriteQ_t;
	typedef cf_core::cf_ev_initiator_socket<cfm_arbitration> p_ev_RequestCounter_t;

	cfm_arbitration(sc_core::sc_module_name name);

	virtual ~cfm_arbitration(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	p_mq_WriteAck_t p_mq_WriteAck;
	p_mq_RequestInformation_t p_mq_RequestInformation;
	p_sv_ListRequestsPtr_t p_sv_ListRequestsPtr;
	p_mq_MemReadQ_t p_mq_MemReadQ;
	p_mq_MemWriteQ_t p_mq_MemWriteQ;
	p_ev_RequestCounter_t p_ev_RequestCounter;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);


	int counter;
	int index;
	cf_dt::cf_time transfer_time;
	cf_dt::cf_time latency_time;
	cft_defroutingfunction* routing;
	int request_data_size;
	int transId;
	int num_of_requests;
	bool isWrite;
	bool isPostedWrite;
	int response_data_size;
	int transId_response;
	int index_response;
	int num_of_ack;

};

#endif // COFS_MODEL_NETWORKSWITCH_ARBITRATION

