
/*!
 * \class cfm_arbitration
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_ARBITRATION
#define COFS_MODEL_DDRMEMORY_ARBITRATION

#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_arbitration_dp_if.h"
#include "dt/cft_defwriteack.h"
#include "dt/cft_defrequestinformation.h"
#include "dt/cft_deflistrequestsptr.h"
#include "dt/cft_defrequests2memory.h"



class cfm_arbitration: public cf_core::cf_function, public cfm_arbitration_dp_if {
public:

	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defwriteack> p_mq_WriteAck_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defrequestinformation> p_mq_RequestInformation_t;
	typedef cf_core::cf_sv_initiator_socket<cfm_arbitration, cft_deflistrequestsptr> p_sv_ListRequestsPtr_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defrequests2memory> p_mq_Requests2Memory_t;
	typedef cf_core::cf_ev_initiator_socket<cfm_arbitration> p_ev_RequestCounter_t;

	cfm_arbitration(sc_core::sc_module_name name);

	virtual ~cfm_arbitration(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	p_mq_WriteAck_t p_mq_WriteAck;
	p_mq_RequestInformation_t p_mq_RequestInformation;
	p_sv_ListRequestsPtr_t p_sv_ListRequestsPtr;
	p_mq_Requests2Memory_t p_mq_Requests2Memory;
	p_ev_RequestCounter_t p_ev_RequestCounter;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);


	int counter;
	int requests_memory_size;
	int remaining_data;
	unsigned long tid;
	int dma_size;
	cf_time send_time;
	cf_time total_send_time;
	cf_throughput bus_throughput;

};

#endif // COFS_MODEL_DDRMEMORY_ARBITRATION

