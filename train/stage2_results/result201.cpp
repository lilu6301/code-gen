
/*
 * \class cfm_ddrcommandgeneration
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_ddrcommandgeneration.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_ddrmemory
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_ddrcommandgeneration
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_ddrcommandgeneration::cfm_ddrcommandgeneration(sc_core::sc_module_name name)
cf_function(name)
, cfm_ddrcommandgeneration_dp_if()
, p_sv_MemoryStatus("p_sv_MemoryStatus")
, p_mq_Requests2Memory("p_mq_Requests2Memory")
, p_mq_DDRCommand("p_mq_DDRCommand")

{
	cf_function::init();



	cf_function::elab_end();
}

cfm_ddrcommandgeneration::~cfm_ddrcommandgeneration(void) {

}

void cfm_ddrcommandgeneration::cb_before_elaboration(void) {

}

void cfm_ddrcommandgeneration::cb_end_of_elaboration(void) {

}

void cfm_ddrcommandgeneration::cb_end_of_simulation(void) {

}

void cfm_ddrcommandgeneration::cb_init_attributes() {

	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}

void cfm_ddrcommandgeneration::cb_init_local_vars(void) {

	isRequest = false;
	isAck = false;
	BlockSize = 4096;  //amount of data received then an interurpt is required.
	CurrentReceivedSize = 0;

	message_time_stamp = cf_dt::cf_time(0, CF_NS);
	message_size = cf_dt::cf_data_size(0, CF_BYTE);
	pcie_throughput = DP_PCIe_BUS_THROUGHPUT_PER_LINK_WAY.get_value() * 4;
	total_pcie_running_time = cf_dt::cf_time(0, CF_SEC);
	total_pcie_data_processed = cf_dt::cf_data_size(0, CF_MBYTE);
	disk_read_throughput = DP_DISK_READ_THROUGHPUT.get_value();
	disk_write_throughput = DPDiskWrSp.get_value();
}


