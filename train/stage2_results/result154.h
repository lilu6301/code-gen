
//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_target
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for
 * SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_TARGET
#define COFS_MODEL_DDRMEMORY_TARGET

/// Model Header includes start
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cfm_memory.h"
#include "cfm_memorycontroller.h"
#include "cofluent.h"
#include "dp/cfm_target_dp_if.h"
#include <vector>
// set of dataType, sort alphabetically
#include "dt/cft_defbrespchn.h"
#include "dt/cft_defddrcommand.h"
#include "dt/cft_defdqs.h"
#include "dt/cft_defwdatachn.h"

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'Target includes' algorithm generated code

// End of 'Target includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgTarget Function Target
//@{
///        \page dxpTarget
//@{
///    \brief Target function model start
class cfm_target : public cf_core::cf_function_container,
                  public cfm_target_dp_if {
public:
  /// cfm_target type define start
  /// relations typedef
  // set of relation, sort alphabetically. format: cf_type<dataType>
  // relation_name
  typedef cf_core::cf_message_queue<cft_defddrcommand> mq_DDRCommand_t;
  typedef cf_core::cf_message_queue<cft_defdqs> mq_DQs_t;

  /// ports typedef
  // set of port, sort alphabetically, format: cf_type<dataType> port_name
  typedef cf_core::cf_mq_initiator_socket<cfm_target, cfm_defaraddrchn>
      p_mq_ARADDRchn_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_target, cfm_defawaddrchn>
      p_mq_AWADDRchn_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_target, cfm_brespchn>
      p_mq_BRESPchn_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_target, cfm_rdatachn>
      p_mq_RDATAchn_t;
  typedef cf_core::cf_mq_initiator_socket<cfm_target, cfm_wdatachn>
      p_mq_WDATAchn_t;
  /// cfm_target type define end

  /// constructor
  cfm_target(sc_core::sc_module_name name);

  /// destructor
  virtual ~cfm_target(void);

public:
  /// \name input/output ports
  //@{
  // set of port, sort alphabetically. format: port_type port_name
  p_mq_ARADDRchn_t p_mq_ARADDRchn;
  p_mq_AWADDRchn_t p_mq_AWADDRchn;
  p_mq_BRESPchn_t p_mq_BRESPchn;
  p_mq_RDATAchn_t p_mq_RDATAchn;
  p_mq_WDATAchn_t p_mq_WDATAchn;
  //@}

public:
  /// \name functions
  //@{
  // set of model, sort alphabetically. format: model_type* model_name
  std::vector<cfm_memory *> Memory_vec;
  cfm_memorycontroller *MemoryController;
  //@}

protected:
  /// initialize attributes
  void cb_init_attributes(void);
  /// initialize definitions
  void cb_init_local_vars(void);

public:
  /// \name relations
  //@{
  // set of relation, sort alphabetically. format: relation_type relation_name
  std::vector<mq_DDRCommand_t *> mq_DDRCommand_vec;
  std::vector<mq_DQs_t *> mq_DQs_vec;
  //@}

  /// Model private fields start
  /// Model private fields end

  /// \name user-defined local declarations
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'Target local declarations' algorithm generated code

  // End of 'Target local declarations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
};
///    \brief Target function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_TARGET

//<#!@READ-ONLY-SECTION-END@!#>