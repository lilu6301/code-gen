/*!
 * \class cfm_cosimverilatorchiselapp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CoSimVerilatorChiselApp generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_COSIMVERILATORCHISELAPP
#define COFS_MODEL_COSIMVERILATORCHISELAPP

#include "cfm_cosimverilatorchiselapp_global.h"
#include "cfm_cosimverilatorchiselapp_global_types.h"
#include "cofluent.h"
#include "cfm_consumer.h"
#include "cfm_producer1.h"
#include "cfm_producer2.h"
#include "wrappers/cfm_data1_initiator.h"
#include "wrappers/cfm_data2_initiator.h"
#include "wrappers/cfm_sum_target.h"
#include "dpi/cofluent_dpi.h"
#include "dt/cft_defsum.h"
#include "dt/cft_defdata1.h"

#include "communication/cf_payload_tlm2.h"


class cfm_cosimverilatorchiselapp: public cf_core::cf_application {
public:
	typedef cf_core::cf_message_queue<cft_defdata1> mq_data1_t;
	typedef cf_core::cf_message_queue<cft_defdata1> mq_data2_t;
	typedef cf_core::cf_message_queue<cft_defsum> mq_sum_t;


	cfm_cosimverilatorchiselapp(sc_core::sc_module_name name);

	virtual ~cfm_cosimverilatorchiselapp(void);
	virtual void cb_before_elaboration(void);
	static void data1DPI(ContextHandle self, bool resetn,
	/* Write address channel.  */
	bool* sig_awvalid, bool sig_awready, sc_bv<ADDR_WIDTH_DATA1>* sig_awaddr, sc_bv<3>* sig_awprot,
	/* Write data channel.  */
	bool* sig_wvalid, bool sig_wready, sc_bv<DATA_WIDTH_DATA1>* sig_wdata, sc_bv<DATA_WIDTH_DATA1 / 8>* sig_wstrb,
	/* Write response channel.  */
	bool sig_bvalid, bool* sig_bready, sc_bv<2> sig_bresp,
	/* Read address channel.  */
	bool* sig_arvalid, bool sig_arready, sc_bv<ADDR_WIDTH_DATA1>* sig_araddr, sc_bv<3>* sig_arprot,
	/* Read data channel.  */
	bool sig_rvalid, bool* sig_rready, sc_bv<DATA_WIDTH_DATA1> sig_rdata, sc_bv<2> sig_rresp);
	static void data2DPI(ContextHandle self, bool resetn,
	/* Write address channel.  */
	bool* sig_awvalid, bool sig_awready, sc_bv<ADDR_WIDTH_DATA2>* sig_awaddr, sc_bv<3>* sig_awprot,
	/* Write data channel.  */
	bool* sig_wvalid, bool sig_wready, sc_bv<DATA_WIDTH_DATA2>* sig_wdata, sc_bv<DATA_WIDTH_DATA2 / 8>* sig_wstrb,
	/* Write response channel.  */
	bool sig_bvalid, bool* sig_bready, sc_bv<2> sig_bresp,
	/* Read address channel.  */
	bool* sig_arvalid, bool sig_arready, sc_bv<ADDR_WIDTH_DATA2>* sig_araddr, sc_bv<3>* sig_arprot,
	/* Read data channel.  */
	bool sig_rvalid, bool* sig_rready, sc_bv<DATA_WIDTH_DATA2> sig_rdata, sc_bv<2> sig_rresp);
	static void sumDPI(ContextHandle self, bool resetn,
	/* Write address channel.  */
	bool sig_awvalid, bool* sig_awready, sc_bv<ADDR_WIDTH_SUM> sig_awaddr, sc_bv<3> sig_awprot,
	/* Write data channel.  */
	bool sig_wvalid, bool* sig_wready, sc_bv<DATA_WIDTH_SUM> sig_wdata, sc_bv<DATA_WIDTH_SUM / 8> sig_wstrb,
	/* Write response channel.  */
	bool* sig_bvalid, bool sig_bready, sc_bv<2>* sig_bresp,
	/* Read address channel.  */
	bool sig_arvalid, bool* sig_arready, sc_bv<ADDR_WIDTH_SUM> sig_araddr, sc_bv<3> sig_arprot,
	/* Read data channel.  */
	bool* sig_rvalid, bool sig_rready, sc_bv<DATA_WIDTH_SUM>* sig_rdata, sc_bv<2>* sig_rresp);

	void cb_end_of_elaboration(void);
	void cb_end_of_simulation(void);

public:
	cfm_consumer* Consumer;
	cfm_producer1* Producer1;
	cfm_producer2* Producer2;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);

public:
	mq_data1_t mq_data1;
	mq_data2_t mq_data2;
	mq_sum_t mq_sum;

public:
	cfm_data1_initiator data1_initiator;
	cfm_data2_initiator data2_initiator;
	cfm_sum_target sum_target;
	sc_clock clk { "clk", 1, SC_NS, 0.5, 0, SC_NS, true };




};

#endif // COFS_MODEL_COSIMVERILATORCHISELAPP

