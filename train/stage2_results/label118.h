//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_cosimverilatorchiselapp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CoSimVerilatorChiselApp generated by C++
 * Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_COSIMVERILATORCHISELAPP
#define COFS_MODEL_COSIMVERILATORCHISELAPP

/// Model Header includes start
#include "cfm_consumer.h"
#include "cfm_cosimverilatorchiselapp_global.h"
#include "cfm_cosimverilatorchiselapp_global_types.h"
#include "cfm_producer1.h"
#include "cfm_producer2.h"
#include "cofluent.h"
#include "dpi/cofluent_dpi.h"
#include "wrappers/cfm_data1_initiator.h"
#include "wrappers/cfm_data2_initiator.h"
#include "wrappers/cfm_sum_target.h"
// set of dataType, sort alphabetically
#include "dt/cft_defdata1.h"
#include "dt/cft_defsum.h"

#include "communication/cf_payload_tlm2.h"
//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'CoSimVerilatorChiselApp includes' algorithm generated code

// End of 'CoSimVerilatorChiselApp includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgCoSimVerilatorChiselApp Function CoSimVerilatorChiselApp
//@{
///        \page dxpCoSimVerilatorChiselApp
//@{
///    \brief CoSimVerilatorChiselApp function model start
class cfm_cosimverilatorchiselapp : public cf_core::cf_application {
public:
  /// cfm_cosimverilatorchiselapp type define start
  /// relations typedef
  // set of relation, sort alphabetically. format: cf_type<dataType>
  // relation_name
  typedef cf_core::cf_message_queue<cft_defdata1> mq_data1_t;
  typedef cf_core::cf_message_queue<cft_defdata1> mq_data2_t;
  typedef cf_core::cf_message_queue<cft_defsum> mq_sum_t;

  /// cfm_cosimverilatorchiselapp type define end

  /// constructor
  cfm_cosimverilatorchiselapp(sc_core::sc_module_name name);

  /// destructor
  virtual ~cfm_cosimverilatorchiselapp(void);
  // axi lite master
  static void data1DPI(ContextHandle self, bool resetn,
                       /* Write address channel.  */
                       bool *sig_awvalid, bool sig_awready,
                       sc_bv<ADDR_WIDTH_DATA1> *sig_awaddr,
                       sc_bv<3> *sig_awprot,
                       /* Write data channel.  */
                       bool *sig_wvalid, bool sig_wready,
                       sc_bv<DATA_WIDTH_DATA1> *sig_wdata,
                       sc_bv<DATA_WIDTH_DATA1 / 8> *sig_wstrb,
                       /* Write response channel.  */
                       bool sig_bvalid, bool *sig_bready, sc_bv<2> sig_bresp,
                       /* Read address channel.  */
                       bool *sig_arvalid, bool sig_arready,
                       sc_bv<ADDR_WIDTH_DATA1> *sig_araddr,
                       sc_bv<3> *sig_arprot,
                       /* Read data channel.  */
                       bool sig_rvalid, bool *sig_rready,
                       sc_bv<DATA_WIDTH_DATA1> sig_rdata, sc_bv<2> sig_rresp);
  // axi lite master
  static void data2DPI(ContextHandle self, bool resetn,
                       /* Write address channel.  */
                       bool *sig_awvalid, bool sig_awready,
                       sc_bv<ADDR_WIDTH_DATA2> *sig_awaddr,
                       sc_bv<3> *sig_awprot,
                       /* Write data channel.  */
                       bool *sig_wvalid, bool sig_wready,
                       sc_bv<DATA_WIDTH_DATA2> *sig_wdata,
                       sc_bv<DATA_WIDTH_DATA2 / 8> *sig_wstrb,
                       /* Write response channel.  */
                       bool sig_bvalid, bool *sig_bready, sc_bv<2> sig_bresp,
                       /* Read address channel.  */
                       bool *sig_arvalid, bool sig_arready,
                       sc_bv<ADDR_WIDTH_DATA2> *sig_araddr,
                       sc_bv<3> *sig_arprot,
                       /* Read data channel.  */
                       bool sig_rvalid, bool *sig_rready,
                       sc_bv<DATA_WIDTH_DATA2> sig_rdata, sc_bv<2> sig_rresp);
  // axi lite client
  static void sumDPI(ContextHandle self, bool resetn,
                     /* Write address channel.  */
                     bool sig_awvalid, bool *sig_awready,
                     sc_bv<ADDR_WIDTH_SUM> sig_awaddr, sc_bv<3> sig_awprot,
                     /* Write data channel.  */
                     bool sig_wvalid, bool *sig_wready,
                     sc_bv<DATA_WIDTH_SUM> sig_wdata,
                     sc_bv<DATA_WIDTH_SUM / 8> sig_wstrb,
                     /* Write response channel.  */
                     bool *sig_bvalid, bool sig_bready, sc_bv<2> *sig_bresp,
                     /* Read address channel.  */
                     bool sig_arvalid, bool *sig_arready,
                     sc_bv<ADDR_WIDTH_SUM> sig_araddr, sc_bv<3> sig_arprot,
                     /* Read data channel.  */
                     bool *sig_rvalid, bool sig_rready,
                     sc_bv<DATA_WIDTH_SUM> *sig_rdata, sc_bv<2> *sig_rresp);

public:
  /// \name functions
  //@{
  // set of model, sort alphabetically. format: model_type* model_name
  cfm_consumer *Consumer;
  cfm_producer1 *Producer1;
  cfm_producer2 *Producer2;
  //@}

protected:
  /// initialize attributes
  void cb_init_attributes(void);
  /// initialize definitions
  void cb_init_local_vars(void);

public:
  /// \name relations
  //@{
  // set of relation, sort alphabetically. format: relation_type relation_name
  mq_data1_t mq_data1;
  mq_data2_t mq_data2;
  mq_sum_t mq_sum;
  //@}

public:
  /// \name wrappers
  //@{
  cfm_data1_initiator data1_initiator;
  cfm_data2_initiator data2_initiator;
  cfm_sum_target sum_target;
  //@}
  sc_clock clk{"clk", 1, SC_NS, 0.5, 0, SC_NS, true};

  /// Model private fields start
  /// Model private fields end

  /// \name user-defined local declarations
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CoSimVerilatorChiselApp local declarations' algorithm generated
  // code

  // End of 'CoSimVerilatorChiselApp local declarations' algorithm generated
  // code
  //<#!@READ-ONLY-SECTION-START@!#>
};
///    \brief CoSimVerilatorChiselApp function model end

//@}
//@}
#endif // COFS_MODEL_COSIMVERILATORCHISELAPP

//<#!@READ-ONLY-SECTION-END@!#>