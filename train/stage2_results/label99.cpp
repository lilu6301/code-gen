//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_mapdatatypeapiapp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of MapDataTypeAPIApp generated by C++ Generator for
 * SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_mapdatatypeapiapp.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'MapDataTypeAPIApp definitions' algorithm generated code

// End of 'MapDataTypeAPIApp definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_mapdatatypeapiapp ::cfm_mapdatatypeapiapp()
    : // instantiation of non-vector Event, MessageQueue, SharedVariable
      cf_application(name), mq_MsgQMap("MsgQMap") {
  cf_application::init();
  // instantiation of models
  ConsumerMap = new cfm_consumermap("ConsumerMap");
  ProducerMap = new cfm_producermap("ProducerMap");
  // connections
  // model connect to relation
  ConsumerMap->p_mq_MsgQMap(mq_MsgQMap.p_target_socket);
  // model connect to relation
  ProducerMap->p_mq_MsgQMap(mq_MsgQMap.p_target_socket);
  cf_application::elab_end();
}
//@}

/// \name destructor
//@{
cfm_mapdatatypeapiapp::~cfm_mapdatatypeapiapp(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'MapDataTypeAPIApp destructor' algorithm generated code

  // End of 'MapDataTypeAPIApp destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
  // deconstruct for models
  delete ConsumerMap;
  delete ProducerMap;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_mapdatatypeapiapp::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'MapDataTypeAPIApp pre elaboration' algorithm generated code

  // End of 'MapDataTypeAPIApp pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_mapdatatypeapiapp::cb_end_of_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'MapDataTypeAPIApp post elaboration' algorithm generated code

  // End of 'MapDataTypeAPIApp post elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_mapdatatypeapiapp::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'MapDataTypeAPIApp post simulation' algorithm generated code

  // End of 'MapDataTypeAPIApp post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_mapdatatypeapiapp::cb_init_attributes() {

  // initialize function attributes
  cfa_cycle_period.init(cf_expr_time(10, CF_NS));
  // initialize relations attributes
  mq_MsgQMap.cfa_send_time.init(cf_expr_duration(1, CF_NS));
  mq_MsgQMap.cfa_receive_time.init(cf_expr_duration(1, CF_NS));
  mq_MsgQMap.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
  mq_MsgQMap.cfa_queue_capacity.init((cf_nonzero_count)1);
  mq_MsgQMap.cfa_concurrency.init((cf_nonzero_count)1);
  mq_MsgQMap.cfa_send_threshold.init((cf_nonzero_count)1);
  mq_MsgQMap.cfa_receive_threshold.init((cf_nonzero_count)1);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_mapdatatypeapiapp::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'MapDataTypeAPIApp initializations' algorithm generated code

  // End of 'MapDataTypeAPIApp initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>