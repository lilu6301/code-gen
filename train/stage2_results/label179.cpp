//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_frontend
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_frontend.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_memorycontroller
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_frontend
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'FrontEnd definitions' algorithm generated code

//End of 'FrontEnd definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_frontend::cfm_frontend(sc_core::sc_module_name name) :
		cf_function_container(name), cfm_frontend_dp_if(), p_mq_DataRead(
				"p_mq_DataRead"), p_mq_WriteAck("p_mq_WriteAck"), p_mq_RDATAchn(
				"p_mq_RDATAchn"), p_mq_BRESPchn("p_mq_BRESPchn"), p_mq_MemReadRequest(
				"p_mq_MemReadRequest"), p_mq_MemWriteRequest(
				"p_mq_MemWriteRequest"), p_mq_ARADDRin("p_mq_ARADDRin"), p_mq_WDATAin(
				"p_mq_WDATAin"), p_mq_AWADDRin("p_mq_AWADDRin") {
	cf_function_container::init();
	ReadDataDriver = new cfm_readdatadriver("ReadDataDriver");
	ReadDriver = new cfm_readdriver("ReadDriver");
	SendWAckDriver = new cfm_sendwackdriver("SendWAckDriver");
	WriteDriver = new cfm_writedriver("WriteDriver");

	// connections
	ReadDataDriver->p_mq_RDATAchn(p_mq_RDATAchn);
	ReadDataDriver->p_mq_DataRead(p_mq_DataRead);

	ReadDriver->p_mq_MemReadRequest(p_mq_MemReadRequest);
	ReadDriver->p_mq_ARADDRin(p_mq_ARADDRin);

	SendWAckDriver->p_mq_WriteAck(p_mq_WriteAck);
	SendWAckDriver->p_mq_BRESPchn(p_mq_BRESPchn);

	WriteDriver->p_mq_MemWriteRequest(p_mq_MemWriteRequest);
	WriteDriver->p_mq_WDATAin(p_mq_WDATAin);
	WriteDriver->p_mq_AWADDRin(p_mq_AWADDRin);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd constructor' algorithm generated code

	//End of 'FrontEnd constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_frontend::~cfm_frontend(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd destructor' algorithm generated code

	//End of 'FrontEnd destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete ReadDataDriver;
	delete ReadDriver;
	delete SendWAckDriver;
	delete WriteDriver;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_frontend::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd pre elaboration' algorithm generated code

	//End of 'FrontEnd pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_frontend::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd post elaboration' algorithm generated code

	//End of 'FrontEnd post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_frontend::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd post simulation' algorithm generated code

	//End of 'FrontEnd post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_frontend::cb_init_attributes() {

// initialize function attributes
	cfa_cycle_period.init(cf_expr_time(10, CF_NS));

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_frontend::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FrontEnd initializations' algorithm generated code

	//End of 'FrontEnd initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>