//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_rfcomm_layer
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Bluetooth_IPs generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_rfcomm_layer.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_bt_stack
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_rfcomm_layer
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'RFCOMM_Layer definitions' algorithm generated code

//End of 'RFCOMM_Layer definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_rfcomm_layer::cfm_rfcomm_layer(sc_core::sc_module_name name) :
		cf_function_container(name), cfm_rfcomm_layer_dp_if(), p_mq_OBEX_In(
				"p_mq_OBEX_In"), p_mq_OBEX_Out("p_mq_OBEX_Out"), p_mq_RFCOMM_Out(
				"p_mq_RFCOMM_Out"), p_mq_RFCOMM_In("p_mq_RFCOMM_In"), mq_RFC_Cdts(
				"RFC_Cdts"), mq_RFC_Data("RFC_Data"), mq_RFC_Out1("RFC_Out1"), mq_RFC_Out2(
				"RFC_Out2") {
	cf_function_container::init();
	CreditsOrData = new cfm_creditsordata("CreditsOrData");
	RFCOMM_Receive = new cfm_rfcomm_receive("RFCOMM_Receive");
	RFCOMM_Send = new cfm_rfcomm_send("RFCOMM_Send");
	RFC_Out = new cfm_rfc_out("RFC_Out");

	// connections
	CreditsOrData->p_mq_RFC_Data(mq_RFC_Data.p_target_socket);
	CreditsOrData->p_mq_RFC_Cdts(mq_RFC_Cdts.p_target_socket);
	CreditsOrData->p_mq_RFCOMM_In(p_mq_RFCOMM_In);

	RFCOMM_Receive->p_mq_RFC_Data(mq_RFC_Data.p_target_socket);
	RFCOMM_Receive->p_mq_RFC_Out1(mq_RFC_Out1.p_target_socket);
	RFCOMM_Receive->p_mq_OBEX_In(p_mq_OBEX_In);

	RFCOMM_Send->p_mq_RFC_Cdts(mq_RFC_Cdts.p_target_socket);
	RFCOMM_Send->p_mq_RFC_Out2(mq_RFC_Out2.p_target_socket);
	RFCOMM_Send->p_mq_OBEX_Out(p_mq_OBEX_Out);

	RFC_Out->p_mq_RFC_Out1(mq_RFC_Out1.p_target_socket);
	RFC_Out->p_mq_RFC_Out2(mq_RFC_Out2.p_target_socket);
	RFC_Out->p_mq_RFCOMM_Out(p_mq_RFCOMM_Out);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer constructor' algorithm generated code

	//End of 'RFCOMM_Layer constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_rfcomm_layer::~cfm_rfcomm_layer(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer destructor' algorithm generated code

	//End of 'RFCOMM_Layer destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete CreditsOrData;
	delete RFCOMM_Receive;
	delete RFCOMM_Send;
	delete RFC_Out;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_rfcomm_layer::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer pre elaboration' algorithm generated code

	//End of 'RFCOMM_Layer pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_rfcomm_layer::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer post elaboration' algorithm generated code

	//End of 'RFCOMM_Layer post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_rfcomm_layer::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer post simulation' algorithm generated code

	//End of 'RFCOMM_Layer post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_rfcomm_layer::cb_init_attributes() {

// initialize function attributes
	cfa_cycle_period.init(cf_expr_time(10, CF_NS));
// initialize relations attributes
	mq_RFC_Cdts.cfa_send_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Cdts.cfa_receive_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Cdts.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_RFC_Cdts.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_RFC_Cdts.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_RFC_Data.cfa_send_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Data.cfa_receive_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Data.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_RFC_Data.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_RFC_Data.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_RFC_Out1.cfa_send_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Out1.cfa_receive_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Out1.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_RFC_Out1.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_RFC_Out1.cfa_concurrency.init((cf_nonzero_count) 1);
	mq_RFC_Out2.cfa_send_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Out2.cfa_receive_time.init(cf_expr_duration(0, CF_NS));
	mq_RFC_Out2.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
	mq_RFC_Out2.cfa_queue_capacity.init((cf_nonzero_count) 1);
	mq_RFC_Out2.cfa_concurrency.init((cf_nonzero_count) 1);

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_rfcomm_layer::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'RFCOMM_Layer initializations' algorithm generated code

	//End of 'RFCOMM_Layer initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>