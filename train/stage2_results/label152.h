//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_clientside
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_CLIENTSIDE
#define COFS_MODEL_DDRMEMORY_CLIENTSIDE

/// Model Header includes start
#include <vector>
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_clientside_dp_if.h"
#include "cfm_device.h"
#include "cfm_rddmux.h"
#include "cfm_wrdmux.h"
#include "dt/cft_defrdatachn.h"
#include "dt/cft_defaraddrchn.h"
#include "dt/cft_defbrespchn.h"
#include "dt/cft_defwdatachn.h"
#include "dt/cft_defawaddrchn.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'ClientSide includes' algorithm generated code

//End of 'ClientSide includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgClientSide Function ClientSide
//@{
///        \page dxpClientSide
//@{
///    \brief ClientSide function model start
class cfm_clientside: public cf_core::cf_function_container, public cfm_clientside_dp_if {
public:
	/// cfm_clientside type define start
	/// relations typedef
	typedef cf_core::cf_message_queue<cft_defbrespchn> mq_BRESPin_t;
	typedef cf_core::cf_message_queue<cft_defrdatachn> mq_RDATAin_t;

	/// ports typedef
	typedef cf_core::cf_mq_initiator_socket<cfm_clientside, cft_defrdatachn> p_mq_RDATAchn_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_clientside, cft_defaraddrchn> p_mq_ARADDRchn_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_clientside, cft_defbrespchn> p_mq_BRESPchn_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_clientside, cft_defwdatachn> p_mq_WDATAchn_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_clientside, cft_defawaddrchn> p_mq_AWADDRchn_t;
	/// cfm_clientside type define end

	/// constructor
	cfm_clientside(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_clientside(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
	p_mq_RDATAchn_t p_mq_RDATAchn;
	std::vector<p_mq_ARADDRchn_t*> p_mq_ARADDRchn_vec;
	p_mq_BRESPchn_t p_mq_BRESPchn;
	std::vector<p_mq_WDATAchn_t*> p_mq_WDATAchn_vec;
	std::vector<p_mq_AWADDRchn_t*> p_mq_AWADDRchn_vec;
	//@}

public:
	/// \name functions
	//@{
	std::vector<cfm_device*> Device_vec;
	cfm_rddmux* RDDmux;
	cfm_wrdmux* WRDmux;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

public:
	/// \name relations
	//@{
	std::vector<mq_BRESPin_t*> mq_BRESPin_vec;
	std::vector<mq_RDATAin_t*> mq_RDATAin_vec;
	//@}

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'ClientSide local declarations' algorithm generated code

	//End of 'ClientSide local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief ClientSide function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_CLIENTSIDE

//<#!@READ-ONLY-SECTION-END@!#>