
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_broadcastnetwork
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator
 * for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_broadcastnetwork.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_softwaredefinedradioapp
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_broadcastnetwork
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'BroadcastNetwork definitions' algorithm generated code

// End of 'BroadcastNetwork definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_broadcastnetwork : cf_function(name),
                       cfm_broadcastnetwork_dp_if(),
                       p_ev_BurstClock("p_ev_BurstClock"),
                       p_mq_NetToDVB("p_mq_NetToDVB"),
                       p_mq_VideoNet("p_mq_VideoNet"),
                       p_sv_VideoFiles("p_sv_VideoFiles") {
  cf_function::init();
  // connections
  cf_function::elab_end();
}
//@}

/// \name destructor
//@{
cfm_broadcastnetwork::~cfm_broadcastnetwork(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BroadcastNetwork destructor' algorithm generated code

  // End of 'BroadcastNetwork destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_broadcastnetwork::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BroadcastNetwork pre elaboration' algorithm generated code

  // End of 'BroadcastNetwork pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_broadcastnetwork::cb_end_of_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BroadcastNetwork post elaboration' algorithm generated code

  // End of 'BroadcastNetwork post elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_broadcastnetwork::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BroadcastNetwork post simulation' algorithm generated code

  // End of 'BroadcastNetwork post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_broadcastnetwork::cb_init_attributes() {

  // initialize function attributes
  cfa_cycle_period.init(cf_expr_time(10, CF_NS));
  cfa_scope.init(CF_FCT_SYSTEM);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_broadcastnetwork::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'BroadcastNetwork initializations' algorithm generated code
  ClockCounter = 0;
  // End of 'BroadcastNetwork initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>