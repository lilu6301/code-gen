
/*
 * \class cfm_readdatadriver
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_readdatadriver.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_ddrmemory
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_readdatadriver
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_readdatadriver::cfm_readdatadriver(sc_core::sc_module_name name)
cf_function(name)
, cfm_readdatadriver_dp_if()
, p_mq_RDATAchn("p_mq_RDATAchn")
, p_mq_DataRead("p_mq_DataRead")

{
	cf_function::init();



	cf_function::elab_end();
}

cfm_readdatadriver::~cfm_readdatadriver(void) {

}

void cfm_readdatadriver::cb_before_elaboration(void) {

}

void cfm_readdatadriver::cb_end_of_elaboration(void) {

}

void cfm_readdatadriver::cb_end_of_simulation(void) {

}

void cfm_readdatadriver::cb_init_attributes() {

	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}

void cfm_readdatadriver::cb_init_local_vars(void) {

	remainingDataSize = 0;
	transId = 0;
	dma_size = 64;
}


