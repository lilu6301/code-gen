
/*
 * \class cfm_swinterface
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of MyApplication generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_swinterface.h"
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

void cfm_swinterface::storeOutputFrame(DefFrame* frame) {
	frame_memory.push_back(*frame);
	processedFrameCount.write(processedFrameCount.read() + 1);
	raise_interrupt_int("newFrameInt");
}

cfm_swinterface::cfm_swinterface(sc_core::sc_module_name name)
cf_dpv_container(name)
, cfm_swinterface_dp_if()
, p_ev_startProcess("p_ev_startProcess")
, p_mq_inputFrame("p_mq_inputFrame")
, p_ev_newFrame("p_ev_newFrame")
, p_sv_processingMode("p_sv_processingMode")

{
	cf_dpv_container::init();



	cfa_endianess.init(cf_dt::CF_DPV_ENDIANESS_BIG
	);
	set_address(0x10);

	inputFrame_trans.set_data_ptr(&inputFrame);
	processingMode_trans.set_data_ptr(&processingMode);

	cf_dpv_container::elab_end();
}

cfm_swinterface::~cfm_swinterface(void) {

}

void cfm_swinterface::cb_before_elaboration(void) {

}

void cfm_swinterface::cb_init_attributes() {

	return;
}

void cfm_swinterface::cb_init_local_vars(void) {


}


