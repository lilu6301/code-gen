//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_applicationvectordatatype
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of ApplicationVectorDataType generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_APPLICATIONVECTORDATATYPE
#define COFS_MODEL_APPLICATIONVECTORDATATYPE

/// Model Header includes start
#include "cfm_applicationvectordatatype_global.h"
#include "cfm_applicationvectordatatype_global_types.h"
#include "cofluent.h"
#include "cfm_consumer.h"
#include "cfm_processing.h"
#include "cfm_producer.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'ApplicationVectorDataType includes' algorithm generated code

//End of 'ApplicationVectorDataType includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgApplicationVectorDataType Function ApplicationVectorDataType
//@{
///        \page dxpApplicationVectorDataType
//@{
///    \brief ApplicationVectorDataType function model start
class cfm_applicationvectordatatype: public cf_core::cf_application {
public:
	/// cfm_applicationvectordatatype type define start
	/// relations typedef
//set of relation, sort alphabetically. format: cf_type<dataType> relation_name
	typedef cf_core::cf_message_queue<cf_core::cf_payload_vector> mq_user_data_in_t;
	typedef cf_core::cf_message_queue<cf_core::cf_payload_vector> mq_user_data_out_t;

	/// cfm_applicationvectordatatype type define end

	/// constructor
	cfm_applicationvectordatatype(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_applicationvectordatatype(void);
	virtual void cb_before_elaboration(void);

	void cb_end_of_elaboration(void);
	void cb_end_of_simulation(void);

public:
	/// \name functions
	//@{
//set of model, sort alphabetically. format: model_type* model_name
	cfm_consumer* Consumer;
	cfm_processing* Processing;
	cfm_producer* Producer;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

public:
	/// \name relations
	//@{
//set of relation, sort alphabetically. format: relation_type relation_name
	mq_user_data_in_t mq_user_data_in;
	mq_user_data_out_t mq_user_data_out;
	//@}

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'ApplicationVectorDataType local declarations' algorithm generated code

	//End of 'ApplicationVectorDataType local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief ApplicationVectorDataType function model end

//@}
//@}
#endif // COFS_MODEL_APPLICATIONVECTORDATATYPE

//<#!@READ-ONLY-SECTION-END@!#>