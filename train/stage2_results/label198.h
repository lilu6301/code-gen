//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_arbitration
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_ARBITRATION
#define COFS_MODEL_DDRMEMORY_ARBITRATION

/// Model Header includes start
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_arbitration_dp_if.h"
//set of dataType, sort alphabetically
#include "dt/cft_deflistrequestsptr.h"
#include "dt/cft_defrequestinformation.h"
#include "dt/cft_defrequests2memory.h"
#include "dt/cft_defwriteack.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'Arbitration includes' algorithm generated code

//End of 'Arbitration includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgArbitration Function Arbitration
//@{
///        \page dxpArbitration
//@{
///    \brief Arbitration function model start
class cfm_arbitration: public cf_core::cf_function, public cfm_arbitration_dp_if {
public:
	/// cfm_arbitration type define start

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_ev_initiator_socket<cfm_arbitration> p_ev_RequestCounter_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration,
			cft_defrequestinformation> p_mq_RequestInformation_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration,
			cft_defrequests2memory> p_mq_Requests2Memory_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_arbitration, cft_defwriteack> p_mq_WriteAck_t;
	typedef cf_core::cf_sv_initiator_socket<cfm_arbitration,
			cft_deflistrequestsptr> p_sv_ListRequestsPtr_t;
	/// cfm_arbitration type define end

	/// constructor
	cfm_arbitration(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_arbitration(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_ev_RequestCounter_t p_ev_RequestCounter;
	p_mq_RequestInformation_t p_mq_RequestInformation;
	p_mq_Requests2Memory_t p_mq_Requests2Memory;
	p_mq_WriteAck_t p_mq_WriteAck;
	p_sv_ListRequestsPtr_t p_sv_ListRequestsPtr;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'Arbitration local declarations' algorithm generated code
	DefListRequestsPtr SelectedRequestPtr;
	DefListRequestsPtr CurrentRequestPtr;
	DefListRequestsPtr NextRequestPtr;
	int memID;
	int RemainingRequests;
	int BurstID;
	int RequestID;
	bool RequestIDerror;
	int NbRequestsCk;
	DefMemCmd CMDRef;
	DefMemCmd CMDCurrent;
	int NbMemoryTransactions;
	bool SendFastAck;
	//End of 'Arbitration local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief Arbitration function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_ARBITRATION

//<#!@READ-ONLY-SECTION-END@!#>