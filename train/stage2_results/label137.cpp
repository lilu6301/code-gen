//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_automatedpayloadtrackers
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of AutomatedPayloadTrackers generated by C++
 * Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_automatedpayloadtrackers.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'AutomatedPayloadTrackers definitions' algorithm generated code

// End of 'AutomatedPayloadTrackers definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_automatedpayloadtrackers ::cfm_automatedpayloadtrackers()
    : // instantiation of non-vector Event, MessageQueue, SharedVariable
      cf_application(name), mq_M1_1("M1_1"), mq_M1_2("M1_2"), mq_M1_3("M1_3"),
      mq_M2_1("M2_1"), mq_M2_2("M2_2") {
  cf_application::init();
  // instantiation of models
  C1 = new cfm_c1("C1");
  C2 = new cfm_c2("C2");
  F12 = new cfm_f12("F12");
  F2 = new cfm_f2("F2");
  P1 = new cfm_p1("P1");
  P2 = new cfm_p2("P2");
  // connections
  // model connect to relation
  C1->p_mq_M1_3(mq_M1_3.p_target_socket);
  // model connect to relation
  C2->p_mq_M2_2(mq_M2_2.p_target_socket);
  // model connect to relation
  F12->p_mq_M1_1(mq_M1_1.p_target_socket);
  F12->p_mq_M1_2(mq_M1_2.p_target_socket);
  F12->p_mq_M2_1(mq_M2_1.p_target_socket);
  F12->p_mq_M2_2(mq_M2_2.p_target_socket);
  // model connect to relation
  F2->p_mq_M1_2(mq_M1_2.p_target_socket);
  F2->p_mq_M1_3(mq_M1_3.p_target_socket);
  // model connect to relation
  P1->p_mq_M1_1(mq_M1_1.p_target_socket);
  // model connect to relation
  P2->p_mq_M2_1(mq_M2_1.p_target_socket);
  cf_application::elab_end();
}
//@}

/// \name destructor
//@{
cfm_automatedpayloadtrackers::~cfm_automatedpayloadtrackers(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'AutomatedPayloadTrackers destructor' algorithm generated code

  // End of 'AutomatedPayloadTrackers destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
  // deconstruct for models
  delete C1;
  delete C2;
  delete F12;
  delete F2;
  delete P1;
  delete P2;
}

//@{
void cfm_automatedpayloadtrackers::cb_init_attributes() {

  // initialize function attributes

  return;
}
//@}

//@{
void cfm_automatedpayloadtrackers::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'Router25 initializations' algorithm generated code

  // End of 'Router25 initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}
//<#!@READ-ONLY-SECTION-END@!#>