
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_testbench
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CompleteDevice generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_testbench.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_completedevice
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_testbench
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'testBench definitions' algorithm generated code

//End of 'testBench definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_testbench::cfm_testbench(sc_core::sc_module_name name) :
		cf_function(name), cfm_testbench_dp_if(), dpv("dpv"), p_ev_newFrame(
				"p_ev_newFrame"), p_sv_inputStream("p_sv_inputStream"), p_sv_outputStream(
				"p_sv_outputStream") {
	cf_function::init();

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench constructor' algorithm generated code

	//End of 'testBench constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function::elab_end();
}
//@}

/// \name destructor
//@{
cfm_testbench::~cfm_testbench(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench destructor' algorithm generated code

	//End of 'testBench destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_testbench::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench pre elaboration' algorithm generated code

	//End of 'testBench pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_testbench::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench post elaboration' algorithm generated code

	//End of 'testBench post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_testbench::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench post simulation' algorithm generated code

	//End of 'testBench post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_testbench::cb_init_attributes() {

// initialize function attributes
	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_testbench::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'testBench initializations' algorithm generated code
	movieInputFile = "../../../video_file/susie422.40.qcif";
	cf_trace_report("TEST file name = %s", movieInputFile.c_str());
	ProducerNbPicture = 0;
	ConsumerNbPicture = 0;
	new_mode = REVERT_MODE;
	//End of 'testBench initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>