
//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_requesting
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_REQUESTING
#define COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_REQUESTING

/// Model Header includes start
#include "cfm_softwaredefinedradioapp_global.h"
#include "cfm_softwaredefinedradioapp_global_types.h"
#include "cofluent.h"
#include "dp/cfm_requesting_dp_if.h"
#include "dt/cft_defcall.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'Requesting includes' algorithm generated code

//End of 'Requesting includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgRequesting Function Requesting
//@{
///        \page dxpRequesting
//@{
///    \brief Requesting function model start
class cfm_requesting: public cf_core::cf_function, public cfm_requesting_dp_if {
public:
	/// cfm_requesting type define start

	/// ports typedef
	typedef cf_core::cf_mq_initiator_socket<cfm_requesting, cft_defcall> p_mq_Request_t;
	/// cfm_requesting type define end

	/// constructor
	cfm_requesting(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_requesting(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
	p_mq_Request_t p_mq_Request;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'Requesting local declarations' algorithm generated code

	//End of 'Requesting local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief Requesting function model end

//@}
//@}
#endif // COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_REQUESTING

//<#!@READ-ONLY-SECTION-END@!#>