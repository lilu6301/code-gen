
/*
 * \class cfm_sendwackdriver
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#include "cfm_sendwackdriver.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_ddrmemory
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_sendwackdriver
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;



cfm_sendwackdriver::cfm_sendwackdriver(sc_core::sc_module_name name)
cf_function(name)
, cfm_sendwackdriver_dp_if()
, p_mq_WriteAck("p_mq_WriteAck")
, p_mq_BRESPchn("p_mq_BRESPchn")

{
	cf_function::init();



	cf_function::elab_end();
}

cfm_sendwackdriver::~cfm_sendwackdriver(void) {

}

void cfm_sendwackdriver::cb_before_elaboration(void) {

}

void cfm_sendwackdriver::cb_end_of_elaboration(void) {

}

void cfm_sendwackdriver::cb_end_of_simulation(void) {

}

void cfm_sendwackdriver::cb_init_attributes() {

	cfa_scope.init(CF_FCT_SYSTEM);

	return;
}

void cfm_sendwackdriver::cb_init_local_vars(void) {

	isBypass = false;
	bus_width = DP_DDR_BUS_WIDTH.get_value().to_scalar(CF_BYTE);
	bus_efficiency = DP_DDR_EFFICIENCY.get_value();
	frequency_map_GL[MSCache] = DP_DDR_INIT_FREQ.get_value().to_scalar(CF_HZ);
	latency = (float) DP_DDR_LOCAL_LATENCY.get_value().to_scalar(CF_CYCLE);
}


