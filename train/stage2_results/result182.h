
//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_memorycommandexecution
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of DDRMemory generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_DDRMEMORY_MEMORYCOMMANDEXECUTION
#define COFS_MODEL_DDRMEMORY_MEMORYCOMMANDEXECUTION

/// Model Header includes start
#include "cfm_ddrmemory_global.h"
#include "cfm_ddrmemory_global_types.h"
#include "cofluent.h"
#include "dp/cfm_memorycommandexecution_dp_if.h"
//set of dataType, sort alphabetically
#include "dt/cft_defdq.h"
#include "dt/cft_defddrcommand.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'MemoryCommandExecution includes' algorithm generated code

//End of 'MemoryCommandExecution includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgMemoryCommandExecution Function MemoryCommandExecution
//@{
///        \page dxpMemoryCommandExecution
//@{
///    \brief MemoryCommandExecution function model start
class cfm_memorycommandexecution: public cf_core::cf_function,
		public cfm_memorycommandexecution_dp_if {
public:
	/// cfm_memorycommandexecution type define start

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_mq_initiator_socket<cfm_memorycommandexecution,
			cft_defdq> p_mq_DQs_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_memorycommandexecution,
			cft_defddrcommand> p_mq_DDRAction_t;
	/// cfm_memorycommandexecution type define end

	/// constructor
	cfm_memorycommandexecution(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_memorycommandexecution(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_mq_DQs_t p_mq_DQs;
	p_mq_DDRAction_t p_mq_DDRAction;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'MemoryCommandExecution local declarations' algorithm generated code
	int remainingDataSize;
	int transId;
	int dma_size;

	DEVICEIDTYPE message_targetid;
	DEVICEIDTYPE message_sourceid;
	OPERATIONTYPE message_operation;

	cf_dt::cf_time transfer_time;
	cf_dt::cf_time message_time_stamp;
	cf_dt::cf_data_size message_size;
	cf_dt::cf_throughput bus_throughput;
	cf_dt::cf_time total_internal_bus_running_time;
	double internal_bus_usage;
	cf_dt::cf_data_size total_data_processed;
	int total_nb_of_packets_processed;

	int memory_read_data_size;
	int memory_write_data_size;
	int memory_dma_size;

	float total_memory_improvement;
	int dma_write_to_memory;
	int dma_read_from_memory;
	int total_dma;

	int memory_read_transid;
	int memory_write_transid;
	int total_memory_transid;

	int num_of_memory_channel;
	int num_of_memory_bank;

	int channel_index;
	int bank_index;

	int num_of_memory_channel_in_bank;

	int num_of_memory_channel_outside_bank;
	int num_of_memory_channel_outside_memory;

	int memory_channel_priority;
	int memory_bank_priority;

	int num_of_dma_write_to_memory;
	int num_of_dma_read_from_memory;
	int total_dma;

	int memory_read_priority;
	int memory_write_priority;
	int memory_dma_priority;

	cf_dt::cf_time oldest_message_time_stamp;
	//End of 'MemoryCommandExecution local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief MemoryCommandExecution function model end

//@}
//@}
#endif // COFS_MODEL_DDRMEMORY_MEMORYCOMMANDEXECUTION

//<#!@READ-ONLY-SECTION-END@!#>