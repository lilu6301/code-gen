//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_filesystem
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Bluetooth_IPs generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_BLUETOOTH_IPS_FILESYSTEM
#define COFS_MODEL_BLUETOOTH_IPS_FILESYSTEM

/// Model Header includes start
#include "cfm_bluetooth_ips_global.h"
#include "cfm_bluetooth_ips_global_types.h"
#include "cofluent.h"
#include "dp/cfm_filesystem_dp_if.h"
//set of dataType, sort alphabetically
#include "dt/cft_defdata.h"
#include "dt/cft_defdatain.h"
#include "dt/cft_defdataout.h"
#include "dt/cft_defreadwrite.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'FileSystem includes' algorithm generated code

//End of 'FileSystem includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgFileSystem Function FileSystem
//@{
///        \page dxpFileSystem
//@{
///    \brief FileSystem function model start
class cfm_filesystem: public cf_core::cf_function, public cfm_filesystem_dp_if {
public:
	/// cfm_filesystem type define start

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_ev_initiator_socket<cfm_filesystem> p_ev_WrOK_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_filesystem, cft_defdatain> p_mq_DataIn_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_filesystem, cft_defdataout> p_mq_DataOut_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_filesystem, cft_defreadwrite> p_mq_ReadWrite_t;
	typedef cf_core::cf_sv_initiator_socket<cfm_filesystem, cft_defdata> p_sv_Data_t;
	/// cfm_filesystem type define end

	/// constructor
	cfm_filesystem(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_filesystem(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_ev_WrOK_t p_ev_WrOK;
	p_mq_DataIn_t p_mq_DataIn;
	p_mq_DataOut_t p_mq_DataOut;
	p_mq_ReadWrite_t p_mq_ReadWrite;
	p_sv_Data_t p_sv_Data;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'FileSystem local declarations' algorithm generated code
	//stop flag is activated when file has been read entirely
	bool stop;
	//read/write flag
	int wr;
	//file size
	int f_size;
	//size of a part
	int p_size;
	//read operation duration in ms
	double op_read_duration;
	//write operation duration in ms
	double op_write_duration;
	//first read flag
	bool first_read;
	//End of 'FileSystem local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief FileSystem function model end

//@}
//@}
#endif // COFS_MODEL_BLUETOOTH_IPS_FILESYSTEM

//<#!@READ-ONLY-SECTION-END@!#>