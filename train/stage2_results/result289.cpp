
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_customizedschedulerapp
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CustomizedSchedulerApp generated by C++ Generator
 * for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_customizedschedulerapp.h"
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'CustomizedSchedulerApp definitions' algorithm generated code

// End of 'CustomizedSchedulerApp definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_customizedschedulerapp : cf_application(name), mq_MsgQ("MsgQ") {
  cf_application::init();
  // instantiation of models
  for (cf_count i = 0; i < (cf_count)(1 + 1); i++) {
    cfm_consumer *module =
        new cfm_consumer(cf_string("Consumer[%d]", i).c_str());
    CF_ASSERT(module)
    Consumer_vec.push_back(module);
  }
  for (cf_count i = 0; i < (cf_count)(1 + 1); i++) {
    cfm_producer *module =
        new cfm_producer(cf_string("Producer[%d]", i).c_str());
    CF_ASSERT(module)
    Producer_vec.push_back(module);
  }
  // connections
  for (cf_count i = 0; i < (cf_count)(1 + 1); i++) {
    cfm_consumer *module = Consumer_vec[i];
    if (module != nullptr) {
      module->p_mq_MsgQ(mq_MemReadRequest.p_target_socket);
    }
  }
  for (cf_count i = 0; i < (cf_count)(1 + 1); i++) {
    cfm_producer *module = Producer_vec[i];
    if (module != nullptr) {
      module->p_mq_MsgQ(mq_MemReadRequest.p_target_socket);
    }
  }
  cf_application::elab_end();
}
//@}

/// \name destructor
//@{
cfm_customizedschedulerapp::~cfm_customizedschedulerapp(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CustomizedSchedulerApp destructor' algorithm generated code

  // End of 'CustomizedSchedulerApp destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
  // deconstruct for models
  for (vector<cfm_consumer *>::const_iterator vi = Consumer_vec.begin();
       vi != Consumer_vec.end(); vi++) {
    delete (*vi);
  }
  for (vector<cfm_producer *>::const_iterator vi = Producer_vec.begin();
       vi != Producer_vec.end(); vi++) {
    delete (*vi);
  }
}
//@}

/// \name pre-elaboration section
//@{
void cfm_customizedschedulerapp::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CustomizedSchedulerApp pre elaboration' algorithm generated code

  // End of 'CustomizedSchedulerApp pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_customizedschedulerapp::cb_end_of_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CustomizedSchedulerApp post elaboration' algorithm generated code

  // End of 'CustomizedSchedulerApp post elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_customizedschedulerapp::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CustomizedSchedulerApp post simulation' algorithm generated code

  // End of 'CustomizedSchedulerApp post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_customizedschedulerapp::cb_init_attributes() {

  // initialize function attributes
  cfa_cycle_period.init(cf_expr_time(10, CF_NS));
  // initialize relations attributes
  mq_MsgQ.cfa_send_time.init(cf_expr_duration(1, CF_NS));
  mq_MsgQ.cfa_receive_time.init(cf_expr_duration(1, CF_NS));
  mq_MsgQ.cfa_queue_policy.init(CF_MQ_POLICY_FIFO_FINITE);
  mq_MsgQ.cfa_queue_capacity.init((cf_nonzero_count)1);
  mq_MsgQ.cfa_concurrency.init((cf_nonzero_count)1);
  mq_MsgQ.cfa_send_threshold.init((cf_nonzero_count)1);
  mq_MsgQ.cfa_receive_threshold.init((cf_nonzero_count)1);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_customizedschedulerapp::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'CustomizedSchedulerApp initializations' algorithm generated code

  // End of 'CustomizedSchedulerApp initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>