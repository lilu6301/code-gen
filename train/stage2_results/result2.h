
//<#!@READ-ONLY-SECTION-START@!#>
/*!
 * \class cfm_mobilephone
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_MOBILEPHONE
#define COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_MOBILEPHONE

/// Model Header includes start
#include "cfm_softwaredefinedradioapp_global.h"
#include "cfm_softwaredefinedradioapp_global_types.h"
#include "cofluent.h"
#include "dp/cfm_mobilephone_dp_if.h"
#include "cfm_applicationlayer.h"
#include "cfm_callprotocolstack.h"
#include "cfm_controller.h"
#include "cfm_videoprocessstack.h"
//set of dataType, sort alphabetically
#include "dt/cft_defcall.h"
#include "dt/cft_defvideo.h"

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'MobilePhone includes' algorithm generated code

//End of 'MobilePhone includes' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>
/// Model Header includes end

///    \defgroup dxgMobilePhone Function MobilePhone
//@{
///        \page dxpMobilePhone
//@{
///    \brief MobilePhone function model start
class cfm_mobilephone: public cf_core::cf_function_container,
		public cfm_mobilephone_dp_if {
public:
	/// cfm_mobilephone type define start
	/// relations typedef
//set of relation, sort alphabetically. format: cf_type<dataType> relation_name
	typedef cf_core::cf_message_queue<cft_defcall> mq_AppToCtrl_t;
	typedef cf_core::cf_message_queue<cft_defcall> mq_AppToHTTP_t;
	typedef cf_core::cf_message_queue<cft_defcall> mq_HTTPToApp_t;
	typedef cf_core::cf_message_queue<cft_defvideo> mq_RTPToApp_t;

	/// ports typedef
//set of port, sort alphabetically, format: cf_type<dataType> port_name
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defvideo> p_mq_NetToDpv_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defcall> p_mq_NetToUMTS_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defcall> p_mq_Request_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defcall> p_mq_Response_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defcall> p_mq_UMTSToNet_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_mobilephone, cft_defvideo> p_mq_Video_t;
	/// cfm_mobilephone type define end

	/// constructor
	cfm_mobilephone(sc_core::sc_module_name name);

	/// destructor
	virtual ~cfm_mobilephone(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	/// \name input/output ports
	//@{
//set of port, sort alphabetically. format: port_type port_name
	p_mq_NetToDpv_t p_mq_NetToDpv;
	p_mq_NetToUMTS_t p_mq_NetToUMTS;
	p_mq_Request_t p_mq_Request;
	p_mq_Response_t p_mq_Response;
	p_mq_UMTSToNet_t p_mq_UMTSToNet;
	p_mq_Video_t p_mq_Video;
	//@}

public:
	/// \name functions
	//@{
//set of model, sort alphabetically. format: model_type* model_name
	cfm_applicationlayer* ApplicationLayer;
	cfm_callprotocolstack* CallProtocolStack;
	cfm_controller* Controller;
	cfm_videoprocessstack* VideoProtocolStack;
	//@}

protected:
	/// initialize attributes
	void cb_init_attributes(void);
	/// initialize definitions
	void cb_init_local_vars(void);

public:
	/// \name relations
	//@{
//set of relation, sort alphabetically. format: relation_type relation_name
	mq_AppToCtrl_t mq_AppToCtrl;
	mq_AppToHTTP_t mq_AppToHTTP;
	mq_HTTPToApp_t mq_HTTPToApp;
	mq_RTPToApp_t mq_RTPToApp;
	//@}

	/// Model private fields start
	/// Model private fields end

	/// \name user-defined local declarations
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'MobilePhone local declarations' algorithm generated code

	//End of 'MobilePhone local declarations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

};
///    \brief MobilePhone function model end

//@}
//@}
#endif // COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_MOBILEPHONE

//<#!@READ-ONLY-SECTION-END@!#>