//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_baseband_layer
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of Bluetooth_IPs generated by C++ Generator for SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_baseband_layer.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_bt_stack
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_baseband_layer
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
//Start of 'BaseBand_Layer definitions' algorithm generated code

//End of 'BaseBand_Layer definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_baseband_layer::cfm_baseband_layer(sc_core::sc_module_name name) :
		cf_function_container(name), cfm_baseband_layer_dp_if(), p_mq_BaseBand_Out(
				"p_mq_BaseBand_Out"), p_mq_L2CAP_Out("p_mq_L2CAP_Out"), p_mq_BaseBand_In(
				"p_mq_BaseBand_In"), p_mq_L2CAP_In("p_mq_L2CAP_In") {
	cf_function_container::init();
	BB_Receive = new cfm_bb_receive("BB_Receive");
	BB_Send = new cfm_bb_send("BB_Send");

	// connections
	BB_Receive->p_mq_BaseBand_In(p_mq_BaseBand_In);
	BB_Receive->p_mq_L2CAP_In(p_mq_L2CAP_In);

	BB_Send->p_mq_BaseBand_Out(p_mq_BaseBand_Out);
	BB_Send->p_mq_L2CAP_Out(p_mq_L2CAP_Out);

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer constructor' algorithm generated code

	//End of 'BaseBand_Layer constructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>

	cf_function_container::elab_end();
}
//@}

/// \name destructor
//@{
cfm_baseband_layer::~cfm_baseband_layer(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer destructor' algorithm generated code

	//End of 'BaseBand_Layer destructor' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
	delete BB_Receive;
	delete BB_Send;
}
//@}

/// \name pre-elaboration section
//@{
void cfm_baseband_layer::cb_before_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer pre elaboration' algorithm generated code

	//End of 'BaseBand_Layer pre elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_baseband_layer::cb_end_of_elaboration(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer post elaboration' algorithm generated code

	//End of 'BaseBand_Layer post elaboration' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_baseband_layer::cb_end_of_simulation(void) {
	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer post simulation' algorithm generated code

	//End of 'BaseBand_Layer post simulation' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_baseband_layer::cb_init_attributes() {

// initialize function attributes
	cfa_cycle_period.init(cf_expr_time(10, CF_NS));

	return;
}
//@}

/// \name initialize definitions
//@{
void cfm_baseband_layer::cb_init_local_vars(void) {

	//<#!@READ-ONLY-SECTION-END@!#>
	//Start of 'BaseBand_Layer initializations' algorithm generated code

	//End of 'BaseBand_Layer initializations' algorithm generated code
	//<#!@READ-ONLY-SECTION-START@!#>
}
//@}


//<#!@READ-ONLY-SECTION-END@!#>