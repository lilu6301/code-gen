
//<#!@READ-ONLY-SECTION-START@!#>
/*
 * \class cfm_mqtocommand
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of CompleteDevice generated by C++ Generator for
 * SystemC/TLM2
 */
/// Model Source includes start
#include "cfm_mqtocommand.h"
#ifdef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#undef COFLUENT_CONTAINER_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_CONTAINER_FUNCTION_CLASS_NAME cfm_device
#ifdef COFLUENT_SELF_FUNCTION_CLASS_NAME
#undef COFLUENT_SELF_FUNCTION_CLASS_NAME
#endif
#define COFLUENT_SELF_FUNCTION_CLASS_NAME cfm_mqtocommand
/// Model Source includes end
using namespace std;
using namespace sc_core;
using namespace cf_dt;
using namespace cf_pk;
using namespace cf_core;

//<#!@READ-ONLY-SECTION-END@!#>
// Start of 'mqToCommand definitions' algorithm generated code

// End of 'mqToCommand definitions' algorithm generated code
//<#!@READ-ONLY-SECTION-START@!#>

/// \name constructor
//@{
cfm_mqtocommand : cf_function(name),
                  cfm_mqtocommand_dp_if(),
                  p_mq_outputFrame("p_mq_outputFrame"),
                  storeFrame("storeFrame") {
  cf_function::init();
  // connections
  cf_function::elab_end();
}
//@}

/// \name destructor
//@{
cfm_mqtocommand::~cfm_mqtocommand(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'mqToCommand destructor' algorithm generated code

  // End of 'mqToCommand destructor' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name pre-elaboration section
//@{
void cfm_mqtocommand::cb_before_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'mqToCommand pre elaboration' algorithm generated code

  // End of 'mqToCommand pre elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-elaboration section
//@{
void cfm_mqtocommand::cb_end_of_elaboration(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'mqToCommand post elaboration' algorithm generated code

  // End of 'mqToCommand post elaboration' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name post-simulation section
//@{
void cfm_mqtocommand::cb_end_of_simulation(void) {
  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'mqToCommand post simulation' algorithm generated code

  // End of 'mqToCommand post simulation' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

/// \name initialize attributes
//@{
void cfm_mqtocommand::cb_init_attributes() {

  // initialize function attributes
  cfa_scope.init(CF_FCT_SYSTEM);

  return;
}
//@}

/// \name initialize definitions
//@{
void cfm_mqtocommand::cb_init_local_vars(void) {

  //<#!@READ-ONLY-SECTION-END@!#>
  // Start of 'mqToCommand initializations' algorithm generated code

  // End of 'mqToCommand initializations' algorithm generated code
  //<#!@READ-ONLY-SECTION-START@!#>
}
//@}

//<#!@READ-ONLY-SECTION-END@!#>