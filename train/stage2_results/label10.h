/*!
 * \class cfm_callprotocolstack
 * \brief Intel(R) CoFluent(TM) Studio - Intel Corporation
 * \details Simulation model of SoftwareDefinedRadioApp generated by C++ Generator for SystemC/TLM2
 */
#ifndef COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_CALLPROTOCOLSTACK
#define COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_CALLPROTOCOLSTACK

#include "cfm_softwaredefinedradioapp_global.h"
#include "cfm_softwaredefinedradioapp_global_types.h"
#include "cofluent.h"
#include "dp/cfm_callprotocolstack_dp_if.h"
#include "cfm_httptcp.h"
#include "cfm_ipcall.h"
#include "cfm_umts.h"
#include "dt/cft_defcall.h"



class cfm_callprotocolstack: public cf_core::cf_function_container, public cfm_callprotocolstack_dp_if {
public:
	typedef cf_core::cf_message_queue<cft_defcall> mq_HTTPToIP_t;
	typedef cf_core::cf_message_queue<cft_defcall> mq_IPToHTTP_t;
	typedef cf_core::cf_message_queue<cft_defcall> mq_IPToUMTS_t;
	typedef cf_core::cf_message_queue<cft_defcall> mq_UMTSToIP_t;

	typedef cf_core::cf_mq_initiator_socket<cfm_callprotocolstack, cft_defcall> p_mq_NetToUMTS_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_callprotocolstack, cft_defcall> p_mq_UMTSToNet_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_callprotocolstack, cft_defcall> p_mq_HTTPToApp_t;
	typedef cf_core::cf_mq_initiator_socket<cfm_callprotocolstack, cft_defcall> p_mq_AppToHTTP_t;

	cfm_callprotocolstack(sc_core::sc_module_name name);

	virtual ~cfm_callprotocolstack(void);
	virtual void cb_before_elaboration(void);
	virtual void cb_end_of_elaboration(void);
	virtual void cb_end_of_simulation(void);

public:
	p_mq_NetToUMTS_t p_mq_NetToUMTS;
	p_mq_UMTSToNet_t p_mq_UMTSToNet;
	p_mq_HTTPToApp_t p_mq_HTTPToApp;
	p_mq_AppToHTTP_t p_mq_AppToHTTP;

public:
	cfm_httptcp* HTTPTCP;
	cfm_ipcall* IPCall;
	cfm_umts* UMTS;

protected:
	void cb_init_attributes(void);
	void cb_init_local_vars(void);

public:
	mq_HTTPToIP_t mq_HTTPToIP;
	mq_IPToHTTP_t mq_IPToHTTP;
	mq_IPToUMTS_t mq_IPToUMTS;
	mq_UMTSToIP_t mq_UMTSToIP;




};

#endif // COFS_MODEL_SOFTWAREDEFINEDRADIOAPP_CALLPROTOCOLSTACK

